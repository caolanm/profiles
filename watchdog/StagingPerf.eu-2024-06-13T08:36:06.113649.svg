<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="630.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >StagingPerf.eu Watchdog Profile (2024-06-13T08:36:06.113649)</text>
<text id="details" x="10.00" y="613" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="613" > </text>
<g id="frames">
<g >
<title>ZipFile::StaticGetCipher (1 samples, 5.00%)</title><rect x="364.0" y="165" width="59.0" height="15.0" fill="rgb(218,95,15)" rx="2" ry="2" />
<text  x="367.00" y="175.5" >ZipFil..</text>
</g>
<g >
<title>VclBuilder::makeObject (3 samples, 15.00%)</title><rect x="128.0" y="501" width="177.0" height="15.0" fill="rgb(243,118,38)" rx="2" ry="2" />
<text  x="131.00" y="511.5" >VclBuilder::makeObject</text>
</g>
<g >
<title>ucbhelper::Content::isDocument (3 samples, 15.00%)</title><rect x="1013.0" y="277" width="177.0" height="15.0" fill="rgb(243,164,42)" rx="2" ry="2" />
<text  x="1016.00" y="287.5" >ucbhelper::Content::isD..</text>
</g>
<g >
<title>syscall (3 samples, 15.00%)</title><rect x="1013.0" y="53" width="177.0" height="15.0" fill="rgb(240,199,15)" rx="2" ry="2" />
<text  x="1016.00" y="63.5" >syscall</text>
</g>
<g >
<title>rtl_digest_getHMAC_SHA1 (1 samples, 5.00%)</title><rect x="305.0" y="133" width="59.0" height="15.0" fill="rgb(232,118,51)" rx="2" ry="2" />
<text  x="308.00" y="143.5" >rtl_di..</text>
</g>
<g >
<title>cppuhelper::ServiceManager::Data::Implementation::createInstanceWithArguments (3 samples, 15.00%)</title><rect x="128.0" y="373" width="177.0" height="15.0" fill="rgb(220,223,14)" rx="2" ry="2" />
<text  x="131.00" y="383.5" >cppuhelper::ServiceMana..</text>
</g>
<g >
<title>DOM::CNode::~CNode (3 samples, 15.00%)</title><rect x="600.0" y="277" width="177.0" height="15.0" fill="rgb(250,101,29)" rx="2" ry="2" />
<text  x="603.00" y="287.5" >DOM::CNode::~CNode</text>
</g>
<g >
<title>cppuhelper::ServiceManager::createInstanceWithArgumentsAndContext (3 samples, 15.00%)</title><rect x="128.0" y="389" width="177.0" height="15.0" fill="rgb(206,152,34)" rx="2" ry="2" />
<text  x="131.00" y="399.5" >cppuhelper::ServiceMana..</text>
</g>
<g >
<title>comphelper::BackupFileHelper::tryPushExtensionInfo (6 samples, 30.00%)</title><rect x="423.0" y="421" width="354.0" height="15.0" fill="rgb(220,64,54)" rx="2" ry="2" />
<text  x="426.00" y="431.5" >comphelper::BackupFileHelper::tryPushExtensionInfo</text>
</g>
<g >
<title>rtl_digest_getHMAC_SHA1 (1 samples, 5.00%)</title><rect x="364.0" y="117" width="59.0" height="15.0" fill="rgb(242,141,48)" rx="2" ry="2" />
<text  x="367.00" y="127.5" >rtl_di..</text>
</g>
<g >
<title>syscall (3 samples, 15.00%)</title><rect x="836.0" y="133" width="177.0" height="15.0" fill="rgb(222,164,0)" rx="2" ry="2" />
<text  x="839.00" y="143.5" >syscall</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="777.0" y="309" width="59.0" height="15.0" fill="rgb(208,155,2)" rx="2" ry="2" />
<text  x="780.00" y="319.5" >handle..</text>
</g>
<g >
<title>DOM::CElement::~CElement (3 samples, 15.00%)</title><rect x="600.0" y="293" width="177.0" height="15.0" fill="rgb(240,93,6)" rx="2" ry="2" />
<text  x="603.00" y="303.5" >DOM::CElement::~CElement</text>
</g>
<g >
<title>SpellCheckerDispatcher::isValid (3 samples, 15.00%)</title><rect x="836.0" y="261" width="177.0" height="15.0" fill="rgb(248,100,25)" rx="2" ry="2" />
<text  x="839.00" y="271.5" >SpellCheckerDispatcher:..</text>
</g>
<g >
<title>handleUserProfileSignal (3 samples, 15.00%)</title><rect x="836.0" y="149" width="177.0" height="15.0" fill="rgb(240,56,1)" rx="2" ry="2" />
<text  x="839.00" y="159.5" >handleUserProfileSignal</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (3 samples, 15.00%)</title><rect x="1013.0" y="341" width="177.0" height="15.0" fill="rgb(206,198,26)" rx="2" ry="2" />
<text  x="1016.00" y="351.5" >std::__introsort_loop&lt;_..</text>
</g>
<g >
<title>ucbhelper::Content::openStream (1 samples, 5.00%)</title><rect x="777.0" y="501" width="59.0" height="15.0" fill="rgb(245,7,2)" rx="2" ry="2" />
<text  x="780.00" y="511.5" >ucbhel..</text>
</g>
<g >
<title>ImplYield (3 samples, 15.00%)</title><rect x="836.0" y="437" width="177.0" height="15.0" fill="rgb(229,150,15)" rx="2" ry="2" />
<text  x="839.00" y="447.5" >ImplYield</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="364.0" y="53" width="59.0" height="15.0" fill="rgb(231,101,34)" rx="2" ry="2" />
<text  x="367.00" y="63.5" >handle..</text>
</g>
<g >
<title>SwLayIdle::DoIdleJob_ (3 samples, 15.00%)</title><rect x="836.0" y="293" width="177.0" height="15.0" fill="rgb(208,79,1)" rx="2" ry="2" />
<text  x="839.00" y="303.5" >SwLayIdle::DoIdleJob_</text>
</g>
<g >
<title>createLibreOfficeKit (6 samples, 30.00%)</title><rect x="423.0" y="533" width="354.0" height="15.0" fill="rgb(253,149,13)" rx="2" ry="2" />
<text  x="426.00" y="543.5" >createLibreOfficeKit</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="777.0" y="293" width="59.0" height="15.0" fill="rgb(228,77,54)" rx="2" ry="2" />
<text  x="780.00" y="303.5" >syscall</text>
</g>
<g >
<title>osl_getFileStatus (3 samples, 15.00%)</title><rect x="1013.0" y="149" width="177.0" height="15.0" fill="rgb(233,198,12)" rx="2" ry="2" />
<text  x="1016.00" y="159.5" >osl_getFileStatus</text>
</g>
<g >
<title>ToolBox::InsertItem (2 samples, 10.00%)</title><rect x="305.0" y="485" width="118.0" height="15.0" fill="rgb(251,99,23)" rx="2" ry="2" />
<text  x="308.00" y="495.5" >ToolBox::Inser..</text>
</g>
<g >
<title>xmlFreeNodeList (1 samples, 5.00%)</title><rect x="423.0" y="261" width="59.0" height="15.0" fill="rgb(235,168,40)" rx="2" ry="2" />
<text  x="426.00" y="271.5" >xmlFre..</text>
</g>
<g >
<title>updateSHA (1 samples, 5.00%)</title><rect x="364.0" y="85" width="59.0" height="15.0" fill="rgb(240,57,35)" rx="2" ry="2" />
<text  x="367.00" y="95.5" >update..</text>
</g>
<g >
<title>DOM::CDocument::~CDocument (3 samples, 15.00%)</title><rect x="600.0" y="261" width="177.0" height="15.0" fill="rgb(245,187,11)" rx="2" ry="2" />
<text  x="603.00" y="271.5" >DOM::CDocument::~CDocum..</text>
</g>
<g >
<title>lstat_c (3 samples, 15.00%)</title><rect x="1013.0" y="117" width="177.0" height="15.0" fill="rgb(221,226,12)" rx="2" ry="2" />
<text  x="1016.00" y="127.5" >lstat_c</text>
</g>
<g >
<title>doc_getCommandValues (1 samples, 5.00%)</title><rect x="10.0" y="453" width="59.0" height="15.0" fill="rgb(236,168,22)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >doc_ge..</text>
</g>
<g >
<title>ucbhelper::Content::getPropertyValuesInterface (3 samples, 15.00%)</title><rect x="1013.0" y="229" width="177.0" height="15.0" fill="rgb(214,214,47)" rx="2" ry="2" />
<text  x="1016.00" y="239.5" >ucbhelper::Content::get..</text>
</g>
<g >
<title>handleUserProfileSignal (3 samples, 15.00%)</title><rect x="600.0" y="181" width="177.0" height="15.0" fill="rgb(222,6,36)" rx="2" ry="2" />
<text  x="603.00" y="191.5" >handleUserProfileSignal</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="541.0" y="165" width="59.0" height="15.0" fill="rgb(211,204,46)" rx="2" ry="2" />
<text  x="544.00" y="175.5" >handle..</text>
</g>
<g >
<title>dp_misc::getDescriptionInfoset (3 samples, 15.00%)</title><rect x="1013.0" y="309" width="177.0" height="15.0" fill="rgb(211,71,4)" rx="2" ry="2" />
<text  x="1016.00" y="319.5" >dp_misc::getDescription..</text>
</g>
<g >
<title>Document::forwardToChild (1 samples, 5.00%)</title><rect x="10.0" y="517" width="59.0" height="15.0" fill="rgb(220,212,35)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >Docume..</text>
</g>
<g >
<title>SvpSalInstance::CheckTimeout (3 samples, 15.00%)</title><rect x="836.0" y="389" width="177.0" height="15.0" fill="rgb(237,33,20)" rx="2" ry="2" />
<text  x="839.00" y="399.5" >SvpSalInstance::CheckTi..</text>
</g>
<g >
<title>doc_paintTile (1 samples, 5.00%)</title><rect x="69.0" y="469" width="59.0" height="15.0" fill="rgb(234,111,11)" rx="2" ry="2" />
<text  x="72.00" y="479.5" >doc_pa..</text>
</g>
<g >
<title>com::sun::star::ui::DocumentAcceleratorConfiguration::createWithDocumentRoot (2 samples, 10.00%)</title><rect x="305.0" y="421" width="118.0" height="15.0" fill="rgb(234,94,10)" rx="2" ry="2" />
<text  x="308.00" y="431.5" >com::sun::star..</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (3 samples, 15.00%)</title><rect x="600.0" y="341" width="177.0" height="15.0" fill="rgb(218,105,6)" rx="2" ry="2" />
<text  x="603.00" y="351.5" >std::__introsort_loop&lt;_..</text>
</g>
<g >
<title>OStorage::openStreamElement (2 samples, 10.00%)</title><rect x="305.0" y="309" width="118.0" height="15.0" fill="rgb(220,185,8)" rx="2" ry="2" />
<text  x="308.00" y="319.5" >OStorage::open..</text>
</g>
<g >
<title>xmlParseComment (1 samples, 5.00%)</title><rect x="541.0" y="261" width="59.0" height="15.0" fill="rgb(227,15,10)" rx="2" ry="2" />
<text  x="544.00" y="271.5" >xmlPar..</text>
</g>
<g >
<title>VclBuilder::handleObject (3 samples, 15.00%)</title><rect x="128.0" y="533" width="177.0" height="15.0" fill="rgb(228,186,39)" rx="2" ry="2" />
<text  x="131.00" y="543.5" >VclBuilder::handleObject</text>
</g>
<g >
<title>soffice_main (6 samples, 30.00%)</title><rect x="836.0" y="501" width="354.0" height="15.0" fill="rgb(239,167,16)" rx="2" ry="2" />
<text  x="839.00" y="511.5" >soffice_main</text>
</g>
<g >
<title>_int_free (1 samples, 5.00%)</title><rect x="10.0" y="421" width="59.0" height="15.0" fill="rgb(243,58,35)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >_int_f..</text>
</g>
<g >
<title>[unknown] (20 samples, 100.00%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(238,12,6)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >[unknown]</text>
</g>
<g >
<title>cppuhelper::ServiceManager::Data::Implementation::doCreateInstanceWithArguments (2 samples, 10.00%)</title><rect x="305.0" y="373" width="118.0" height="15.0" fill="rgb(220,94,51)" rx="2" ry="2" />
<text  x="308.00" y="383.5" >cppuhelper::Se..</text>
</g>
<g >
<title>boost::property_tree::basic_ptree&lt;std::string, std::string, std::less&lt;std::string&gt; &gt;::~basic_ptree (1 samples, 5.00%)</title><rect x="10.0" y="437" width="59.0" height="15.0" fill="rgb(206,70,46)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >boost:..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="69.0" y="421" width="59.0" height="15.0" fill="rgb(236,58,48)" rx="2" ry="2" />
<text  x="72.00" y="431.5" >handle..</text>
</g>
<g >
<title>com::sun::star::ui::DocumentAcceleratorConfiguration::createWithDocumentRoot (3 samples, 15.00%)</title><rect x="128.0" y="405" width="177.0" height="15.0" fill="rgb(219,189,27)" rx="2" ry="2" />
<text  x="131.00" y="415.5" >com::sun::star::ui::Doc..</text>
</g>
<g >
<title>XUnbufferedStream::XUnbufferedStream (1 samples, 5.00%)</title><rect x="364.0" y="181" width="59.0" height="15.0" fill="rgb(225,228,5)" rx="2" ry="2" />
<text  x="367.00" y="191.5" >XUnbuf..</text>
</g>
<g >
<title>updatePBKDF2 (3 samples, 15.00%)</title><rect x="128.0" y="133" width="177.0" height="15.0" fill="rgb(207,41,7)" rx="2" ry="2" />
<text  x="131.00" y="143.5" >updatePBKDF2</text>
</g>
<g >
<title>updatePBKDF2 (1 samples, 5.00%)</title><rect x="305.0" y="149" width="59.0" height="15.0" fill="rgb(249,30,24)" rx="2" ry="2" />
<text  x="308.00" y="159.5" >update..</text>
</g>
<g >
<title>ImplSVMain (6 samples, 30.00%)</title><rect x="836.0" y="485" width="354.0" height="15.0" fill="rgb(248,133,26)" rx="2" ry="2" />
<text  x="839.00" y="495.5" >ImplSVMain</text>
</g>
<g >
<title>DOM::CDocument::~CDocument (1 samples, 5.00%)</title><rect x="423.0" y="309" width="59.0" height="15.0" fill="rgb(217,22,26)" rx="2" ry="2" />
<text  x="426.00" y="319.5" >DOM::C..</text>
</g>
<g >
<title>sw::DocumentTimerManager::DoIdleJobs (3 samples, 15.00%)</title><rect x="836.0" y="357" width="177.0" height="15.0" fill="rgb(220,112,14)" rx="2" ry="2" />
<text  x="839.00" y="367.5" >sw::DocumentTimerManage..</text>
</g>
<g >
<title>LanguageTag::LanguageTag (3 samples, 15.00%)</title><rect x="836.0" y="181" width="177.0" height="15.0" fill="rgb(215,109,31)" rx="2" ry="2" />
<text  x="839.00" y="191.5" >LanguageTag::LanguageTag</text>
</g>
<g >
<title>com_sun_star_comp_framework_DocumentAcceleratorConfiguration_get_implementation (3 samples, 15.00%)</title><rect x="128.0" y="341" width="177.0" height="15.0" fill="rgb(229,85,6)" rx="2" ry="2" />
<text  x="131.00" y="351.5" >com_sun_star_comp_frame..</text>
</g>
<g >
<title>OWriteStream_Impl::GetStream_Impl (2 samples, 10.00%)</title><rect x="305.0" y="261" width="118.0" height="15.0" fill="rgb(230,13,24)" rx="2" ry="2" />
<text  x="308.00" y="271.5" >OWriteStream_I..</text>
</g>
<g >
<title>xmlDoRead (2 samples, 10.00%)</title><rect x="482.0" y="325" width="118.0" height="15.0" fill="rgb(248,35,9)" rx="2" ry="2" />
<text  x="485.00" y="335.5" >xmlDoRead</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="69.0" y="437" width="59.0" height="15.0" fill="rgb(231,80,10)" rx="2" ry="2" />
<text  x="72.00" y="447.5" >_IO_fu..</text>
</g>
<g >
<title>sfx2::sidebar::SidebarToolBox::InsertItem (2 samples, 10.00%)</title><rect x="305.0" y="501" width="118.0" height="15.0" fill="rgb(231,59,11)" rx="2" ry="2" />
<text  x="308.00" y="511.5" >sfx2::sidebar:..</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="69.0" y="405" width="59.0" height="15.0" fill="rgb(210,186,2)" rx="2" ry="2" />
<text  x="72.00" y="415.5" >syscall</text>
</g>
<g >
<title>ZipFile::checkValidPassword (2 samples, 10.00%)</title><rect x="305.0" y="213" width="118.0" height="15.0" fill="rgb(206,22,20)" rx="2" ry="2" />
<text  x="308.00" y="223.5" >ZipFile::check..</text>
</g>
<g >
<title>desktop::Desktop::Main (6 samples, 30.00%)</title><rect x="836.0" y="469" width="354.0" height="15.0" fill="rgb(230,174,8)" rx="2" ry="2" />
<text  x="839.00" y="479.5" >desktop::Desktop::Main</text>
</g>
<g >
<title>fileaccess::BaseContent::open (1 samples, 5.00%)</title><rect x="777.0" y="453" width="59.0" height="15.0" fill="rgb(236,53,42)" rx="2" ry="2" />
<text  x="780.00" y="463.5" >fileac..</text>
</g>
<g >
<title>lo_runLoop (6 samples, 30.00%)</title><rect x="836.0" y="517" width="354.0" height="15.0" fill="rgb(238,191,5)" rx="2" ry="2" />
<text  x="839.00" y="527.5" >lo_runLoop</text>
</g>
<g >
<title>syscall (3 samples, 15.00%)</title><rect x="600.0" y="165" width="177.0" height="15.0" fill="rgb(247,150,2)" rx="2" ry="2" />
<text  x="603.00" y="175.5" >syscall</text>
</g>
<g >
<title>SwTextFrame::AutoSpell_ (3 samples, 15.00%)</title><rect x="836.0" y="277" width="177.0" height="15.0" fill="rgb(252,166,28)" rx="2" ry="2" />
<text  x="839.00" y="287.5" >SwTextFrame::AutoSpell_</text>
</g>
<g >
<title>framework::XMLBasedAcceleratorConfiguration::reload (3 samples, 15.00%)</title><rect x="128.0" y="325" width="177.0" height="15.0" fill="rgb(232,39,6)" rx="2" ry="2" />
<text  x="131.00" y="335.5" >framework::XMLBasedAcce..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="482.0" y="229" width="59.0" height="15.0" fill="rgb(242,141,15)" rx="2" ry="2" />
<text  x="485.00" y="239.5" >_IO_fu..</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="423.0" y="197" width="59.0" height="15.0" fill="rgb(243,22,18)" rx="2" ry="2" />
<text  x="426.00" y="207.5" >syscall</text>
</g>
<g >
<title>ZipPackageStream::getDataStream (2 samples, 10.00%)</title><rect x="305.0" y="245" width="118.0" height="15.0" fill="rgb(253,98,26)" rx="2" ry="2" />
<text  x="308.00" y="255.5" >ZipPackageStre..</text>
</g>
<g >
<title>SpellCheckerDispatcher::isValid (3 samples, 15.00%)</title><rect x="836.0" y="245" width="177.0" height="15.0" fill="rgb(238,63,42)" rx="2" ry="2" />
<text  x="839.00" y="255.5" >SpellCheckerDispatcher:..</text>
</g>
<g >
<title>openFilePath (1 samples, 5.00%)</title><rect x="777.0" y="373" width="59.0" height="15.0" fill="rgb(208,216,13)" rx="2" ry="2" />
<text  x="780.00" y="383.5" >openFi..</text>
</g>
<g >
<title>vcl::CommandInfoProvider::GetTooltipForCommand (3 samples, 15.00%)</title><rect x="128.0" y="453" width="177.0" height="15.0" fill="rgb(245,208,8)" rx="2" ry="2" />
<text  x="131.00" y="463.5" >vcl::CommandInfoProvide..</text>
</g>
<g >
<title>getenv (1 samples, 5.00%)</title><rect x="69.0" y="453" width="59.0" height="15.0" fill="rgb(235,209,23)" rx="2" ry="2" />
<text  x="72.00" y="463.5" >getenv</text>
</g>
<g >
<title>cppuhelper::ServiceManager::createInstanceWithArgumentsAndContext (2 samples, 10.00%)</title><rect x="305.0" y="405" width="118.0" height="15.0" fill="rgb(249,104,32)" rx="2" ry="2" />
<text  x="308.00" y="415.5" >cppuhelper::Se..</text>
</g>
<g >
<title>vcl::CommandInfoProvider::GetCommandShortcut (3 samples, 15.00%)</title><rect x="128.0" y="437" width="177.0" height="15.0" fill="rgb(225,86,24)" rx="2" ry="2" />
<text  x="131.00" y="447.5" >vcl::CommandInfoProvide..</text>
</g>
<g >
<title>Document::drainQueue (2 samples, 10.00%)</title><rect x="10.0" y="533" width="118.0" height="15.0" fill="rgb(237,187,52)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >Document::drai..</text>
</g>
<g >
<title>sfx2::sidebar::SidebarToolBox::InsertItem (3 samples, 15.00%)</title><rect x="128.0" y="485" width="177.0" height="15.0" fill="rgb(253,34,13)" rx="2" ry="2" />
<text  x="131.00" y="495.5" >sfx2::sidebar::SidebarT..</text>
</g>
<g >
<title>OWriteStream_Impl::GetStream_Impl (3 samples, 15.00%)</title><rect x="128.0" y="245" width="177.0" height="15.0" fill="rgb(214,43,29)" rx="2" ry="2" />
<text  x="131.00" y="255.5" >OWriteStream_Impl::GetS..</text>
</g>
<g >
<title>rtl_digest_getSHA1 (1 samples, 5.00%)</title><rect x="364.0" y="101" width="59.0" height="15.0" fill="rgb(236,149,10)" rx="2" ry="2" />
<text  x="367.00" y="111.5" >rtl_di..</text>
</g>
<g >
<title>DOM::CNode::~CNode (1 samples, 5.00%)</title><rect x="423.0" y="325" width="59.0" height="15.0" fill="rgb(239,160,49)" rx="2" ry="2" />
<text  x="426.00" y="335.5" >DOM::C..</text>
</g>
<g >
<title>syscall (3 samples, 15.00%)</title><rect x="128.0" y="69" width="177.0" height="15.0" fill="rgb(218,120,22)" rx="2" ry="2" />
<text  x="131.00" y="79.5" >syscall</text>
</g>
<g >
<title>doc_paintPartTile (1 samples, 5.00%)</title><rect x="69.0" y="485" width="59.0" height="15.0" fill="rgb(244,131,40)" rx="2" ry="2" />
<text  x="72.00" y="495.5" >doc_pa..</text>
</g>
<g >
<title>desktop::Desktop::doShutdown (3 samples, 15.00%)</title><rect x="1013.0" y="453" width="177.0" height="15.0" fill="rgb(213,180,19)" rx="2" ry="2" />
<text  x="1016.00" y="463.5" >desktop::Desktop::doShu..</text>
</g>
<g >
<title>framework::XMLBasedAcceleratorConfiguration::reload (2 samples, 10.00%)</title><rect x="305.0" y="341" width="118.0" height="15.0" fill="rgb(227,86,33)" rx="2" ry="2" />
<text  x="308.00" y="351.5" >framework::XML..</text>
</g>
<g >
<title>xmlParseDocument (2 samples, 10.00%)</title><rect x="482.0" y="309" width="118.0" height="15.0" fill="rgb(205,28,34)" rx="2" ry="2" />
<text  x="485.00" y="319.5" >xmlParseDocument</text>
</g>
<g >
<title>cppuhelper::ServiceManager::Data::Implementation::doCreateInstanceWithArguments (3 samples, 15.00%)</title><rect x="128.0" y="357" width="177.0" height="15.0" fill="rgb(226,182,31)" rx="2" ry="2" />
<text  x="131.00" y="367.5" >cppuhelper::ServiceMana..</text>
</g>
<g >
<title>_IO_funlockfile (3 samples, 15.00%)</title><rect x="836.0" y="165" width="177.0" height="15.0" fill="rgb(243,115,6)" rx="2" ry="2" />
<text  x="839.00" y="175.5" >_IO_funlockfile</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="10.0" y="373" width="59.0" height="15.0" fill="rgb(232,150,3)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >syscall</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="10.0" y="389" width="59.0" height="15.0" fill="rgb(223,118,46)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >handle..</text>
</g>
<g >
<title>dp_misc::DescriptionInfoset::~DescriptionInfoset (1 samples, 5.00%)</title><rect x="423.0" y="357" width="59.0" height="15.0" fill="rgb(247,218,1)" rx="2" ry="2" />
<text  x="426.00" y="367.5" >dp_mis..</text>
</g>
<g >
<title>dp_misc::DescriptionInfoset::~DescriptionInfoset (3 samples, 15.00%)</title><rect x="600.0" y="309" width="177.0" height="15.0" fill="rgb(212,62,7)" rx="2" ry="2" />
<text  x="603.00" y="319.5" >dp_misc::DescriptionInf..</text>
</g>
<g >
<title>DOM::CElement::~CElement (1 samples, 5.00%)</title><rect x="423.0" y="341" width="59.0" height="15.0" fill="rgb(247,106,24)" rx="2" ry="2" />
<text  x="426.00" y="351.5" >DOM::C..</text>
</g>
<g >
<title>_int_free (1 samples, 5.00%)</title><rect x="423.0" y="245" width="59.0" height="15.0" fill="rgb(228,182,21)" rx="2" ry="2" />
<text  x="426.00" y="255.5" >_int_f..</text>
</g>
<g >
<title>SvpSalInstance::ImplYield (3 samples, 15.00%)</title><rect x="836.0" y="405" width="177.0" height="15.0" fill="rgb(217,42,10)" rx="2" ry="2" />
<text  x="839.00" y="415.5" >SvpSalInstance::ImplYield</text>
</g>
<g >
<title>ZipPackageStream::getDataStream (3 samples, 15.00%)</title><rect x="128.0" y="229" width="177.0" height="15.0" fill="rgb(248,141,47)" rx="2" ry="2" />
<text  x="131.00" y="239.5" >ZipPackageStream::getDa..</text>
</g>
<g >
<title>vcl::CommandInfoProvider::GetCommandShortcut (2 samples, 10.00%)</title><rect x="305.0" y="453" width="118.0" height="15.0" fill="rgb(210,164,26)" rx="2" ry="2" />
<text  x="308.00" y="463.5" >vcl::CommandIn..</text>
</g>
<g >
<title>Session::handleMessage (1 samples, 5.00%)</title><rect x="10.0" y="501" width="59.0" height="15.0" fill="rgb(209,140,12)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >Sessio..</text>
</g>
<g >
<title>SpellCheckerDispatcher::isValid_Impl (3 samples, 15.00%)</title><rect x="836.0" y="229" width="177.0" height="15.0" fill="rgb(237,167,8)" rx="2" ry="2" />
<text  x="839.00" y="239.5" >SpellCheckerDispatcher:..</text>
</g>
<g >
<title>VclBuilder::makeObject (2 samples, 10.00%)</title><rect x="305.0" y="517" width="118.0" height="15.0" fill="rgb(244,22,14)" rx="2" ry="2" />
<text  x="308.00" y="527.5" >VclBuilder::ma..</text>
</g>
<g >
<title>Document::renderTiles (1 samples, 5.00%)</title><rect x="69.0" y="517" width="59.0" height="15.0" fill="rgb(229,205,32)" rx="2" ry="2" />
<text  x="72.00" y="527.5" >Docume..</text>
</g>
<g >
<title>xmlCopyCharMultiByte (1 samples, 5.00%)</title><rect x="482.0" y="245" width="59.0" height="15.0" fill="rgb(250,71,24)" rx="2" ry="2" />
<text  x="485.00" y="255.5" >xmlCop..</text>
</g>
<g >
<title>ucbhelper::Content::getPropertyValue (3 samples, 15.00%)</title><rect x="1013.0" y="261" width="177.0" height="15.0" fill="rgb(223,118,44)" rx="2" ry="2" />
<text  x="1016.00" y="271.5" >ucbhelper::Content::get..</text>
</g>
<g >
<title>desktop::Desktop::doShutdown (6 samples, 30.00%)</title><rect x="423.0" y="437" width="354.0" height="15.0" fill="rgb(231,85,32)" rx="2" ry="2" />
<text  x="426.00" y="447.5" >desktop::Desktop::doShutdown</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (3 samples, 15.00%)</title><rect x="1013.0" y="357" width="177.0" height="15.0" fill="rgb(223,32,10)" rx="2" ry="2" />
<text  x="1016.00" y="367.5" >std::__introsort_loop&lt;_..</text>
</g>
<g >
<title>OWriteStream_Impl::GetStream (3 samples, 15.00%)</title><rect x="128.0" y="261" width="177.0" height="15.0" fill="rgb(210,95,42)" rx="2" ry="2" />
<text  x="131.00" y="271.5" >OWriteStream_Impl::GetS..</text>
</g>
<g >
<title>framework::PresetHandler::openTarget (2 samples, 10.00%)</title><rect x="305.0" y="325" width="118.0" height="15.0" fill="rgb(252,175,38)" rx="2" ry="2" />
<text  x="308.00" y="335.5" >framework::Pre..</text>
</g>
<g >
<title>xmlParseCharDataComplex (1 samples, 5.00%)</title><rect x="482.0" y="261" width="59.0" height="15.0" fill="rgb(236,144,12)" rx="2" ry="2" />
<text  x="485.00" y="271.5" >xmlPar..</text>
</g>
<g >
<title>DOM::CDocument::~CDocument (1 samples, 5.00%)</title><rect x="423.0" y="293" width="59.0" height="15.0" fill="rgb(248,188,41)" rx="2" ry="2" />
<text  x="426.00" y="303.5" >DOM::C..</text>
</g>
<g >
<title>lokit_main (6 samples, 30.00%)</title><rect x="836.0" y="533" width="354.0" height="15.0" fill="rgb(206,226,7)" rx="2" ry="2" />
<text  x="839.00" y="543.5" >lokit_main</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="777.0" y="325" width="59.0" height="15.0" fill="rgb(252,78,24)" rx="2" ry="2" />
<text  x="780.00" y="335.5" >_IO_fu..</text>
</g>
<g >
<title>__lxstat64 (3 samples, 15.00%)</title><rect x="1013.0" y="101" width="177.0" height="15.0" fill="rgb(237,73,20)" rx="2" ry="2" />
<text  x="1016.00" y="111.5" >__lxstat64</text>
</g>
<g >
<title>DOM::CDocumentBuilder::parse (2 samples, 10.00%)</title><rect x="482.0" y="341" width="118.0" height="15.0" fill="rgb(246,3,38)" rx="2" ry="2" />
<text  x="485.00" y="351.5" >DOM::CDocument..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="305.0" y="85" width="59.0" height="15.0" fill="rgb(253,212,39)" rx="2" ry="2" />
<text  x="308.00" y="95.5" >_IO_fu..</text>
</g>
<g >
<title>xmlNewComment (1 samples, 5.00%)</title><rect x="541.0" y="213" width="59.0" height="15.0" fill="rgb(239,80,22)" rx="2" ry="2" />
<text  x="544.00" y="223.5" >xmlNew..</text>
</g>
<g >
<title>ZipFile::checkValidPassword (3 samples, 15.00%)</title><rect x="128.0" y="197" width="177.0" height="15.0" fill="rgb(224,107,38)" rx="2" ry="2" />
<text  x="131.00" y="207.5" >ZipFile::checkValidPass..</text>
</g>
<g >
<title>VclBuilder::insertObject (2 samples, 10.00%)</title><rect x="305.0" y="533" width="118.0" height="15.0" fill="rgb(221,151,14)" rx="2" ry="2" />
<text  x="308.00" y="543.5" >VclBuilder::in..</text>
</g>
<g >
<title>fileaccess::BaseContent::getPropertyValues (3 samples, 15.00%)</title><rect x="1013.0" y="181" width="177.0" height="15.0" fill="rgb(237,176,18)" rx="2" ry="2" />
<text  x="1016.00" y="191.5" >fileaccess::BaseContent..</text>
</g>
<g >
<title>cppuhelper::ServiceManager::Data::Implementation::createInstanceWithArguments (2 samples, 10.00%)</title><rect x="305.0" y="389" width="118.0" height="15.0" fill="rgb(207,34,5)" rx="2" ry="2" />
<text  x="308.00" y="399.5" >cppuhelper::Se..</text>
</g>
<g >
<title>dp_registry::backend::bundle::(anonymous namespace)::BackendImpl::PackageImpl::getDisplayName (1 samples, 5.00%)</title><rect x="777.0" y="533" width="59.0" height="15.0" fill="rgb(241,106,43)" rx="2" ry="2" />
<text  x="780.00" y="543.5" >dp_reg..</text>
</g>
<g >
<title>all (20 samples, 100%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(245,133,0)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>dp_registry::backend::bundle::(anonymous namespace)::BackendImpl::PackageImpl::getDisplayName (3 samples, 15.00%)</title><rect x="600.0" y="325" width="177.0" height="15.0" fill="rgb(227,226,10)" rx="2" ry="2" />
<text  x="603.00" y="335.5" >dp_registry::backend::b..</text>
</g>
<g >
<title>dp_registry::backend::bundle::(anonymous namespace)::BackendImpl::PackageImpl::getDisplayName (3 samples, 15.00%)</title><rect x="1013.0" y="325" width="177.0" height="15.0" fill="rgb(228,25,6)" rx="2" ry="2" />
<text  x="1016.00" y="335.5" >dp_registry::backend::b..</text>
</g>
<g >
<title>kitbroker (20 samples, 100.00%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(221,110,8)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >kitbroker</text>
</g>
<g >
<title>rtl_digest_getHMAC_SHA1 (3 samples, 15.00%)</title><rect x="128.0" y="117" width="177.0" height="15.0" fill="rgb(253,85,19)" rx="2" ry="2" />
<text  x="131.00" y="127.5" >rtl_digest_getHMAC_SHA1</text>
</g>
<g >
<title>vcl::CommandInfoProvider::GetTooltipForCommand (2 samples, 10.00%)</title><rect x="305.0" y="469" width="118.0" height="15.0" fill="rgb(227,101,35)" rx="2" ry="2" />
<text  x="308.00" y="479.5" >vcl::CommandIn..</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="482.0" y="197" width="59.0" height="15.0" fill="rgb(216,90,50)" rx="2" ry="2" />
<text  x="485.00" y="207.5" >syscall</text>
</g>
<g >
<title>OStorage::openStreamElement (3 samples, 15.00%)</title><rect x="128.0" y="293" width="177.0" height="15.0" fill="rgb(205,160,44)" rx="2" ry="2" />
<text  x="131.00" y="303.5" >OStorage::openStreamEle..</text>
</g>
<g >
<title>xmlParseContentInternal (2 samples, 10.00%)</title><rect x="482.0" y="277" width="118.0" height="15.0" fill="rgb(222,121,16)" rx="2" ry="2" />
<text  x="485.00" y="287.5" >xmlParseConten..</text>
</g>
<g >
<title>xmlSAX2Comment (1 samples, 5.00%)</title><rect x="541.0" y="245" width="59.0" height="15.0" fill="rgb(250,53,6)" rx="2" ry="2" />
<text  x="544.00" y="255.5" >xmlSAX..</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="364.0" y="37" width="59.0" height="15.0" fill="rgb(250,91,25)" rx="2" ry="2" />
<text  x="367.00" y="47.5" >syscall</text>
</g>
<g >
<title>_IO_funlockfile (3 samples, 15.00%)</title><rect x="1013.0" y="85" width="177.0" height="15.0" fill="rgb(248,151,25)" rx="2" ry="2" />
<text  x="1016.00" y="95.5" >_IO_funlockfile</text>
</g>
<g >
<title>dp_misc::getDescriptionInfoset (2 samples, 10.00%)</title><rect x="482.0" y="357" width="118.0" height="15.0" fill="rgb(207,27,2)" rx="2" ry="2" />
<text  x="485.00" y="367.5" >dp_misc::getDe..</text>
</g>
<g >
<title>fileaccess::ReconnectingFile::open (1 samples, 5.00%)</title><rect x="777.0" y="405" width="59.0" height="15.0" fill="rgb(213,39,52)" rx="2" ry="2" />
<text  x="780.00" y="415.5" >fileac..</text>
</g>
<g >
<title>rtl_digest_getSHA1 (1 samples, 5.00%)</title><rect x="305.0" y="117" width="59.0" height="15.0" fill="rgb(242,158,22)" rx="2" ry="2" />
<text  x="308.00" y="127.5" >rtl_di..</text>
</g>
<g >
<title>DOM::CDocument::~CDocument (3 samples, 15.00%)</title><rect x="600.0" y="245" width="177.0" height="15.0" fill="rgb(206,197,47)" rx="2" ry="2" />
<text  x="603.00" y="255.5" >DOM::CDocument::~CDocum..</text>
</g>
<g >
<title>malloc (1 samples, 5.00%)</title><rect x="541.0" y="197" width="59.0" height="15.0" fill="rgb(217,183,46)" rx="2" ry="2" />
<text  x="544.00" y="207.5" >malloc</text>
</g>
<g >
<title>rtl_digest_PBKDF2 (3 samples, 15.00%)</title><rect x="128.0" y="149" width="177.0" height="15.0" fill="rgb(237,163,24)" rx="2" ry="2" />
<text  x="131.00" y="159.5" >rtl_digest_PBKDF2</text>
</g>
<g >
<title>VclBuilder::insertObject (3 samples, 15.00%)</title><rect x="128.0" y="517" width="177.0" height="15.0" fill="rgb(214,116,16)" rx="2" ry="2" />
<text  x="131.00" y="527.5" >VclBuilder::insertObject</text>
</g>
<g >
<title>updatePBKDF2 (1 samples, 5.00%)</title><rect x="364.0" y="133" width="59.0" height="15.0" fill="rgb(224,162,39)" rx="2" ry="2" />
<text  x="367.00" y="143.5" >update..</text>
</g>
<g >
<title>ucbhelper::Content::openStream (3 samples, 15.00%)</title><rect x="1013.0" y="293" width="177.0" height="15.0" fill="rgb(225,39,9)" rx="2" ry="2" />
<text  x="1016.00" y="303.5" >ucbhelper::Content::ope..</text>
</g>
<g >
<title>vcl::CommandInfoProvider::GetDocumentAcceleratorConfiguration (2 samples, 10.00%)</title><rect x="305.0" y="437" width="118.0" height="15.0" fill="rgb(227,124,15)" rx="2" ry="2" />
<text  x="308.00" y="447.5" >vcl::CommandIn..</text>
</g>
<g >
<title>ZipFile::getDataStream (3 samples, 15.00%)</title><rect x="128.0" y="213" width="177.0" height="15.0" fill="rgb(242,78,53)" rx="2" ry="2" />
<text  x="131.00" y="223.5" >ZipFile::getDataStream</text>
</g>
<g >
<title>dp_registry::backend::bundle::(anonymous namespace)::BackendImpl::PackageImpl::getDisplayName (3 samples, 15.00%)</title><rect x="423.0" y="373" width="177.0" height="15.0" fill="rgb(245,200,0)" rx="2" ry="2" />
<text  x="426.00" y="383.5" >dp_registry::backend::b..</text>
</g>
<g >
<title>xmlFreeDoc (3 samples, 15.00%)</title><rect x="600.0" y="229" width="177.0" height="15.0" fill="rgb(229,158,42)" rx="2" ry="2" />
<text  x="603.00" y="239.5" >xmlFreeDoc</text>
</g>
<g >
<title>ZipFile::createStreamForZipEntry (1 samples, 5.00%)</title><rect x="364.0" y="197" width="59.0" height="15.0" fill="rgb(253,115,42)" rx="2" ry="2" />
<text  x="367.00" y="207.5" >ZipFil..</text>
</g>
<g >
<title>Application::Execute (3 samples, 15.00%)</title><rect x="836.0" y="453" width="177.0" height="15.0" fill="rgb(237,76,7)" rx="2" ry="2" />
<text  x="839.00" y="463.5" >Application::Execute</text>
</g>
<g >
<title>desktop::Desktop::Main (6 samples, 30.00%)</title><rect x="423.0" y="453" width="354.0" height="15.0" fill="rgb(210,104,24)" rx="2" ry="2" />
<text  x="426.00" y="463.5" >desktop::Desktop::Main</text>
</g>
<g >
<title>dp_misc::getDescriptionInfoset (1 samples, 5.00%)</title><rect x="777.0" y="517" width="59.0" height="15.0" fill="rgb(205,96,44)" rx="2" ry="2" />
<text  x="780.00" y="527.5" >dp_mis..</text>
</g>
<g >
<title>comphelper::BackupFileHelper::tryPush_extensionInfo (6 samples, 30.00%)</title><rect x="423.0" y="405" width="354.0" height="15.0" fill="rgb(210,25,32)" rx="2" ry="2" />
<text  x="426.00" y="415.5" >comphelper::BackupFileHelper::tryPush_extensionI..</text>
</g>
<g >
<title>fileaccess::BaseContent::execute (1 samples, 5.00%)</title><rect x="777.0" y="469" width="59.0" height="15.0" fill="rgb(238,67,8)" rx="2" ry="2" />
<text  x="780.00" y="479.5" >fileac..</text>
</g>
<g >
<title>comphelper::BackupFileHelper::tryPush_extensionInfo (3 samples, 15.00%)</title><rect x="1013.0" y="421" width="177.0" height="15.0" fill="rgb(243,169,36)" rx="2" ry="2" />
<text  x="1016.00" y="431.5" >comphelper::BackupFileH..</text>
</g>
<g >
<title>ZipFile::StaticHasValidPassword (3 samples, 15.00%)</title><rect x="128.0" y="181" width="177.0" height="15.0" fill="rgb(213,98,47)" rx="2" ry="2" />
<text  x="131.00" y="191.5" >ZipFile::StaticHasValid..</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (3 samples, 15.00%)</title><rect x="1013.0" y="373" width="177.0" height="15.0" fill="rgb(214,26,45)" rx="2" ry="2" />
<text  x="1016.00" y="383.5" >std::__introsort_loop&lt;_..</text>
</g>
<g >
<title>OWriteStream_Impl::GetStream (2 samples, 10.00%)</title><rect x="305.0" y="293" width="118.0" height="15.0" fill="rgb(224,193,34)" rx="2" ry="2" />
<text  x="308.00" y="303.5" >OWriteStream_I..</text>
</g>
<g >
<title>xmlFreeDoc (1 samples, 5.00%)</title><rect x="423.0" y="277" width="59.0" height="15.0" fill="rgb(215,163,24)" rx="2" ry="2" />
<text  x="426.00" y="287.5" >xmlFre..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="423.0" y="229" width="59.0" height="15.0" fill="rgb(247,208,4)" rx="2" ry="2" />
<text  x="426.00" y="239.5" >_IO_fu..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="423.0" y="213" width="59.0" height="15.0" fill="rgb(233,220,29)" rx="2" ry="2" />
<text  x="426.00" y="223.5" >handle..</text>
</g>
<g >
<title>ZipFile::StaticGetCipher (1 samples, 5.00%)</title><rect x="305.0" y="181" width="59.0" height="15.0" fill="rgb(226,190,14)" rx="2" ry="2" />
<text  x="308.00" y="191.5" >ZipFil..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="305.0" y="69" width="59.0" height="15.0" fill="rgb(238,92,30)" rx="2" ry="2" />
<text  x="308.00" y="79.5" >handle..</text>
</g>
<g >
<title>updateSHA (1 samples, 5.00%)</title><rect x="305.0" y="101" width="59.0" height="15.0" fill="rgb(232,206,23)" rx="2" ry="2" />
<text  x="308.00" y="111.5" >update..</text>
</g>
<g >
<title>vcl::CommandInfoProvider::GetDocumentAcceleratorConfiguration (3 samples, 15.00%)</title><rect x="128.0" y="421" width="177.0" height="15.0" fill="rgb(232,122,8)" rx="2" ry="2" />
<text  x="131.00" y="431.5" >vcl::CommandInfoProvide..</text>
</g>
<g >
<title>handleUserProfileSignal (3 samples, 15.00%)</title><rect x="128.0" y="85" width="177.0" height="15.0" fill="rgb(239,177,20)" rx="2" ry="2" />
<text  x="131.00" y="95.5" >handleUserProfileSignal</text>
</g>
<g >
<title>Scheduler::CallbackTaskScheduling (3 samples, 15.00%)</title><rect x="836.0" y="373" width="177.0" height="15.0" fill="rgb(227,176,23)" rx="2" ry="2" />
<text  x="839.00" y="383.5" >Scheduler::CallbackTask..</text>
</g>
<g >
<title>_IO_funlockfile (3 samples, 15.00%)</title><rect x="600.0" y="197" width="177.0" height="15.0" fill="rgb(249,110,47)" rx="2" ry="2" />
<text  x="603.00" y="207.5" >_IO_funlockfile</text>
</g>
<g >
<title>open_c (1 samples, 5.00%)</title><rect x="777.0" y="357" width="59.0" height="15.0" fill="rgb(254,125,39)" rx="2" ry="2" />
<text  x="780.00" y="367.5" >open_c</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="10.0" y="405" width="59.0" height="15.0" fill="rgb(240,225,4)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >_IO_fu..</text>
</g>
<g >
<title>_IO_funlockfile (3 samples, 15.00%)</title><rect x="128.0" y="101" width="177.0" height="15.0" fill="rgb(254,88,16)" rx="2" ry="2" />
<text  x="131.00" y="111.5" >_IO_funlockfile</text>
</g>
<g >
<title>ZipFile::getDataStream (2 samples, 10.00%)</title><rect x="305.0" y="229" width="118.0" height="15.0" fill="rgb(249,189,47)" rx="2" ry="2" />
<text  x="308.00" y="239.5" >ZipFile::getDa..</text>
</g>
<g >
<title>RenderTiles::doRender (1 samples, 5.00%)</title><rect x="69.0" y="501" width="59.0" height="15.0" fill="rgb(213,42,21)" rx="2" ry="2" />
<text  x="72.00" y="511.5" >Render..</text>
</g>
<g >
<title>ChildSession::getCommandValues (1 samples, 5.00%)</title><rect x="10.0" y="469" width="59.0" height="15.0" fill="rgb(249,73,45)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >ChildS..</text>
</g>
<g >
<title>SvpSalInstance::DoYield (3 samples, 15.00%)</title><rect x="836.0" y="421" width="177.0" height="15.0" fill="rgb(241,143,31)" rx="2" ry="2" />
<text  x="839.00" y="431.5" >SvpSalInstance::DoYield</text>
</g>
<g >
<title>openFile (1 samples, 5.00%)</title><rect x="777.0" y="389" width="59.0" height="15.0" fill="rgb(252,211,15)" rx="2" ry="2" />
<text  x="780.00" y="399.5" >openFile</text>
</g>
<g >
<title>ucbhelper::Content_Impl::executeCommand (1 samples, 5.00%)</title><rect x="777.0" y="485" width="59.0" height="15.0" fill="rgb(223,131,35)" rx="2" ry="2" />
<text  x="780.00" y="495.5" >ucbhel..</text>
</g>
<g >
<title>lo_runLoop (6 samples, 30.00%)</title><rect x="423.0" y="501" width="354.0" height="15.0" fill="rgb(249,118,2)" rx="2" ry="2" />
<text  x="426.00" y="511.5" >lo_runLoop</text>
</g>
<g >
<title>ZipFile::StaticGetCipher (3 samples, 15.00%)</title><rect x="128.0" y="165" width="177.0" height="15.0" fill="rgb(228,150,16)" rx="2" ry="2" />
<text  x="131.00" y="175.5" >ZipFile::StaticGetCipher</text>
</g>
<g >
<title>xmlFreeNodeList (3 samples, 15.00%)</title><rect x="600.0" y="213" width="177.0" height="15.0" fill="rgb(243,70,35)" rx="2" ry="2" />
<text  x="603.00" y="223.5" >xmlFreeNodeList</text>
</g>
<g >
<title>xmlNewDocComment (1 samples, 5.00%)</title><rect x="541.0" y="229" width="59.0" height="15.0" fill="rgb(218,32,33)" rx="2" ry="2" />
<text  x="544.00" y="239.5" >xmlNew..</text>
</g>
<g >
<title>soffice_main (6 samples, 30.00%)</title><rect x="423.0" y="485" width="354.0" height="15.0" fill="rgb(254,99,33)" rx="2" ry="2" />
<text  x="426.00" y="495.5" >soffice_main</text>
</g>
<g >
<title>osl::lstat (3 samples, 15.00%)</title><rect x="1013.0" y="133" width="177.0" height="15.0" fill="rgb(230,50,6)" rx="2" ry="2" />
<text  x="1016.00" y="143.5" >osl::lstat</text>
</g>
<g >
<title>rtl_digest_PBKDF2 (1 samples, 5.00%)</title><rect x="364.0" y="149" width="59.0" height="15.0" fill="rgb(212,164,24)" rx="2" ry="2" />
<text  x="367.00" y="159.5" >rtl_di..</text>
</g>
<g >
<title>comphelper::BackupFileHelper::tryPushExtensionInfo (3 samples, 15.00%)</title><rect x="1013.0" y="437" width="177.0" height="15.0" fill="rgb(251,54,20)" rx="2" ry="2" />
<text  x="1016.00" y="447.5" >comphelper::BackupFileH..</text>
</g>
<g >
<title>fileaccess::TaskManager::getv (3 samples, 15.00%)</title><rect x="1013.0" y="165" width="177.0" height="15.0" fill="rgb(246,144,1)" rx="2" ry="2" />
<text  x="1016.00" y="175.5" >fileaccess::TaskManager..</text>
</g>
<g >
<title>handleUserProfileSignal (3 samples, 15.00%)</title><rect x="1013.0" y="69" width="177.0" height="15.0" fill="rgb(251,142,9)" rx="2" ry="2" />
<text  x="1016.00" y="79.5" >handleUserProfileSignal</text>
</g>
<g >
<title>fileaccess::BaseContent::execute (3 samples, 15.00%)</title><rect x="1013.0" y="197" width="177.0" height="15.0" fill="rgb(222,114,31)" rx="2" ry="2" />
<text  x="1016.00" y="207.5" >fileaccess::BaseContent..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="364.0" y="69" width="59.0" height="15.0" fill="rgb(249,40,18)" rx="2" ry="2" />
<text  x="367.00" y="79.5" >_IO_fu..</text>
</g>
<g >
<title>fileaccess::TaskManager::open (1 samples, 5.00%)</title><rect x="777.0" y="437" width="59.0" height="15.0" fill="rgb(240,45,35)" rx="2" ry="2" />
<text  x="780.00" y="447.5" >fileac..</text>
</g>
<g >
<title>lokit_main (6 samples, 30.00%)</title><rect x="423.0" y="517" width="354.0" height="15.0" fill="rgb(244,32,22)" rx="2" ry="2" />
<text  x="426.00" y="527.5" >lokit_main</text>
</g>
<g >
<title>linguistic::GetLocaleDataWrapper (3 samples, 15.00%)</title><rect x="836.0" y="213" width="177.0" height="15.0" fill="rgb(254,30,2)" rx="2" ry="2" />
<text  x="839.00" y="223.5" >linguistic::GetLocaleDa..</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="305.0" y="53" width="59.0" height="15.0" fill="rgb(207,189,33)" rx="2" ry="2" />
<text  x="308.00" y="63.5" >syscall</text>
</g>
<g >
<title>OWriteStream_Impl::GetStream (2 samples, 10.00%)</title><rect x="305.0" y="277" width="118.0" height="15.0" fill="rgb(248,33,0)" rx="2" ry="2" />
<text  x="308.00" y="287.5" >OWriteStream_I..</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (3 samples, 15.00%)</title><rect x="600.0" y="373" width="177.0" height="15.0" fill="rgb(222,32,9)" rx="2" ry="2" />
<text  x="603.00" y="383.5" >std::__introsort_loop&lt;_..</text>
</g>
<g >
<title>LocaleDataWrapper::getLoadedLanguageTag (3 samples, 15.00%)</title><rect x="836.0" y="197" width="177.0" height="15.0" fill="rgb(244,215,53)" rx="2" ry="2" />
<text  x="839.00" y="207.5" >LocaleDataWrapper::getL..</text>
</g>
<g >
<title>SwViewShell::LayoutIdle (3 samples, 15.00%)</title><rect x="836.0" y="341" width="177.0" height="15.0" fill="rgb(251,75,11)" rx="2" ry="2" />
<text  x="839.00" y="351.5" >SwViewShell::LayoutIdle</text>
</g>
<g >
<title>SwLayIdle::SwLayIdle (3 samples, 15.00%)</title><rect x="836.0" y="325" width="177.0" height="15.0" fill="rgb(206,116,8)" rx="2" ry="2" />
<text  x="839.00" y="335.5" >SwLayIdle::SwLayIdle</text>
</g>
<g >
<title>OWriteStream_Impl::GetStream (3 samples, 15.00%)</title><rect x="128.0" y="277" width="177.0" height="15.0" fill="rgb(250,203,11)" rx="2" ry="2" />
<text  x="131.00" y="287.5" >OWriteStream_Impl::GetS..</text>
</g>
<g >
<title>ImplSVMain (6 samples, 30.00%)</title><rect x="423.0" y="469" width="354.0" height="15.0" fill="rgb(246,86,14)" rx="2" ry="2" />
<text  x="426.00" y="479.5" >ImplSVMain</text>
</g>
<g >
<title>ToolBox::InsertItem (3 samples, 15.00%)</title><rect x="128.0" y="469" width="177.0" height="15.0" fill="rgb(252,202,54)" rx="2" ry="2" />
<text  x="131.00" y="479.5" >ToolBox::InsertItem</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="482.0" y="213" width="59.0" height="15.0" fill="rgb(225,227,29)" rx="2" ry="2" />
<text  x="485.00" y="223.5" >handle..</text>
</g>
<g >
<title>ZipFile::StaticHasValidPassword (1 samples, 5.00%)</title><rect x="305.0" y="197" width="59.0" height="15.0" fill="rgb(248,32,9)" rx="2" ry="2" />
<text  x="308.00" y="207.5" >ZipFil..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="541.0" y="181" width="59.0" height="15.0" fill="rgb(216,46,28)" rx="2" ry="2" />
<text  x="544.00" y="191.5" >_IO_fu..</text>
</g>
<g >
<title>framework::PresetHandler::openTarget (3 samples, 15.00%)</title><rect x="128.0" y="309" width="177.0" height="15.0" fill="rgb(253,187,5)" rx="2" ry="2" />
<text  x="131.00" y="319.5" >framework::PresetHandle..</text>
</g>
<g >
<title>dp_manager::ExtensionManager::getAllExtensions (6 samples, 30.00%)</title><rect x="423.0" y="389" width="354.0" height="15.0" fill="rgb(225,144,39)" rx="2" ry="2" />
<text  x="426.00" y="399.5" >dp_manager::ExtensionManager::getAllExtensions</text>
</g>
<g >
<title>ChildSession::_handleInput (1 samples, 5.00%)</title><rect x="10.0" y="485" width="59.0" height="15.0" fill="rgb(242,107,50)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >ChildS..</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="541.0" y="149" width="59.0" height="15.0" fill="rgb(243,213,39)" rx="2" ry="2" />
<text  x="544.00" y="159.5" >syscall</text>
</g>
<g >
<title>open (1 samples, 5.00%)</title><rect x="777.0" y="341" width="59.0" height="15.0" fill="rgb(233,217,18)" rx="2" ry="2" />
<text  x="780.00" y="351.5" >open</text>
</g>
<g >
<title>xmlParseElement (2 samples, 10.00%)</title><rect x="482.0" y="293" width="118.0" height="15.0" fill="rgb(220,222,20)" rx="2" ry="2" />
<text  x="485.00" y="303.5" >xmlParseElement</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (3 samples, 15.00%)</title><rect x="1013.0" y="389" width="177.0" height="15.0" fill="rgb(232,25,22)" rx="2" ry="2" />
<text  x="1016.00" y="399.5" >std::__introsort_loop&lt;_..</text>
</g>
<g >
<title>rtl_digest_PBKDF2 (1 samples, 5.00%)</title><rect x="305.0" y="165" width="59.0" height="15.0" fill="rgb(237,80,3)" rx="2" ry="2" />
<text  x="308.00" y="175.5" >rtl_di..</text>
</g>
<g >
<title>SwLayIdle::DoIdleJob (3 samples, 15.00%)</title><rect x="836.0" y="309" width="177.0" height="15.0" fill="rgb(233,31,5)" rx="2" ry="2" />
<text  x="839.00" y="319.5" >SwLayIdle::DoIdleJob</text>
</g>
<g >
<title>fileaccess::XInputStream_impl::XInputStream_impl (1 samples, 5.00%)</title><rect x="777.0" y="421" width="59.0" height="15.0" fill="rgb(211,186,41)" rx="2" ry="2" />
<text  x="780.00" y="431.5" >fileac..</text>
</g>
<g >
<title>dp_manager::ExtensionManager::getAllExtensions (3 samples, 15.00%)</title><rect x="1013.0" y="405" width="177.0" height="15.0" fill="rgb(226,59,28)" rx="2" ry="2" />
<text  x="1016.00" y="415.5" >dp_manager::ExtensionMa..</text>
</g>
<g >
<title>ucbhelper::Content_Impl::executeCommand (3 samples, 15.00%)</title><rect x="1013.0" y="213" width="177.0" height="15.0" fill="rgb(247,207,19)" rx="2" ry="2" />
<text  x="1016.00" y="223.5" >ucbhelper::Content_Impl..</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (3 samples, 15.00%)</title><rect x="600.0" y="357" width="177.0" height="15.0" fill="rgb(214,10,37)" rx="2" ry="2" />
<text  x="603.00" y="367.5" >std::__introsort_loop&lt;_..</text>
</g>
<g >
<title>ucbhelper::Content::getPropertyValues (3 samples, 15.00%)</title><rect x="1013.0" y="245" width="177.0" height="15.0" fill="rgb(228,138,49)" rx="2" ry="2" />
<text  x="1016.00" y="255.5" >ucbhelper::Content::get..</text>
</g>
<g >
<title>com_sun_star_comp_framework_DocumentAcceleratorConfiguration_get_implementation (2 samples, 10.00%)</title><rect x="305.0" y="357" width="118.0" height="15.0" fill="rgb(209,155,18)" rx="2" ry="2" />
<text  x="308.00" y="367.5" >com_sun_star_c..</text>
</g>
</g>
</svg>
