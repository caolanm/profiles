<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >StagingPerf.eu Watchdog Profile (2024-06-15T08:36:03.246157)</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>syscall (3 samples, 20.00%)</title><rect x="639.3" y="181" width="236.0" height="15.0" fill="rgb(208,214,3)" rx="2" ry="2" />
<text  x="642.33" y="191.5" >syscall</text>
</g>
<g >
<title>syscall (3 samples, 20.00%)</title><rect x="403.3" y="37" width="236.0" height="15.0" fill="rgb(210,92,16)" rx="2" ry="2" />
<text  x="406.33" y="47.5" >syscall</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (3 samples, 20.00%)</title><rect x="639.3" y="453" width="236.0" height="15.0" fill="rgb(246,63,47)" rx="2" ry="2" />
<text  x="642.33" y="463.5" >std::__introsort_loop&lt;__gnu_cxx..</text>
</g>
<g >
<title>lokit_main (6 samples, 40.00%)</title><rect x="167.3" y="453" width="472.0" height="15.0" fill="rgb(216,23,44)" rx="2" ry="2" />
<text  x="170.33" y="463.5" >lokit_main</text>
</g>
<g >
<title>malloc_consolidate (1 samples, 6.67%)</title><rect x="88.7" y="165" width="78.6" height="15.0" fill="rgb(254,55,3)" rx="2" ry="2" />
<text  x="91.67" y="175.5" >malloc_co..</text>
</g>
<g >
<title>xmlParseContentInternal (2 samples, 13.33%)</title><rect x="167.3" y="213" width="157.4" height="15.0" fill="rgb(254,177,43)" rx="2" ry="2" />
<text  x="170.33" y="223.5" >xmlParseContentInter..</text>
</g>
<g >
<title>desktop::Desktop::doShutdown (6 samples, 40.00%)</title><rect x="167.3" y="373" width="472.0" height="15.0" fill="rgb(229,29,1)" rx="2" ry="2" />
<text  x="170.33" y="383.5" >desktop::Desktop::doShutdown</text>
</g>
<g >
<title>_IO_funlockfile (3 samples, 20.00%)</title><rect x="954.0" y="373" width="236.0" height="15.0" fill="rgb(238,68,31)" rx="2" ry="2" />
<text  x="957.00" y="383.5" >_IO_funlockfile</text>
</g>
<g >
<title>psp::PrintFontManager::Substitute (1 samples, 6.67%)</title><rect x="88.7" y="277" width="78.6" height="15.0" fill="rgb(247,105,17)" rx="2" ry="2" />
<text  x="91.67" y="287.5" >psp::Prin..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 6.67%)</title><rect x="167.3" y="117" width="78.7" height="15.0" fill="rgb(213,63,12)" rx="2" ry="2" />
<text  x="170.33" y="127.5" >_IO_funlo..</text>
</g>
<g >
<title>dp_misc::DescriptionInfoset::getLocalizedDisplayName (1 samples, 6.67%)</title><rect x="875.3" y="245" width="78.7" height="15.0" fill="rgb(243,172,18)" rx="2" ry="2" />
<text  x="878.33" y="255.5" >dp_misc::..</text>
</g>
<g >
<title>dp_misc::DescriptionInfoset::~DescriptionInfoset (3 samples, 20.00%)</title><rect x="403.3" y="245" width="236.0" height="15.0" fill="rgb(244,222,27)" rx="2" ry="2" />
<text  x="406.33" y="255.5" >dp_misc::DescriptionInfoset::~D..</text>
</g>
<g >
<title>lokit_main (1 samples, 6.67%)</title><rect x="875.3" y="469" width="78.7" height="15.0" fill="rgb(234,63,19)" rx="2" ry="2" />
<text  x="878.33" y="479.5" >lokit_main</text>
</g>
<g >
<title>coolwsd (1 samples, 6.67%)</title><rect x="10.0" y="501" width="78.7" height="15.0" fill="rgb(226,178,47)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >coolwsd</text>
</g>
<g >
<title>DOM::CNode::~CNode (3 samples, 20.00%)</title><rect x="403.3" y="213" width="236.0" height="15.0" fill="rgb(249,213,24)" rx="2" ry="2" />
<text  x="406.33" y="223.5" >DOM::CNode::~CNode</text>
</g>
<g >
<title>lo_runLoop (6 samples, 40.00%)</title><rect x="167.3" y="437" width="472.0" height="15.0" fill="rgb(211,109,20)" rx="2" ry="2" />
<text  x="170.33" y="447.5" >lo_runLoop</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 6.67%)</title><rect x="246.0" y="69" width="78.7" height="15.0" fill="rgb(219,93,27)" rx="2" ry="2" />
<text  x="249.00" y="79.5" >handleUse..</text>
</g>
<g >
<title>handleUserProfileSignal (3 samples, 20.00%)</title><rect x="954.0" y="357" width="236.0" height="15.0" fill="rgb(209,123,8)" rx="2" ry="2" />
<text  x="957.00" y="367.5" >handleUserProfileSignal</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (1 samples, 6.67%)</title><rect x="875.3" y="277" width="78.7" height="15.0" fill="rgb(241,8,40)" rx="2" ry="2" />
<text  x="878.33" y="287.5" >std::__in..</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (1 samples, 6.67%)</title><rect x="875.3" y="309" width="78.7" height="15.0" fill="rgb(238,172,49)" rx="2" ry="2" />
<text  x="878.33" y="319.5" >std::__in..</text>
</g>
<g >
<title>syscall (3 samples, 20.00%)</title><rect x="954.0" y="341" width="236.0" height="15.0" fill="rgb(233,63,38)" rx="2" ry="2" />
<text  x="957.00" y="351.5" >syscall</text>
</g>
<g >
<title>xmlFreeProp (3 samples, 20.00%)</title><rect x="403.3" y="117" width="236.0" height="15.0" fill="rgb(210,124,35)" rx="2" ry="2" />
<text  x="406.33" y="127.5" >xmlFreeProp</text>
</g>
<g >
<title>xmlDoRead (2 samples, 13.33%)</title><rect x="167.3" y="261" width="157.4" height="15.0" fill="rgb(209,153,53)" rx="2" ry="2" />
<text  x="170.33" y="271.5" >xmlDoRead</text>
</g>
<g >
<title>[unknown] (3 samples, 20.00%)</title><rect x="954.0" y="485" width="236.0" height="15.0" fill="rgb(236,164,52)" rx="2" ry="2" />
<text  x="957.00" y="495.5" >[unknown]</text>
</g>
<g >
<title>xmlFreePropList (3 samples, 20.00%)</title><rect x="403.3" y="133" width="236.0" height="15.0" fill="rgb(226,172,32)" rx="2" ry="2" />
<text  x="406.33" y="143.5" >xmlFreePropList</text>
</g>
<g >
<title>xmlFreeDoc (3 samples, 20.00%)</title><rect x="403.3" y="165" width="236.0" height="15.0" fill="rgb(230,128,12)" rx="2" ry="2" />
<text  x="406.33" y="175.5" >xmlFreeDoc</text>
</g>
<g >
<title>xmlFreeNodeList (3 samples, 20.00%)</title><rect x="403.3" y="149" width="236.0" height="15.0" fill="rgb(217,177,41)" rx="2" ry="2" />
<text  x="406.33" y="159.5" >xmlFreeNodeList</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 6.67%)</title><rect x="875.3" y="117" width="78.7" height="15.0" fill="rgb(237,206,26)" rx="2" ry="2" />
<text  x="878.33" y="127.5" >handleUse..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 6.67%)</title><rect x="324.7" y="117" width="78.6" height="15.0" fill="rgb(253,205,17)" rx="2" ry="2" />
<text  x="327.67" y="127.5" >handleUse..</text>
</g>
<g >
<title>xmlStrndup (1 samples, 6.67%)</title><rect x="167.3" y="149" width="78.7" height="15.0" fill="rgb(240,132,9)" rx="2" ry="2" />
<text  x="170.33" y="159.5" >xmlStrndup</text>
</g>
<g >
<title>[unknown] (11 samples, 73.33%)</title><rect x="88.7" y="485" width="865.3" height="15.0" fill="rgb(242,225,37)" rx="2" ry="2" />
<text  x="91.67" y="495.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (1 samples, 6.67%)</title><rect x="10.0" y="485" width="78.7" height="15.0" fill="rgb(205,106,45)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >[unknown]</text>
</g>
<g >
<title>dp_registry::backend::bundle::(anonymous namespace)::BackendImpl::PackageImpl::getDisplayName (3 samples, 20.00%)</title><rect x="639.3" y="421" width="236.0" height="15.0" fill="rgb(228,42,0)" rx="2" ry="2" />
<text  x="642.33" y="431.5" >dp_registry::backend::bundle::(..</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (3 samples, 20.00%)</title><rect x="403.3" y="293" width="236.0" height="15.0" fill="rgb(233,224,15)" rx="2" ry="2" />
<text  x="406.33" y="303.5" >std::__introsort_loop&lt;__gnu_cxx..</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (3 samples, 20.00%)</title><rect x="639.3" y="437" width="236.0" height="15.0" fill="rgb(210,16,43)" rx="2" ry="2" />
<text  x="642.33" y="447.5" >std::__introsort_loop&lt;__gnu_cxx..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 6.67%)</title><rect x="324.7" y="133" width="78.6" height="15.0" fill="rgb(214,18,31)" rx="2" ry="2" />
<text  x="327.67" y="143.5" >_IO_funlo..</text>
</g>
<g >
<title>SocketPoll::poll (1 samples, 6.67%)</title><rect x="10.0" y="405" width="78.7" height="15.0" fill="rgb(230,72,1)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >SocketPol..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 6.67%)</title><rect x="875.3" y="133" width="78.7" height="15.0" fill="rgb(214,57,12)" rx="2" ry="2" />
<text  x="878.33" y="143.5" >_IO_funlo..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 6.67%)</title><rect x="10.0" y="373" width="78.7" height="15.0" fill="rgb(234,25,44)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >_IO_funlo..</text>
</g>
<g >
<title>rtl::uri::detail::readUcs4 (3 samples, 20.00%)</title><rect x="639.3" y="229" width="236.0" height="15.0" fill="rgb(239,46,30)" rx="2" ry="2" />
<text  x="642.33" y="239.5" >rtl::uri::detail::readUcs4</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (3 samples, 20.00%)</title><rect x="403.3" y="309" width="236.0" height="15.0" fill="rgb(223,152,32)" rx="2" ry="2" />
<text  x="406.33" y="319.5" >std::__introsort_loop&lt;__gnu_cxx..</text>
</g>
<g >
<title>malloc (1 samples, 6.67%)</title><rect x="167.3" y="133" width="78.7" height="15.0" fill="rgb(224,205,37)" rx="2" ry="2" />
<text  x="170.33" y="143.5" >malloc</text>
</g>
<g >
<title>soffice_main (6 samples, 40.00%)</title><rect x="167.3" y="421" width="472.0" height="15.0" fill="rgb(205,113,20)" rx="2" ry="2" />
<text  x="170.33" y="431.5" >soffice_main</text>
</g>
<g >
<title>all (15 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(249,185,10)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>IconView::DumpEntryAndSiblings (1 samples, 6.67%)</title><rect x="88.7" y="469" width="78.6" height="15.0" fill="rgb(220,55,22)" rx="2" ry="2" />
<text  x="91.67" y="479.5" >IconView:..</text>
</g>
<g >
<title>SalLayoutGlyphsCache::GetLayoutGlyphs (1 samples, 6.67%)</title><rect x="88.7" y="357" width="78.6" height="15.0" fill="rgb(244,127,34)" rx="2" ry="2" />
<text  x="91.67" y="367.5" >SalLayout..</text>
</g>
<g >
<title>createLibreOfficeKit (6 samples, 40.00%)</title><rect x="167.3" y="469" width="472.0" height="15.0" fill="rgb(217,83,7)" rx="2" ry="2" />
<text  x="170.33" y="479.5" >createLibreOfficeKit</text>
</g>
<g >
<title>kitbroker (11 samples, 73.33%)</title><rect x="88.7" y="501" width="865.3" height="15.0" fill="rgb(217,52,6)" rx="2" ry="2" />
<text  x="91.67" y="511.5" >kitbroker</text>
</g>
<g >
<title>dp_misc::DescriptionInfoset::matchLanguageTag (1 samples, 6.67%)</title><rect x="875.3" y="213" width="78.7" height="15.0" fill="rgb(243,75,51)" rx="2" ry="2" />
<text  x="878.33" y="223.5" >dp_misc::..</text>
</g>
<g >
<title>FcHashTableCreate (1 samples, 6.67%)</title><rect x="88.7" y="213" width="78.6" height="15.0" fill="rgb(221,84,38)" rx="2" ry="2" />
<text  x="91.67" y="223.5" >FcHashTab..</text>
</g>
<g >
<title>OutputDevice::ImplLayout (1 samples, 6.67%)</title><rect x="88.7" y="341" width="78.6" height="15.0" fill="rgb(227,115,46)" rx="2" ry="2" />
<text  x="91.67" y="351.5" >OutputDev..</text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (1 samples, 6.67%)</title><rect x="324.7" y="149" width="78.6" height="15.0" fill="rgb(233,186,42)" rx="2" ry="2" />
<text  x="327.67" y="159.5" >__memcpy_..</text>
</g>
<g >
<title>xmlParseDocument (2 samples, 13.33%)</title><rect x="167.3" y="245" width="157.4" height="15.0" fill="rgb(213,207,40)" rx="2" ry="2" />
<text  x="170.33" y="255.5" >xmlParseDocument</text>
</g>
<g >
<title>ImplFontCache::GetGlyphFallbackFont (1 samples, 6.67%)</title><rect x="88.7" y="309" width="78.6" height="15.0" fill="rgb(231,27,36)" rx="2" ry="2" />
<text  x="91.67" y="319.5" >ImplFontC..</text>
</g>
<g >
<title>ImplSVMain (1 samples, 6.67%)</title><rect x="875.3" y="421" width="78.7" height="15.0" fill="rgb(224,225,49)" rx="2" ry="2" />
<text  x="878.33" y="431.5" >ImplSVMain</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (3 samples, 20.00%)</title><rect x="403.3" y="277" width="236.0" height="15.0" fill="rgb(253,13,18)" rx="2" ry="2" />
<text  x="406.33" y="287.5" >std::__introsort_loop&lt;__gnu_cxx..</text>
</g>
<g >
<title>xmlSAX2AttributeNs (1 samples, 6.67%)</title><rect x="246.0" y="149" width="78.7" height="15.0" fill="rgb(254,122,16)" rx="2" ry="2" />
<text  x="249.00" y="159.5" >xmlSAX2At..</text>
</g>
<g >
<title>COOLWSD::innerMain (1 samples, 6.67%)</title><rect x="10.0" y="469" width="78.7" height="15.0" fill="rgb(232,198,46)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >COOLWSD::..</text>
</g>
<g >
<title>FcConfigSubstituteWithPat (1 samples, 6.67%)</title><rect x="88.7" y="229" width="78.6" height="15.0" fill="rgb(205,154,49)" rx="2" ry="2" />
<text  x="91.67" y="239.5" >FcConfigS..</text>
</g>
<g >
<title>rtl_uriDecode (1 samples, 6.67%)</title><rect x="324.7" y="197" width="78.6" height="15.0" fill="rgb(219,181,46)" rx="2" ry="2" />
<text  x="327.67" y="207.5" >rtl_uriDe..</text>
</g>
<g >
<title>fileaccess::BaseContent::execute (3 samples, 20.00%)</title><rect x="639.3" y="357" width="236.0" height="15.0" fill="rgb(236,154,51)" rx="2" ry="2" />
<text  x="642.33" y="367.5" >fileaccess::BaseContent::execute</text>
</g>
<g >
<title>FcFontRenderPrepare (1 samples, 6.67%)</title><rect x="88.7" y="245" width="78.6" height="15.0" fill="rgb(245,55,6)" rx="2" ry="2" />
<text  x="91.67" y="255.5" >FcFontRen..</text>
</g>
<g >
<title>comphelper::BackupFileHelper::tryPushExtensionInfo (6 samples, 40.00%)</title><rect x="167.3" y="357" width="472.0" height="15.0" fill="rgb(248,19,53)" rx="2" ry="2" />
<text  x="170.33" y="367.5" >comphelper::BackupFileHelper::tryPushExtensionInfo</text>
</g>
<g >
<title>fileaccess::BaseContent::open (3 samples, 20.00%)</title><rect x="639.3" y="341" width="236.0" height="15.0" fill="rgb(236,93,48)" rx="2" ry="2" />
<text  x="642.33" y="351.5" >fileaccess::BaseContent::open</text>
</g>
<g >
<title>http::Session::syncRequest (1 samples, 6.67%)</title><rect x="10.0" y="437" width="78.7" height="15.0" fill="rgb(218,82,3)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >http::Ses..</text>
</g>
<g >
<title>xmlSAX2TextNode (1 samples, 6.67%)</title><rect x="167.3" y="165" width="78.7" height="15.0" fill="rgb(208,135,16)" rx="2" ry="2" />
<text  x="170.33" y="175.5" >xmlSAX2Te..</text>
</g>
<g >
<title>ppoll (1 samples, 6.67%)</title><rect x="10.0" y="389" width="78.7" height="15.0" fill="rgb(230,44,21)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >ppoll</text>
</g>
<g >
<title>DOM::CElement::~CElement (3 samples, 20.00%)</title><rect x="403.3" y="229" width="236.0" height="15.0" fill="rgb(229,229,23)" rx="2" ry="2" />
<text  x="406.33" y="239.5" >DOM::CElement::~CElement</text>
</g>
<g >
<title>xmlParseElement (2 samples, 13.33%)</title><rect x="167.3" y="229" width="157.4" height="15.0" fill="rgb(235,34,32)" rx="2" ry="2" />
<text  x="170.33" y="239.5" >xmlParseElement</text>
</g>
<g >
<title>http::Session::syncRequest (3 samples, 20.00%)</title><rect x="954.0" y="437" width="236.0" height="15.0" fill="rgb(210,54,44)" rx="2" ry="2" />
<text  x="957.00" y="447.5" >http::Session::syncRequest</text>
</g>
<g >
<title>StylesPreviewWindow_Base::GetCachedPreview (1 samples, 6.67%)</title><rect x="88.7" y="405" width="78.6" height="15.0" fill="rgb(229,83,9)" rx="2" ry="2" />
<text  x="91.67" y="415.5" >StylesPre..</text>
</g>
<g >
<title>dp_registry::backend::bundle::(anonymous namespace)::BackendImpl::PackageImpl::getDisplayName (3 samples, 20.00%)</title><rect x="403.3" y="261" width="236.0" height="15.0" fill="rgb(237,72,14)" rx="2" ry="2" />
<text  x="406.33" y="271.5" >dp_registry::backend::bundle::(..</text>
</g>
<g >
<title>fileaccess::FileProvider::queryContent (1 samples, 6.67%)</title><rect x="324.7" y="245" width="78.6" height="15.0" fill="rgb(237,19,29)" rx="2" ry="2" />
<text  x="327.67" y="255.5" >fileacces..</text>
</g>
<g >
<title>lo_runLoop (1 samples, 6.67%)</title><rect x="875.3" y="453" width="78.7" height="15.0" fill="rgb(237,36,23)" rx="2" ry="2" />
<text  x="878.33" y="463.5" >lo_runLoop</text>
</g>
<g >
<title>dp_misc::getDescriptionInfoset (3 samples, 20.00%)</title><rect x="167.3" y="293" width="236.0" height="15.0" fill="rgb(247,59,5)" rx="2" ry="2" />
<text  x="170.33" y="303.5" >dp_misc::getDescriptionInfoset</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 6.67%)</title><rect x="88.7" y="149" width="78.6" height="15.0" fill="rgb(206,117,26)" rx="2" ry="2" />
<text  x="91.67" y="159.5" >_IO_funlo..</text>
</g>
<g >
<title>comphelper::BackupFileHelper::tryPushExtensionInfo (1 samples, 6.67%)</title><rect x="875.3" y="373" width="78.7" height="15.0" fill="rgb(236,128,16)" rx="2" ry="2" />
<text  x="878.33" y="383.5" >comphelpe..</text>
</g>
<g >
<title>dp_registry::backend::bundle::(anonymous namespace)::BackendImpl::PackageImpl::getDisplayName (3 samples, 20.00%)</title><rect x="167.3" y="309" width="236.0" height="15.0" fill="rgb(246,112,30)" rx="2" ry="2" />
<text  x="170.33" y="319.5" >dp_registry::backend::bundle::(..</text>
</g>
<g >
<title>desktop::Desktop::Main (6 samples, 40.00%)</title><rect x="167.3" y="389" width="472.0" height="15.0" fill="rgb(212,34,33)" rx="2" ry="2" />
<text  x="170.33" y="399.5" >desktop::Desktop::Main</text>
</g>
<g >
<title>StyleItemController::DrawText (1 samples, 6.67%)</title><rect x="88.7" y="373" width="78.6" height="15.0" fill="rgb(210,160,4)" rx="2" ry="2" />
<text  x="91.67" y="383.5" >StyleItem..</text>
</g>
<g >
<title>handleUserProfileSignal (3 samples, 20.00%)</title><rect x="403.3" y="53" width="236.0" height="15.0" fill="rgb(209,80,16)" rx="2" ry="2" />
<text  x="406.33" y="63.5" >handleUserProfileSignal</text>
</g>
<g >
<title>osl_getSystemPathFromFileURL (1 samples, 6.67%)</title><rect x="324.7" y="213" width="78.6" height="15.0" fill="rgb(251,110,13)" rx="2" ry="2" />
<text  x="327.67" y="223.5" >osl_getSy..</text>
</g>
<g >
<title>dp_manager::ExtensionManager::getAllExtensions (6 samples, 40.00%)</title><rect x="167.3" y="325" width="472.0" height="15.0" fill="rgb(221,1,19)" rx="2" ry="2" />
<text  x="170.33" y="335.5" >dp_manager::ExtensionManager::getAllExtensions</text>
</g>
<g >
<title>syscall (1 samples, 6.67%)</title><rect x="324.7" y="101" width="78.6" height="15.0" fill="rgb(252,126,49)" rx="2" ry="2" />
<text  x="327.67" y="111.5" >syscall</text>
</g>
<g >
<title>ucbhelper::Content_Impl::executeCommand (3 samples, 20.00%)</title><rect x="639.3" y="373" width="236.0" height="15.0" fill="rgb(248,13,30)" rx="2" ry="2" />
<text  x="642.33" y="383.5" >ucbhelper::Content_Impl::execut..</text>
</g>
<g >
<title>desktop::Desktop::doShutdown (1 samples, 6.67%)</title><rect x="875.3" y="389" width="78.7" height="15.0" fill="rgb(233,105,16)" rx="2" ry="2" />
<text  x="878.33" y="399.5" >desktop::..</text>
</g>
<g >
<title>StylesPreviewWindow_Base::DoJsonProperty (1 samples, 6.67%)</title><rect x="88.7" y="437" width="78.6" height="15.0" fill="rgb(231,108,5)" rx="2" ry="2" />
<text  x="91.67" y="447.5" >StylesPre..</text>
</g>
<g >
<title>comphelper::BackupFileHelper::tryPush_extensionInfo (6 samples, 40.00%)</title><rect x="167.3" y="341" width="472.0" height="15.0" fill="rgb(209,156,52)" rx="2" ry="2" />
<text  x="170.33" y="351.5" >comphelper::BackupFileHelper::tryPush_extensionInfo</text>
</g>
<g >
<title>malloc (1 samples, 6.67%)</title><rect x="88.7" y="197" width="78.6" height="15.0" fill="rgb(213,22,53)" rx="2" ry="2" />
<text  x="91.67" y="207.5" >malloc</text>
</g>
<g >
<title>ppoll (3 samples, 20.00%)</title><rect x="954.0" y="389" width="236.0" height="15.0" fill="rgb(227,139,7)" rx="2" ry="2" />
<text  x="957.00" y="399.5" >ppoll</text>
</g>
<g >
<title>osl::detail::convertUrlToPathname (3 samples, 20.00%)</title><rect x="639.3" y="245" width="236.0" height="15.0" fill="rgb(226,161,1)" rx="2" ry="2" />
<text  x="642.33" y="255.5" >osl::detail::convertUrlToPathname</text>
</g>
<g >
<title>xmlDictLookupInternal (1 samples, 6.67%)</title><rect x="246.0" y="101" width="78.7" height="15.0" fill="rgb(217,42,54)" rx="2" ry="2" />
<text  x="249.00" y="111.5" >xmlDictLo..</text>
</g>
<g >
<title>fileaccess::TaskManager::getUnqFromUrl (1 samples, 6.67%)</title><rect x="324.7" y="229" width="78.6" height="15.0" fill="rgb(220,227,38)" rx="2" ry="2" />
<text  x="327.67" y="239.5" >fileacces..</text>
</g>
<g >
<title>xmlSAX2Text (1 samples, 6.67%)</title><rect x="167.3" y="181" width="78.7" height="15.0" fill="rgb(225,225,38)" rx="2" ry="2" />
<text  x="170.33" y="191.5" >xmlSAX2Text</text>
</g>
<g >
<title>syscall (1 samples, 6.67%)</title><rect x="10.0" y="341" width="78.7" height="15.0" fill="rgb(205,123,37)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >syscall</text>
</g>
<g >
<title>COOLWSD::processFetchUpdate (1 samples, 6.67%)</title><rect x="10.0" y="453" width="78.7" height="15.0" fill="rgb(222,194,48)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >COOLWSD::..</text>
</g>
<g >
<title>rtl::str::stringbuffer_insert&lt;_rtl_uString, char16_t&gt; (1 samples, 6.67%)</title><rect x="324.7" y="165" width="78.6" height="15.0" fill="rgb(221,43,6)" rx="2" ry="2" />
<text  x="327.67" y="175.5" >rtl::str:..</text>
</g>
<g >
<title>_IO_funlockfile (3 samples, 20.00%)</title><rect x="403.3" y="69" width="236.0" height="15.0" fill="rgb(215,177,47)" rx="2" ry="2" />
<text  x="406.33" y="79.5" >_IO_funlockfile</text>
</g>
<g >
<title>syscall (1 samples, 6.67%)</title><rect x="875.3" y="101" width="78.7" height="15.0" fill="rgb(213,1,16)" rx="2" ry="2" />
<text  x="878.33" y="111.5" >syscall</text>
</g>
<g >
<title>ucbhelper::Content::openStream (3 samples, 20.00%)</title><rect x="639.3" y="389" width="236.0" height="15.0" fill="rgb(244,28,3)" rx="2" ry="2" />
<text  x="642.33" y="399.5" >ucbhelper::Content::openStream</text>
</g>
<g >
<title>xmlFreeNodeList (3 samples, 20.00%)</title><rect x="403.3" y="101" width="236.0" height="15.0" fill="rgb(248,62,50)" rx="2" ry="2" />
<text  x="406.33" y="111.5" >xmlFreeNodeList</text>
</g>
<g >
<title>DOM::CDocumentBuilder::parse (2 samples, 13.33%)</title><rect x="167.3" y="277" width="157.4" height="15.0" fill="rgb(206,101,31)" rx="2" ry="2" />
<text  x="170.33" y="287.5" >DOM::CDocumentBuilde..</text>
</g>
<g >
<title>xmlParseStartTag2.constprop.0 (1 samples, 6.67%)</title><rect x="246.0" y="181" width="78.7" height="15.0" fill="rgb(223,5,42)" rx="2" ry="2" />
<text  x="249.00" y="191.5" >xmlParseS..</text>
</g>
<g >
<title>free (3 samples, 20.00%)</title><rect x="403.3" y="85" width="236.0" height="15.0" fill="rgb(209,7,30)" rx="2" ry="2" />
<text  x="406.33" y="95.5" >free</text>
</g>
<g >
<title>StyleItemController::DrawEntry (1 samples, 6.67%)</title><rect x="88.7" y="389" width="78.6" height="15.0" fill="rgb(250,92,47)" rx="2" ry="2" />
<text  x="91.67" y="399.5" >StyleItem..</text>
</g>
<g >
<title>SalInstanceIconView::LinkStubDumpElemToPropertyTreeHdl (1 samples, 6.67%)</title><rect x="88.7" y="453" width="78.6" height="15.0" fill="rgb(230,217,1)" rx="2" ry="2" />
<text  x="91.67" y="463.5" >SalInstan..</text>
</g>
<g >
<title>dp_registry::backend::bundle::(anonymous namespace)::BackendImpl::PackageImpl::getDisplayName (1 samples, 6.67%)</title><rect x="875.3" y="261" width="78.7" height="15.0" fill="rgb(211,195,48)" rx="2" ry="2" />
<text  x="878.33" y="271.5" >dp_regist..</text>
</g>
<g >
<title>vcl::font::PhysicalFontCollection::GetGlyphFallbackFont (1 samples, 6.67%)</title><rect x="88.7" y="293" width="78.6" height="15.0" fill="rgb(224,187,53)" rx="2" ry="2" />
<text  x="91.67" y="303.5" >vcl::font..</text>
</g>
<g >
<title>fileaccess::TaskManager::open (3 samples, 20.00%)</title><rect x="639.3" y="325" width="236.0" height="15.0" fill="rgb(246,224,2)" rx="2" ry="2" />
<text  x="642.33" y="335.5" >fileaccess::TaskManager::open</text>
</g>
<g >
<title>comphelper::BackupFileHelper::tryPush_extensionInfo (1 samples, 6.67%)</title><rect x="875.3" y="357" width="78.7" height="15.0" fill="rgb(235,116,45)" rx="2" ry="2" />
<text  x="878.33" y="367.5" >comphelpe..</text>
</g>
<g >
<title>fileaccess::XInputStream_impl::XInputStream_impl (3 samples, 20.00%)</title><rect x="639.3" y="309" width="236.0" height="15.0" fill="rgb(253,84,1)" rx="2" ry="2" />
<text  x="642.33" y="319.5" >fileaccess::XInputStream_impl::..</text>
</g>
<g >
<title>OutputDevice::ImplGlyphFallbackLayout (1 samples, 6.67%)</title><rect x="88.7" y="325" width="78.6" height="15.0" fill="rgb(210,182,27)" rx="2" ry="2" />
<text  x="91.67" y="335.5" >OutputDev..</text>
</g>
<g >
<title>dp_manager::ExtensionManager::getAllExtensions (1 samples, 6.67%)</title><rect x="875.3" y="341" width="78.7" height="15.0" fill="rgb(209,150,41)" rx="2" ry="2" />
<text  x="878.33" y="351.5" >dp_manage..</text>
</g>
<g >
<title>XPath::CXPathAPI::selectSingleNode (1 samples, 6.67%)</title><rect x="875.3" y="197" width="78.7" height="15.0" fill="rgb(205,214,33)" rx="2" ry="2" />
<text  x="878.33" y="207.5" >XPath::CX..</text>
</g>
<g >
<title>ucbhelper::Content::Content (1 samples, 6.67%)</title><rect x="324.7" y="277" width="78.6" height="15.0" fill="rgb(210,188,43)" rx="2" ry="2" />
<text  x="327.67" y="287.5" >ucbhelper..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 6.67%)</title><rect x="10.0" y="357" width="78.7" height="15.0" fill="rgb(210,49,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >handleUse..</text>
</g>
<g >
<title>RemoteJSONPoll::pollingThread (3 samples, 20.00%)</title><rect x="954.0" y="453" width="236.0" height="15.0" fill="rgb(247,185,40)" rx="2" ry="2" />
<text  x="957.00" y="463.5" >RemoteJSONPoll::pollingThread</text>
</g>
<g >
<title>xmlSAX2StartElementNs (1 samples, 6.67%)</title><rect x="246.0" y="165" width="78.7" height="15.0" fill="rgb(254,148,49)" rx="2" ry="2" />
<text  x="249.00" y="175.5" >xmlSAX2St..</text>
</g>
<g >
<title>xmlDictLookup (1 samples, 6.67%)</title><rect x="246.0" y="117" width="78.7" height="15.0" fill="rgb(212,229,1)" rx="2" ry="2" />
<text  x="249.00" y="127.5" >xmlDictLo..</text>
</g>
<g >
<title>http::Session::syncRequest (1 samples, 6.67%)</title><rect x="10.0" y="421" width="78.7" height="15.0" fill="rgb(246,218,18)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >http::Ses..</text>
</g>
<g >
<title>dp_manager::ExtensionManager::getAllExtensions (3 samples, 20.00%)</title><rect x="639.3" y="469" width="236.0" height="15.0" fill="rgb(250,135,9)" rx="2" ry="2" />
<text  x="642.33" y="479.5" >dp_manager::ExtensionManager::g..</text>
</g>
<g >
<title>syscall (1 samples, 6.67%)</title><rect x="88.7" y="117" width="78.6" height="15.0" fill="rgb(218,55,20)" rx="2" ry="2" />
<text  x="91.67" y="127.5" >syscall</text>
</g>
<g >
<title>_int_malloc (1 samples, 6.67%)</title><rect x="88.7" y="181" width="78.6" height="15.0" fill="rgb(254,87,47)" rx="2" ry="2" />
<text  x="91.67" y="191.5" >_int_malloc</text>
</g>
<g >
<title>xmlParseElementStart (1 samples, 6.67%)</title><rect x="246.0" y="197" width="78.7" height="15.0" fill="rgb(228,166,27)" rx="2" ry="2" />
<text  x="249.00" y="207.5" >xmlParseE..</text>
</g>
<g >
<title>rtl_uStringbuffer_insertUtf32 (1 samples, 6.67%)</title><rect x="324.7" y="181" width="78.6" height="15.0" fill="rgb(211,91,11)" rx="2" ry="2" />
<text  x="327.67" y="191.5" >rtl_uStri..</text>
</g>
<g >
<title>remotefontconfi (3 samples, 20.00%)</title><rect x="954.0" y="501" width="236.0" height="15.0" fill="rgb(230,215,13)" rx="2" ry="2" />
<text  x="957.00" y="511.5" >remotefontconfi</text>
</g>
<g >
<title>DOM::CDocument::GetCNode (1 samples, 6.67%)</title><rect x="875.3" y="165" width="78.7" height="15.0" fill="rgb(215,94,52)" rx="2" ry="2" />
<text  x="878.33" y="175.5" >DOM::CDoc..</text>
</g>
<g >
<title>http::Session::syncRequest (3 samples, 20.00%)</title><rect x="954.0" y="421" width="236.0" height="15.0" fill="rgb(223,163,40)" rx="2" ry="2" />
<text  x="957.00" y="431.5" >http::Session::syncRequest</text>
</g>
<g >
<title>xmlSAX2TextNode (1 samples, 6.67%)</title><rect x="246.0" y="133" width="78.7" height="15.0" fill="rgb(223,77,23)" rx="2" ry="2" />
<text  x="249.00" y="143.5" >xmlSAX2Te..</text>
</g>
<g >
<title>fileaccess::ReconnectingFile::open (3 samples, 20.00%)</title><rect x="639.3" y="293" width="236.0" height="15.0" fill="rgb(240,213,41)" rx="2" ry="2" />
<text  x="642.33" y="303.5" >fileaccess::ReconnectingFile::o..</text>
</g>
<g >
<title>SocketPoll::poll (3 samples, 20.00%)</title><rect x="954.0" y="405" width="236.0" height="15.0" fill="rgb(212,147,10)" rx="2" ry="2" />
<text  x="957.00" y="415.5" >SocketPoll::poll</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (1 samples, 6.67%)</title><rect x="875.3" y="325" width="78.7" height="15.0" fill="rgb(218,155,35)" rx="2" ry="2" />
<text  x="878.33" y="335.5" >std::__in..</text>
</g>
<g >
<title>handleUserProfileSignal (3 samples, 20.00%)</title><rect x="639.3" y="197" width="236.0" height="15.0" fill="rgb(244,119,44)" rx="2" ry="2" />
<text  x="642.33" y="207.5" >handleUserProfileSignal</text>
</g>
<g >
<title>DOM::CDocument::~CDocument (3 samples, 20.00%)</title><rect x="403.3" y="197" width="236.0" height="15.0" fill="rgb(238,72,29)" rx="2" ry="2" />
<text  x="406.33" y="207.5" >DOM::CDocument::~CDocument</text>
</g>
<g >
<title>rtl_allocateMemory (1 samples, 6.67%)</title><rect x="875.3" y="149" width="78.7" height="15.0" fill="rgb(253,108,45)" rx="2" ry="2" />
<text  x="878.33" y="159.5" >rtl_alloc..</text>
</g>
<g >
<title>DOM::CDocument::~CDocument (3 samples, 20.00%)</title><rect x="403.3" y="181" width="236.0" height="15.0" fill="rgb(228,209,29)" rx="2" ry="2" />
<text  x="406.33" y="191.5" >DOM::CDocument::~CDocument</text>
</g>
<g >
<title>desktop::Desktop::Main (1 samples, 6.67%)</title><rect x="875.3" y="405" width="78.7" height="15.0" fill="rgb(238,200,50)" rx="2" ry="2" />
<text  x="878.33" y="415.5" >desktop::..</text>
</g>
<g >
<title>ImplSVMain (6 samples, 40.00%)</title><rect x="167.3" y="405" width="472.0" height="15.0" fill="rgb(234,229,10)" rx="2" ry="2" />
<text  x="170.33" y="415.5" >ImplSVMain</text>
</g>
<g >
<title>dp_misc::DescriptionInfoset::getLocalizedChild (1 samples, 6.67%)</title><rect x="875.3" y="229" width="78.7" height="15.0" fill="rgb(220,184,48)" rx="2" ry="2" />
<text  x="878.33" y="239.5" >dp_misc::..</text>
</g>
<g >
<title>FileURLToPath (3 samples, 20.00%)</title><rect x="639.3" y="261" width="236.0" height="15.0" fill="rgb(246,137,23)" rx="2" ry="2" />
<text  x="642.33" y="271.5" >FileURLToPath</text>
</g>
<g >
<title>FcFontSetMatch (1 samples, 6.67%)</title><rect x="88.7" y="261" width="78.6" height="15.0" fill="rgb(232,219,54)" rx="2" ry="2" />
<text  x="91.67" y="271.5" >FcFontSet..</text>
</g>
<g >
<title>syscall (1 samples, 6.67%)</title><rect x="167.3" y="85" width="78.7" height="15.0" fill="rgb(222,6,6)" rx="2" ry="2" />
<text  x="170.33" y="95.5" >syscall</text>
</g>
<g >
<title>openFile (3 samples, 20.00%)</title><rect x="639.3" y="277" width="236.0" height="15.0" fill="rgb(249,71,42)" rx="2" ry="2" />
<text  x="642.33" y="287.5" >openFile</text>
</g>
<g >
<title>SocketPoll::pollingThreadEntry (3 samples, 20.00%)</title><rect x="954.0" y="469" width="236.0" height="15.0" fill="rgb(211,141,50)" rx="2" ry="2" />
<text  x="957.00" y="479.5" >SocketPoll::pollingThreadEntry</text>
</g>
<g >
<title>syscall (1 samples, 6.67%)</title><rect x="246.0" y="53" width="78.7" height="15.0" fill="rgb(217,109,11)" rx="2" ry="2" />
<text  x="249.00" y="63.5" >syscall</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (1 samples, 6.67%)</title><rect x="875.3" y="293" width="78.7" height="15.0" fill="rgb(239,9,11)" rx="2" ry="2" />
<text  x="878.33" y="303.5" >std::__in..</text>
</g>
<g >
<title>XPath::CNodeList::item (1 samples, 6.67%)</title><rect x="875.3" y="181" width="78.7" height="15.0" fill="rgb(244,130,19)" rx="2" ry="2" />
<text  x="878.33" y="191.5" >XPath::CN..</text>
</g>
<g >
<title>xmlParseCharDataComplex (1 samples, 6.67%)</title><rect x="167.3" y="197" width="78.7" height="15.0" fill="rgb(251,216,54)" rx="2" ry="2" />
<text  x="170.33" y="207.5" >xmlParseC..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 6.67%)</title><rect x="246.0" y="85" width="78.7" height="15.0" fill="rgb(226,57,29)" rx="2" ry="2" />
<text  x="249.00" y="95.5" >_IO_funlo..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 6.67%)</title><rect x="167.3" y="101" width="78.7" height="15.0" fill="rgb(238,165,34)" rx="2" ry="2" />
<text  x="170.33" y="111.5" >handleUse..</text>
</g>
<g >
<title>_IO_funlockfile (3 samples, 20.00%)</title><rect x="639.3" y="213" width="236.0" height="15.0" fill="rgb(236,152,31)" rx="2" ry="2" />
<text  x="642.33" y="223.5" >_IO_funlockfile</text>
</g>
<g >
<title>soffice_main (1 samples, 6.67%)</title><rect x="875.3" y="437" width="78.7" height="15.0" fill="rgb(232,29,34)" rx="2" ry="2" />
<text  x="878.33" y="447.5" >soffice_m..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 6.67%)</title><rect x="88.7" y="133" width="78.6" height="15.0" fill="rgb(233,8,54)" rx="2" ry="2" />
<text  x="91.67" y="143.5" >handleUse..</text>
</g>
<g >
<title>UniversalContentBroker::queryContent (1 samples, 6.67%)</title><rect x="324.7" y="261" width="78.6" height="15.0" fill="rgb(208,89,23)" rx="2" ry="2" />
<text  x="327.67" y="271.5" >Universal..</text>
</g>
<g >
<title>dp_misc::getDescriptionInfoset (3 samples, 20.00%)</title><rect x="639.3" y="405" width="236.0" height="15.0" fill="rgb(252,87,10)" rx="2" ry="2" />
<text  x="642.33" y="415.5" >dp_misc::getDescriptionInfoset</text>
</g>
<g >
<title>StylesPreviewWindow_Base::GetCachedPreviewJson (1 samples, 6.67%)</title><rect x="88.7" y="421" width="78.6" height="15.0" fill="rgb(214,140,8)" rx="2" ry="2" />
<text  x="91.67" y="431.5" >StylesPre..</text>
</g>
</g>
</svg>
