<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="550.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >StagingPerf.eu Watchdog Profile (2024-05-18T11:16:05.837102)</text>
<text id="details" x="10.00" y="533" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="533" > </text>
<g id="frames">
<g >
<title>ScModelObj::paintTile (4 samples, 20.00%)</title><rect x="187.0" y="405" width="236.0" height="15.0" fill="rgb(210,19,45)" rx="2" ry="2" />
<text  x="190.00" y="415.5" >ScModelObj::paintTile</text>
</g>
<g >
<title>soffice_main (1 samples, 5.00%)</title><rect x="482.0" y="421" width="59.0" height="15.0" fill="rgb(222,221,32)" rx="2" ry="2" />
<text  x="485.00" y="431.5" >soffic..</text>
</g>
<g >
<title>ImpEditEngine::InitDoc (1 samples, 5.00%)</title><rect x="187.0" y="181" width="59.0" height="15.0" fill="rgb(245,43,27)" rx="2" ry="2" />
<text  x="190.00" y="191.5" >ImpEdi..</text>
</g>
<g >
<title>ppoll (1 samples, 5.00%)</title><rect x="1131.0" y="373" width="59.0" height="15.0" fill="rgb(226,3,44)" rx="2" ry="2" />
<text  x="1134.00" y="383.5" >ppoll</text>
</g>
<g >
<title>HttpHelper::sendFileAndShutdown (10 samples, 50.00%)</title><rect x="541.0" y="453" width="590.0" height="15.0" fill="rgb(208,200,44)" rx="2" ry="2" />
<text  x="544.00" y="463.5" >HttpHelper::sendFileAndShutdown</text>
</g>
<g >
<title>COOLWSD::innerMain (1 samples, 5.00%)</title><rect x="10.0" y="453" width="59.0" height="15.0" fill="rgb(239,183,37)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >COOLWS..</text>
</g>
<g >
<title>_IO_funlockfile (3 samples, 15.00%)</title><rect x="246.0" y="277" width="177.0" height="15.0" fill="rgb(219,182,45)" rx="2" ry="2" />
<text  x="249.00" y="287.5" >_IO_funlockfile</text>
</g>
<g >
<title>http::Session::syncRequest (1 samples, 5.00%)</title><rect x="10.0" y="405" width="59.0" height="15.0" fill="rgb(219,146,15)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >http::..</text>
</g>
<g >
<title>ImplSVMain (1 samples, 5.00%)</title><rect x="482.0" y="405" width="59.0" height="15.0" fill="rgb(237,211,53)" rx="2" ry="2" />
<text  x="485.00" y="415.5" >ImplSV..</text>
</g>
<g >
<title>ScCellFormat::GetString (1 samples, 5.00%)</title><rect x="187.0" y="293" width="59.0" height="15.0" fill="rgb(231,70,50)" rx="2" ry="2" />
<text  x="190.00" y="303.5" >ScCell..</text>
</g>
<g >
<title>implCleanupItemEntry (1 samples, 5.00%)</title><rect x="187.0" y="101" width="59.0" height="15.0" fill="rgb(205,189,11)" rx="2" ry="2" />
<text  x="190.00" y="111.5" >implCl..</text>
</g>
<g >
<title>__pread64 (1 samples, 5.00%)</title><rect x="482.0" y="101" width="59.0" height="15.0" fill="rgb(212,47,8)" rx="2" ry="2" />
<text  x="485.00" y="111.5" >__prea..</text>
</g>
<g >
<title>ScGridWindow::PaintTile (4 samples, 20.00%)</title><rect x="187.0" y="389" width="236.0" height="15.0" fill="rgb(230,121,9)" rx="2" ry="2" />
<text  x="190.00" y="399.5" >ScGridWindow::PaintTile</text>
</g>
<g >
<title>RenderTiles::doRender (4 samples, 20.00%)</title><rect x="187.0" y="453" width="236.0" height="15.0" fill="rgb(224,13,37)" rx="2" ry="2" />
<text  x="190.00" y="463.5" >RenderTiles::doRender</text>
</g>
<g >
<title>all (20 samples, 100%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(235,180,44)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>osl_readFile (1 samples, 5.00%)</title><rect x="482.0" y="117" width="59.0" height="15.0" fill="rgb(221,114,38)" rx="2" ry="2" />
<text  x="485.00" y="127.5" >osl_re..</text>
</g>
<g >
<title>soffice_main (1 samples, 5.00%)</title><rect x="423.0" y="405" width="59.0" height="15.0" fill="rgb(250,220,49)" rx="2" ry="2" />
<text  x="426.00" y="415.5" >soffic..</text>
</g>
<g >
<title>syscall (10 samples, 50.00%)</title><rect x="541.0" y="437" width="590.0" height="15.0" fill="rgb(241,45,38)" rx="2" ry="2" />
<text  x="544.00" y="447.5" >syscall</text>
</g>
<g >
<title>lokit_main (1 samples, 5.00%)</title><rect x="482.0" y="453" width="59.0" height="15.0" fill="rgb(223,80,39)" rx="2" ry="2" />
<text  x="485.00" y="463.5" >lokit_..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="187.0" y="53" width="59.0" height="15.0" fill="rgb(212,43,23)" rx="2" ry="2" />
<text  x="190.00" y="63.5" >handle..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="423.0" y="165" width="59.0" height="15.0" fill="rgb(223,24,52)" rx="2" ry="2" />
<text  x="426.00" y="175.5" >_IO_fu..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="423.0" y="149" width="59.0" height="15.0" fill="rgb(217,45,26)" rx="2" ry="2" />
<text  x="426.00" y="159.5" >handle..</text>
</g>
<g >
<title>dp_misc::DescriptionInfoset::getLocalizedChild (1 samples, 5.00%)</title><rect x="423.0" y="245" width="59.0" height="15.0" fill="rgb(221,87,30)" rx="2" ry="2" />
<text  x="426.00" y="255.5" >dp_mis..</text>
</g>
<g >
<title>lo_runLoop (1 samples, 5.00%)</title><rect x="423.0" y="421" width="59.0" height="15.0" fill="rgb(248,33,7)" rx="2" ry="2" />
<text  x="426.00" y="431.5" >lo_run..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="10.0" y="357" width="59.0" height="15.0" fill="rgb(216,48,31)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >_IO_fu..</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="423.0" y="133" width="59.0" height="15.0" fill="rgb(248,33,25)" rx="2" ry="2" />
<text  x="426.00" y="143.5" >syscall</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="10.0" y="325" width="59.0" height="15.0" fill="rgb(227,7,5)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >syscall</text>
</g>
<g >
<title>dp_misc::DescriptionInfoset::matchLanguageTag (1 samples, 5.00%)</title><rect x="423.0" y="229" width="59.0" height="15.0" fill="rgb(242,172,24)" rx="2" ry="2" />
<text  x="426.00" y="239.5" >dp_mis..</text>
</g>
<g >
<title>syscall (3 samples, 15.00%)</title><rect x="246.0" y="245" width="177.0" height="15.0" fill="rgb(247,20,10)" rx="2" ry="2" />
<text  x="249.00" y="255.5" >syscall</text>
</g>
<g >
<title>ScGridWindow::DrawContent (4 samples, 20.00%)</title><rect x="187.0" y="373" width="236.0" height="15.0" fill="rgb(250,210,16)" rx="2" ry="2" />
<text  x="190.00" y="383.5" >ScGridWindow::DrawContent</text>
</g>
<g >
<title>EditDoc::RemoveText (1 samples, 5.00%)</title><rect x="187.0" y="165" width="59.0" height="15.0" fill="rgb(222,198,39)" rx="2" ry="2" />
<text  x="190.00" y="175.5" >EditDo..</text>
</g>
<g >
<title>ImpEditEngine::RemoveText (1 samples, 5.00%)</title><rect x="187.0" y="197" width="59.0" height="15.0" fill="rgb(216,113,33)" rx="2" ry="2" />
<text  x="190.00" y="207.5" >ImpEdi..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="482.0" y="85" width="59.0" height="15.0" fill="rgb(222,138,54)" rx="2" ry="2" />
<text  x="485.00" y="95.5" >_IO_fu..</text>
</g>
<g >
<title>dp_registry::backend::bundle::(anonymous namespace)::BackendImpl::PackageImpl::getDisplayName (1 samples, 5.00%)</title><rect x="482.0" y="261" width="59.0" height="15.0" fill="rgb(245,144,19)" rx="2" ry="2" />
<text  x="485.00" y="271.5" >dp_reg..</text>
</g>
<g >
<title>XPath::CXPathAPI::selectSingleNode (1 samples, 5.00%)</title><rect x="423.0" y="213" width="59.0" height="15.0" fill="rgb(231,93,23)" rx="2" ry="2" />
<text  x="426.00" y="223.5" >XPath:..</text>
</g>
<g >
<title>ScDocument::GetString (1 samples, 5.00%)</title><rect x="187.0" y="341" width="59.0" height="15.0" fill="rgb(214,4,15)" rx="2" ry="2" />
<text  x="190.00" y="351.5" >ScDocu..</text>
</g>
<g >
<title>lo_runLoop (1 samples, 5.00%)</title><rect x="482.0" y="437" width="59.0" height="15.0" fill="rgb(246,216,45)" rx="2" ry="2" />
<text  x="485.00" y="447.5" >lo_run..</text>
</g>
<g >
<title>SocketPoll::pollingThreadEntry (1 samples, 5.00%)</title><rect x="1131.0" y="453" width="59.0" height="15.0" fill="rgb(235,223,33)" rx="2" ry="2" />
<text  x="1134.00" y="463.5" >Socket..</text>
</g>
<g >
<title>desktop::Desktop::doShutdown (1 samples, 5.00%)</title><rect x="423.0" y="357" width="59.0" height="15.0" fill="rgb(219,228,34)" rx="2" ry="2" />
<text  x="426.00" y="367.5" >deskto..</text>
</g>
<g >
<title>xmlParseDocument (1 samples, 5.00%)</title><rect x="482.0" y="197" width="59.0" height="15.0" fill="rgb(249,35,7)" rx="2" ry="2" />
<text  x="485.00" y="207.5" >xmlPar..</text>
</g>
<g >
<title>xmlIO_read_func (1 samples, 5.00%)</title><rect x="482.0" y="149" width="59.0" height="15.0" fill="rgb(241,32,18)" rx="2" ry="2" />
<text  x="485.00" y="159.5" >xmlIO_..</text>
</g>
<g >
<title>ScEditUtil::GetString (1 samples, 5.00%)</title><rect x="187.0" y="261" width="59.0" height="15.0" fill="rgb(251,208,9)" rx="2" ry="2" />
<text  x="190.00" y="271.5" >ScEdit..</text>
</g>
<g >
<title>lokit_main (1 samples, 5.00%)</title><rect x="423.0" y="437" width="59.0" height="15.0" fill="rgb(234,124,29)" rx="2" ry="2" />
<text  x="426.00" y="447.5" >lokit_..</text>
</g>
<g >
<title>http::Session::syncRequest (1 samples, 5.00%)</title><rect x="1131.0" y="405" width="59.0" height="15.0" fill="rgb(231,186,4)" rx="2" ry="2" />
<text  x="1134.00" y="415.5" >http::..</text>
</g>
<g >
<title>remotefontconfi (11 samples, 55.00%)</title><rect x="541.0" y="485" width="649.0" height="15.0" fill="rgb(229,1,22)" rx="2" ry="2" />
<text  x="544.00" y="495.5" >remotefontconfi</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="1131.0" y="357" width="59.0" height="15.0" fill="rgb(215,181,53)" rx="2" ry="2" />
<text  x="1134.00" y="367.5" >_IO_fu..</text>
</g>
<g >
<title>[anon] (2 samples, 10.00%)</title><rect x="69.0" y="469" width="118.0" height="15.0" fill="rgb(236,6,25)" rx="2" ry="2" />
<text  x="72.00" y="479.5" >[anon]</text>
</g>
<g >
<title>doc_paintPartTile (4 samples, 20.00%)</title><rect x="187.0" y="437" width="236.0" height="15.0" fill="rgb(231,52,8)" rx="2" ry="2" />
<text  x="190.00" y="447.5" >doc_paintPartTile</text>
</g>
<g >
<title>ScOutputData::DrawEdit (1 samples, 5.00%)</title><rect x="187.0" y="357" width="59.0" height="15.0" fill="rgb(229,13,1)" rx="2" ry="2" />
<text  x="190.00" y="367.5" >ScOutp..</text>
</g>
<g >
<title>dp_misc::getDescriptionInfoset (1 samples, 5.00%)</title><rect x="482.0" y="245" width="59.0" height="15.0" fill="rgb(245,136,45)" rx="2" ry="2" />
<text  x="485.00" y="255.5" >dp_mis..</text>
</g>
<g >
<title>[unknown] (1 samples, 5.00%)</title><rect x="1131.0" y="469" width="59.0" height="15.0" fill="rgb(246,68,26)" rx="2" ry="2" />
<text  x="1134.00" y="479.5" >[unkno..</text>
</g>
<g >
<title>XPath::CXPathAPI::selectNodeList (1 samples, 5.00%)</title><rect x="423.0" y="197" width="59.0" height="15.0" fill="rgb(208,58,20)" rx="2" ry="2" />
<text  x="426.00" y="207.5" >XPath:..</text>
</g>
<g >
<title>ContentNode::~ContentNode (1 samples, 5.00%)</title><rect x="187.0" y="149" width="59.0" height="15.0" fill="rgb(248,220,54)" rx="2" ry="2" />
<text  x="190.00" y="159.5" >Conten..</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="1131.0" y="325" width="59.0" height="15.0" fill="rgb(230,194,41)" rx="2" ry="2" />
<text  x="1134.00" y="335.5" >syscall</text>
</g>
<g >
<title>xmlParserInputBufferGrow (1 samples, 5.00%)</title><rect x="482.0" y="165" width="59.0" height="15.0" fill="rgb(246,145,6)" rx="2" ry="2" />
<text  x="485.00" y="175.5" >xmlPar..</text>
</g>
<g >
<title>SocketPoll::poll (1 samples, 5.00%)</title><rect x="1131.0" y="389" width="59.0" height="15.0" fill="rgb(223,32,53)" rx="2" ry="2" />
<text  x="1134.00" y="399.5" >Socket..</text>
</g>
<g >
<title>xmlDoRead (1 samples, 5.00%)</title><rect x="482.0" y="213" width="59.0" height="15.0" fill="rgb(245,109,49)" rx="2" ry="2" />
<text  x="485.00" y="223.5" >xmlDoR..</text>
</g>
<g >
<title>ScDrawStringsVars::SetText (3 samples, 15.00%)</title><rect x="246.0" y="341" width="177.0" height="15.0" fill="rgb(244,170,1)" rx="2" ry="2" />
<text  x="249.00" y="351.5" >ScDrawStringsVars::SetT..</text>
</g>
<g >
<title>ImpEditEngine::SetText (1 samples, 5.00%)</title><rect x="187.0" y="229" width="59.0" height="15.0" fill="rgb(208,190,24)" rx="2" ry="2" />
<text  x="190.00" y="239.5" >ImpEdi..</text>
</g>
<g >
<title>coolwsd (1 samples, 5.00%)</title><rect x="10.0" y="485" width="59.0" height="15.0" fill="rgb(234,58,42)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >coolwsd</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="482.0" y="53" width="59.0" height="15.0" fill="rgb(235,71,30)" rx="2" ry="2" />
<text  x="485.00" y="63.5" >syscall</text>
</g>
<g >
<title>SalLayoutGlyphsCache::GetLayoutGlyphs (3 samples, 15.00%)</title><rect x="246.0" y="293" width="177.0" height="15.0" fill="rgb(212,126,43)" rx="2" ry="2" />
<text  x="249.00" y="303.5" >SalLayoutGlyphsCache::G..</text>
</g>
<g >
<title>dp_misc::DescriptionInfoset::getLocalizedDisplayName (1 samples, 5.00%)</title><rect x="423.0" y="261" width="59.0" height="15.0" fill="rgb(249,84,5)" rx="2" ry="2" />
<text  x="426.00" y="271.5" >dp_mis..</text>
</g>
<g >
<title>http::Session::syncRequest (1 samples, 5.00%)</title><rect x="10.0" y="421" width="59.0" height="15.0" fill="rgb(224,154,46)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >http::..</text>
</g>
<g >
<title>RemoteJSONPoll::pollingThread (1 samples, 5.00%)</title><rect x="1131.0" y="437" width="59.0" height="15.0" fill="rgb(227,24,21)" rx="2" ry="2" />
<text  x="1134.00" y="447.5" >Remote..</text>
</g>
<g >
<title>dp_registry::backend::bundle::(anonymous namespace)::BackendImpl::PackageImpl::getDisplayName (1 samples, 5.00%)</title><rect x="423.0" y="277" width="59.0" height="15.0" fill="rgb(232,67,36)" rx="2" ry="2" />
<text  x="426.00" y="287.5" >dp_reg..</text>
</g>
<g >
<title>syscall (2 samples, 10.00%)</title><rect x="69.0" y="437" width="118.0" height="15.0" fill="rgb(238,206,31)" rx="2" ry="2" />
<text  x="72.00" y="447.5" >syscall</text>
</g>
<g >
<title>SocketPoll::poll (1 samples, 5.00%)</title><rect x="10.0" y="389" width="59.0" height="15.0" fill="rgb(211,76,51)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >Socket..</text>
</g>
<g >
<title>[anon] (10 samples, 50.00%)</title><rect x="541.0" y="469" width="590.0" height="15.0" fill="rgb(208,217,3)" rx="2" ry="2" />
<text  x="544.00" y="479.5" >[anon]</text>
</g>
<g >
<title>desktop::Desktop::doShutdown (1 samples, 5.00%)</title><rect x="482.0" y="373" width="59.0" height="15.0" fill="rgb(250,220,6)" rx="2" ry="2" />
<text  x="485.00" y="383.5" >deskto..</text>
</g>
<g >
<title>desktop::Desktop::Main (1 samples, 5.00%)</title><rect x="482.0" y="389" width="59.0" height="15.0" fill="rgb(205,98,46)" rx="2" ry="2" />
<text  x="485.00" y="399.5" >deskto..</text>
</g>
<g >
<title>[unknown] (6 samples, 30.00%)</title><rect x="187.0" y="469" width="354.0" height="15.0" fill="rgb(216,121,0)" rx="2" ry="2" />
<text  x="190.00" y="479.5" >[unknown]</text>
</g>
<g >
<title>desktop::Desktop::Main (1 samples, 5.00%)</title><rect x="423.0" y="373" width="59.0" height="15.0" fill="rgb(252,89,32)" rx="2" ry="2" />
<text  x="426.00" y="383.5" >deskto..</text>
</g>
<g >
<title>comphelper::BackupFileHelper::tryPush_extensionInfo (1 samples, 5.00%)</title><rect x="482.0" y="341" width="59.0" height="15.0" fill="rgb(252,74,36)" rx="2" ry="2" />
<text  x="485.00" y="351.5" >comphe..</text>
</g>
<g >
<title>kitbroker (8 samples, 40.00%)</title><rect x="69.0" y="485" width="472.0" height="15.0" fill="rgb(226,121,46)" rx="2" ry="2" />
<text  x="72.00" y="495.5" >kitbroker</text>
</g>
<g >
<title>dp_manager::ExtensionManager::getAllExtensions (1 samples, 5.00%)</title><rect x="423.0" y="309" width="59.0" height="15.0" fill="rgb(207,142,5)" rx="2" ry="2" />
<text  x="426.00" y="319.5" >dp_man..</text>
</g>
<g >
<title>createLibreOfficeKit (1 samples, 5.00%)</title><rect x="423.0" y="453" width="59.0" height="15.0" fill="rgb(214,96,9)" rx="2" ry="2" />
<text  x="426.00" y="463.5" >create..</text>
</g>
<g >
<title>XPath::CXPathAPI::eval (1 samples, 5.00%)</title><rect x="423.0" y="181" width="59.0" height="15.0" fill="rgb(250,157,28)" rx="2" ry="2" />
<text  x="426.00" y="191.5" >XPath:..</text>
</g>
<g >
<title>ScColumn::GetString (1 samples, 5.00%)</title><rect x="187.0" y="309" width="59.0" height="15.0" fill="rgb(217,62,44)" rx="2" ry="2" />
<text  x="190.00" y="319.5" >ScColu..</text>
</g>
<g >
<title>comphelper::BackupFileHelper::tryPushExtensionInfo (1 samples, 5.00%)</title><rect x="482.0" y="357" width="59.0" height="15.0" fill="rgb(239,198,53)" rx="2" ry="2" />
<text  x="485.00" y="367.5" >comphe..</text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (1 samples, 5.00%)</title><rect x="423.0" y="293" width="59.0" height="15.0" fill="rgb(252,189,14)" rx="2" ry="2" />
<text  x="426.00" y="303.5" >std::_..</text>
</g>
<g >
<title>fileaccess::XInputStream_impl::readBytes (1 samples, 5.00%)</title><rect x="482.0" y="133" width="59.0" height="15.0" fill="rgb(235,15,27)" rx="2" ry="2" />
<text  x="485.00" y="143.5" >fileac..</text>
</g>
<g >
<title>EditCharAttribField::~EditCharAttribField (1 samples, 5.00%)</title><rect x="187.0" y="117" width="59.0" height="15.0" fill="rgb(238,178,41)" rx="2" ry="2" />
<text  x="190.00" y="127.5" >EditCh..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="1131.0" y="341" width="59.0" height="15.0" fill="rgb(229,93,29)" rx="2" ry="2" />
<text  x="1134.00" y="351.5" >handle..</text>
</g>
<g >
<title>ScOutputData::LayoutStrings (3 samples, 15.00%)</title><rect x="246.0" y="357" width="177.0" height="15.0" fill="rgb(252,162,15)" rx="2" ry="2" />
<text  x="249.00" y="367.5" >ScOutputData::LayoutStr..</text>
</g>
<g >
<title>CharAttribList::~CharAttribList (1 samples, 5.00%)</title><rect x="187.0" y="133" width="59.0" height="15.0" fill="rgb(233,58,51)" rx="2" ry="2" />
<text  x="190.00" y="143.5" >CharAt..</text>
</g>
<g >
<title>ScRefCellValue::getString (1 samples, 5.00%)</title><rect x="187.0" y="277" width="59.0" height="15.0" fill="rgb(254,162,46)" rx="2" ry="2" />
<text  x="190.00" y="287.5" >ScRefC..</text>
</g>
<g >
<title>StreamSocket::create&lt;StreamSocket&gt; (2 samples, 10.00%)</title><rect x="69.0" y="453" width="118.0" height="15.0" fill="rgb(244,32,24)" rx="2" ry="2" />
<text  x="72.00" y="463.5" >StreamSocket::..</text>
</g>
<g >
<title>ScDrawStringsVars::TextChanged (3 samples, 15.00%)</title><rect x="246.0" y="325" width="177.0" height="15.0" fill="rgb(224,137,50)" rx="2" ry="2" />
<text  x="249.00" y="335.5" >ScDrawStringsVars::Text..</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (1 samples, 5.00%)</title><rect x="482.0" y="309" width="59.0" height="15.0" fill="rgb(253,85,14)" rx="2" ry="2" />
<text  x="485.00" y="319.5" >std::_..</text>
</g>
<g >
<title>dp_manager::ExtensionManager::getAllExtensions (1 samples, 5.00%)</title><rect x="482.0" y="325" width="59.0" height="15.0" fill="rgb(213,45,29)" rx="2" ry="2" />
<text  x="485.00" y="335.5" >dp_man..</text>
</g>
<g >
<title>ImpEditEngine::SetText (1 samples, 5.00%)</title><rect x="187.0" y="213" width="59.0" height="15.0" fill="rgb(213,136,7)" rx="2" ry="2" />
<text  x="190.00" y="223.5" >ImpEdi..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="187.0" y="69" width="59.0" height="15.0" fill="rgb(217,81,44)" rx="2" ry="2" />
<text  x="190.00" y="79.5" >_IO_fu..</text>
</g>
<g >
<title>comphelper::BackupFileHelper::tryPush_extensionInfo (1 samples, 5.00%)</title><rect x="423.0" y="325" width="59.0" height="15.0" fill="rgb(209,67,36)" rx="2" ry="2" />
<text  x="426.00" y="335.5" >comphe..</text>
</g>
<g >
<title>comphelper::BackupFileHelper::tryPushExtensionInfo (1 samples, 5.00%)</title><rect x="423.0" y="341" width="59.0" height="15.0" fill="rgb(223,214,24)" rx="2" ry="2" />
<text  x="426.00" y="351.5" >comphe..</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (1 samples, 5.00%)</title><rect x="482.0" y="277" width="59.0" height="15.0" fill="rgb(254,75,51)" rx="2" ry="2" />
<text  x="485.00" y="287.5" >std::_..</text>
</g>
<g >
<title>ScTable::GetString (1 samples, 5.00%)</title><rect x="187.0" y="325" width="59.0" height="15.0" fill="rgb(242,82,23)" rx="2" ry="2" />
<text  x="190.00" y="335.5" >ScTabl..</text>
</g>
<g >
<title>handleUserProfileSignal (3 samples, 15.00%)</title><rect x="246.0" y="261" width="177.0" height="15.0" fill="rgb(222,189,33)" rx="2" ry="2" />
<text  x="249.00" y="271.5" >handleUserProfileSignal</text>
</g>
<g >
<title>ScDrawStringsVars::GetFmtTextWidth (3 samples, 15.00%)</title><rect x="246.0" y="309" width="177.0" height="15.0" fill="rgb(215,207,48)" rx="2" ry="2" />
<text  x="249.00" y="319.5" >ScDrawStringsVars::GetF..</text>
</g>
<g >
<title>http::Session::syncRequest (1 samples, 5.00%)</title><rect x="1131.0" y="421" width="59.0" height="15.0" fill="rgb(253,164,28)" rx="2" ry="2" />
<text  x="1134.00" y="431.5" >http::..</text>
</g>
<g >
<title>[unknown] (1 samples, 5.00%)</title><rect x="10.0" y="469" width="59.0" height="15.0" fill="rgb(222,73,13)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >[unkno..</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="187.0" y="37" width="59.0" height="15.0" fill="rgb(220,6,53)" rx="2" ry="2" />
<text  x="190.00" y="47.5" >syscall</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;*, std::vector&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::deployment::XPackage&gt; &gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompIdentifiers&gt; &gt; (1 samples, 5.00%)</title><rect x="482.0" y="293" width="59.0" height="15.0" fill="rgb(249,201,51)" rx="2" ry="2" />
<text  x="485.00" y="303.5" >std::_..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="482.0" y="69" width="59.0" height="15.0" fill="rgb(237,48,42)" rx="2" ry="2" />
<text  x="485.00" y="79.5" >handle..</text>
</g>
<g >
<title>ppoll (1 samples, 5.00%)</title><rect x="10.0" y="373" width="59.0" height="15.0" fill="rgb(241,206,47)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >ppoll</text>
</g>
<g >
<title>SfxItemPool::unregisterSfxPoolItem (1 samples, 5.00%)</title><rect x="187.0" y="85" width="59.0" height="15.0" fill="rgb(240,216,30)" rx="2" ry="2" />
<text  x="190.00" y="95.5" >SfxIte..</text>
</g>
<g >
<title>xmlParserGrow (1 samples, 5.00%)</title><rect x="482.0" y="181" width="59.0" height="15.0" fill="rgb(238,171,28)" rx="2" ry="2" />
<text  x="485.00" y="191.5" >xmlPar..</text>
</g>
<g >
<title>doc_paintTile (4 samples, 20.00%)</title><rect x="187.0" y="421" width="236.0" height="15.0" fill="rgb(212,176,36)" rx="2" ry="2" />
<text  x="190.00" y="431.5" >doc_paintTile</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="10.0" y="341" width="59.0" height="15.0" fill="rgb(211,103,26)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >handle..</text>
</g>
<g >
<title>EditEngine::SetText (1 samples, 5.00%)</title><rect x="187.0" y="245" width="59.0" height="15.0" fill="rgb(254,204,42)" rx="2" ry="2" />
<text  x="190.00" y="255.5" >EditEn..</text>
</g>
<g >
<title>COOLWSD::processFetchUpdate (1 samples, 5.00%)</title><rect x="10.0" y="437" width="59.0" height="15.0" fill="rgb(209,1,52)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >COOLWS..</text>
</g>
<g >
<title>ImplSVMain (1 samples, 5.00%)</title><rect x="423.0" y="389" width="59.0" height="15.0" fill="rgb(234,182,36)" rx="2" ry="2" />
<text  x="426.00" y="399.5" >ImplSV..</text>
</g>
<g >
<title>DOM::CDocumentBuilder::parse (1 samples, 5.00%)</title><rect x="482.0" y="229" width="59.0" height="15.0" fill="rgb(213,119,4)" rx="2" ry="2" />
<text  x="485.00" y="239.5" >DOM::C..</text>
</g>
</g>
</svg>
