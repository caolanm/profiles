<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >StagingPerf.eu Watchdog Profile (2024-06-29T08:36:05.867828)</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>ScRefCellValue::hasString (1 samples, 5.00%)</title><rect x="128.0" y="261" width="59.0" height="15.0" fill="rgb(244,69,54)" rx="2" ry="2" />
<text  x="131.00" y="271.5" >ScRefC..</text>
</g>
<g >
<title>SfxObjectShell::ExportTo (1 samples, 5.00%)</title><rect x="128.0" y="469" width="59.0" height="15.0" fill="rgb(252,186,23)" rx="2" ry="2" />
<text  x="131.00" y="479.5" >SfxObj..</text>
</g>
<g >
<title>_IO_funlockfile (12 samples, 60.00%)</title><rect x="482.0" y="389" width="708.0" height="15.0" fill="rgb(220,145,51)" rx="2" ry="2" />
<text  x="485.00" y="399.5" >_IO_funlockfile</text>
</g>
<g >
<title>sdr::contact::ViewContactOfSdrOle2Obj::createPrimitive2DSequenceWithParameters (2 samples, 10.00%)</title><rect x="10.0" y="293" width="118.0" height="15.0" fill="rgb(211,196,53)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >sdr::contact::..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="10.0" y="69" width="59.0" height="15.0" fill="rgb(222,109,40)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >_IO_fu..</text>
</g>
<g >
<title>ScFormulaCell::Interpret (1 samples, 5.00%)</title><rect x="128.0" y="229" width="59.0" height="15.0" fill="rgb(238,214,13)" rx="2" ry="2" />
<text  x="131.00" y="239.5" >ScForm..</text>
</g>
<g >
<title>ScPrintFuncCache::ScPrintFuncCache (2 samples, 10.00%)</title><rect x="10.0" y="469" width="118.0" height="15.0" fill="rgb(207,189,48)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >ScPrintFuncCac..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="69.0" y="69" width="59.0" height="15.0" fill="rgb(243,194,14)" rx="2" ry="2" />
<text  x="72.00" y="79.5" >_IO_fu..</text>
</g>
<g >
<title>OCommonEmbeddedObject::LoadDocumentFromStorage_Impl (2 samples, 10.00%)</title><rect x="10.0" y="213" width="118.0" height="15.0" fill="rgb(214,220,10)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >OCommonEmbedde..</text>
</g>
<g >
<title>framework::LoadEnv::startLoading (4 samples, 20.00%)</title><rect x="187.0" y="453" width="236.0" height="15.0" fill="rgb(224,211,1)" rx="2" ry="2" />
<text  x="190.00" y="463.5" >framework::LoadEnv::startLoading</text>
</g>
<g >
<title>framework::LoadEnv::loadComponentFromURL (1 samples, 5.00%)</title><rect x="423.0" y="453" width="59.0" height="15.0" fill="rgb(205,64,49)" rx="2" ry="2" />
<text  x="426.00" y="463.5" >framew..</text>
</g>
<g >
<title>chart::XMLFilter::impl_Import (2 samples, 10.00%)</title><rect x="10.0" y="165" width="118.0" height="15.0" fill="rgb(219,213,41)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >chart::XMLFilt..</text>
</g>
<g >
<title>ScModelObj::getRendererCount (1 samples, 5.00%)</title><rect x="128.0" y="405" width="59.0" height="15.0" fill="rgb(240,76,46)" rx="2" ry="2" />
<text  x="131.00" y="415.5" >ScMode..</text>
</g>
<g >
<title>ScPrintFunc::CountPages (1 samples, 5.00%)</title><rect x="128.0" y="325" width="59.0" height="15.0" fill="rgb(222,169,15)" rx="2" ry="2" />
<text  x="131.00" y="335.5" >ScPrin..</text>
</g>
<g >
<title>sax_fastparser::FastSaxParserImpl::parseStream (4 samples, 20.00%)</title><rect x="187.0" y="245" width="236.0" height="15.0" fill="rgb(205,134,44)" rx="2" ry="2" />
<text  x="190.00" y="255.5" >sax_fastparser::FastSaxParserIm..</text>
</g>
<g >
<title>ScDocumentImport::initColumn (4 samples, 20.00%)</title><rect x="187.0" y="197" width="236.0" height="15.0" fill="rgb(230,217,27)" rx="2" ry="2" />
<text  x="190.00" y="207.5" >ScDocumentImport::initColumn</text>
</g>
<g >
<title>FmXUndoEnvironment::AddForms (1 samples, 5.00%)</title><rect x="423.0" y="181" width="59.0" height="15.0" fill="rgb(215,90,51)" rx="2" ry="2" />
<text  x="426.00" y="191.5" >FmXUnd..</text>
</g>
<g >
<title>SvXMLImport::startFastElement (2 samples, 10.00%)</title><rect x="10.0" y="101" width="118.0" height="15.0" fill="rgb(254,110,22)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >SvXMLImport::s..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="423.0" y="85" width="59.0" height="15.0" fill="rgb(208,83,31)" rx="2" ry="2" />
<text  x="426.00" y="95.5" >handle..</text>
</g>
<g >
<title>o3tl::cow_wrapper&lt;std::vector&lt;com::sun::star::uno::Reference&lt;com::sun::star::container::XContainerListener&gt;, std::allocator&lt;com::sun::star::uno::Reference&lt;com::sun::star::container::XContainerListener&gt; &gt; &gt;, o3tl::ThreadSafeRefCountingPolicy&gt;::make_unique (1 samples, 5.00%)</title><rect x="423.0" y="117" width="59.0" height="15.0" fill="rgb(238,10,47)" rx="2" ry="2" />
<text  x="426.00" y="127.5" >o3tl::..</text>
</g>
<g >
<title>ppoll (12 samples, 60.00%)</title><rect x="482.0" y="405" width="708.0" height="15.0" fill="rgb(217,75,23)" rx="2" ry="2" />
<text  x="485.00" y="415.5" >ppoll</text>
</g>
<g >
<title>lo_documentLoadWithOptions (1 samples, 5.00%)</title><rect x="423.0" y="485" width="59.0" height="15.0" fill="rgb(223,40,31)" rx="2" ry="2" />
<text  x="426.00" y="495.5" >lo_doc..</text>
</g>
<g >
<title>ScFormulaCell::InterpretFormulaGroup (1 samples, 5.00%)</title><rect x="128.0" y="213" width="59.0" height="15.0" fill="rgb(240,80,52)" rx="2" ry="2" />
<text  x="131.00" y="223.5" >ScForm..</text>
</g>
<g >
<title>ScPrintFuncCache::ScPrintFuncCache (1 samples, 5.00%)</title><rect x="128.0" y="389" width="59.0" height="15.0" fill="rgb(244,187,25)" rx="2" ry="2" />
<text  x="131.00" y="399.5" >ScPrin..</text>
</g>
<g >
<title>sax_fastparser::FastSaxParserImpl::parseStream (2 samples, 10.00%)</title><rect x="10.0" y="117" width="118.0" height="15.0" fill="rgb(228,173,32)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >sax_fastparser..</text>
</g>
<g >
<title>RemoteJSONPoll::pollingThread (12 samples, 60.00%)</title><rect x="482.0" y="469" width="708.0" height="15.0" fill="rgb(252,80,11)" rx="2" ry="2" />
<text  x="485.00" y="479.5" >RemoteJSONPoll::pollingThread</text>
</g>
<g >
<title>ScBroadcastAreaSlotMachine::StartListeningArea (4 samples, 20.00%)</title><rect x="187.0" y="149" width="236.0" height="15.0" fill="rgb(249,172,27)" rx="2" ry="2" />
<text  x="190.00" y="159.5" >ScBroadcastAreaSlotMachine::Sta..</text>
</g>
<g >
<title>FmXUndoEnvironment::switchListening (1 samples, 5.00%)</title><rect x="423.0" y="149" width="59.0" height="15.0" fill="rgb(231,63,25)" rx="2" ry="2" />
<text  x="426.00" y="159.5" >FmXUnd..</text>
</g>
<g >
<title>framework::LoadEnv::impl_loadContent (1 samples, 5.00%)</title><rect x="423.0" y="405" width="59.0" height="15.0" fill="rgb(245,147,7)" rx="2" ry="2" />
<text  x="426.00" y="415.5" >framew..</text>
</g>
<g >
<title>ScFormulaCell::InterpretFormulaGroupThreading (1 samples, 5.00%)</title><rect x="128.0" y="197" width="59.0" height="15.0" fill="rgb(238,109,15)" rx="2" ry="2" />
<text  x="131.00" y="207.5" >ScForm..</text>
</g>
<g >
<title>_IO_funlockfile (4 samples, 20.00%)</title><rect x="187.0" y="101" width="236.0" height="15.0" fill="rgb(243,200,12)" rx="2" ry="2" />
<text  x="190.00" y="111.5" >_IO_funlockfile</text>
</g>
<g >
<title>remotefontconfi (12 samples, 60.00%)</title><rect x="482.0" y="517" width="708.0" height="15.0" fill="rgb(244,10,8)" rx="2" ry="2" />
<text  x="485.00" y="527.5" >remotefontconfi</text>
</g>
<g >
<title>ScDocument::StartListeningArea (4 samples, 20.00%)</title><rect x="187.0" y="165" width="236.0" height="15.0" fill="rgb(236,104,43)" rx="2" ry="2" />
<text  x="190.00" y="175.5" >ScDocument::StartListeningArea</text>
</g>
<g >
<title>framework::LoadEnv::start (1 samples, 5.00%)</title><rect x="423.0" y="421" width="59.0" height="15.0" fill="rgb(248,116,47)" rx="2" ry="2" />
<text  x="426.00" y="431.5" >framew..</text>
</g>
<g >
<title>all (20 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(236,146,30)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>FmXFormView::addWindow (1 samples, 5.00%)</title><rect x="423.0" y="229" width="59.0" height="15.0" fill="rgb(207,92,30)" rx="2" ry="2" />
<text  x="426.00" y="239.5" >FmXFor..</text>
</g>
<g >
<title>ScPrintFunc::AdjustPrintArea (2 samples, 10.00%)</title><rect x="10.0" y="389" width="118.0" height="15.0" fill="rgb(222,137,46)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >ScPrintFunc::A..</text>
</g>
<g >
<title>ScPrintFunc::InitParam (1 samples, 5.00%)</title><rect x="128.0" y="341" width="59.0" height="15.0" fill="rgb(252,199,51)" rx="2" ry="2" />
<text  x="131.00" y="351.5" >ScPrin..</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="128.0" y="101" width="59.0" height="15.0" fill="rgb(219,161,35)" rx="2" ry="2" />
<text  x="131.00" y="111.5" >syscall</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="423.0" y="69" width="59.0" height="15.0" fill="rgb(212,209,53)" rx="2" ry="2" />
<text  x="426.00" y="79.5" >syscall</text>
</g>
<g >
<title>oox::xls::WorkbookFragment::finalizeImport (4 samples, 20.00%)</title><rect x="187.0" y="229" width="236.0" height="15.0" fill="rgb(246,38,8)" rx="2" ry="2" />
<text  x="190.00" y="239.5" >oox::xls::WorkbookFragment::fin..</text>
</g>
<g >
<title>SdrPageWindow::GetControlContainer (1 samples, 5.00%)</title><rect x="423.0" y="245" width="59.0" height="15.0" fill="rgb(215,77,42)" rx="2" ry="2" />
<text  x="426.00" y="255.5" >SdrPag..</text>
</g>
<g >
<title>ScDocumentImport::finalize (4 samples, 20.00%)</title><rect x="187.0" y="213" width="236.0" height="15.0" fill="rgb(251,12,39)" rx="2" ry="2" />
<text  x="190.00" y="223.5" >ScDocumentImport::finalize</text>
</g>
<g >
<title>comphelper::ThreadPool::waitUntilDone (1 samples, 5.00%)</title><rect x="128.0" y="181" width="59.0" height="15.0" fill="rgb(242,211,13)" rx="2" ry="2" />
<text  x="131.00" y="191.5" >comphe..</text>
</g>
<g >
<title>ScPrintFunc::ScPrintFunc (2 samples, 10.00%)</title><rect x="10.0" y="453" width="118.0" height="15.0" fill="rgb(205,176,36)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >ScPrintFunc::S..</text>
</g>
<g >
<title>framework::Desktop::loadComponentFromURL (4 samples, 20.00%)</title><rect x="187.0" y="485" width="236.0" height="15.0" fill="rgb(237,116,37)" rx="2" ry="2" />
<text  x="190.00" y="495.5" >framework::Desktop::loadCompone..</text>
</g>
<g >
<title>comphelper::ThreadTaskTag::waitUntilDone (1 samples, 5.00%)</title><rect x="128.0" y="165" width="59.0" height="15.0" fill="rgb(232,194,23)" rx="2" ry="2" />
<text  x="131.00" y="175.5" >comphe..</text>
</g>
<g >
<title>comphelper::OInterfaceContainerHelper3&lt;com::sun::star::container::XContainerListener&gt;::addInterface (1 samples, 5.00%)</title><rect x="423.0" y="133" width="59.0" height="15.0" fill="rgb(238,157,0)" rx="2" ry="2" />
<text  x="426.00" y="143.5" >comphe..</text>
</g>
<g >
<title>ScDrawView::Construct (1 samples, 5.00%)</title><rect x="423.0" y="293" width="59.0" height="15.0" fill="rgb(234,119,20)" rx="2" ry="2" />
<text  x="426.00" y="303.5" >ScDraw..</text>
</g>
<g >
<title>GraphicExportFilter::filterRenderDocument (1 samples, 5.00%)</title><rect x="128.0" y="453" width="59.0" height="15.0" fill="rgb(248,105,16)" rx="2" ry="2" />
<text  x="131.00" y="463.5" >Graphi..</text>
</g>
<g >
<title>SocketPoll::pollingThreadEntry (12 samples, 60.00%)</title><rect x="482.0" y="485" width="708.0" height="15.0" fill="rgb(230,30,30)" rx="2" ry="2" />
<text  x="485.00" y="495.5" >SocketPoll::pollingThreadEntry</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="10.0" y="53" width="59.0" height="15.0" fill="rgb(233,20,6)" rx="2" ry="2" />
<text  x="13.00" y="63.5" >handle..</text>
</g>
<g >
<title>sdr::contact::ViewContact::getViewIndependentPrimitive2DContainer (2 samples, 10.00%)</title><rect x="10.0" y="309" width="118.0" height="15.0" fill="rgb(250,80,43)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >sdr::contact::..</text>
</g>
<g >
<title>oox::core::FastParser::parseStream (4 samples, 20.00%)</title><rect x="187.0" y="277" width="236.0" height="15.0" fill="rgb(248,1,1)" rx="2" ry="2" />
<text  x="190.00" y="287.5" >oox::core::FastParser::parseStr..</text>
</g>
<g >
<title>ScTable::ExtendPrintArea (1 samples, 5.00%)</title><rect x="128.0" y="293" width="59.0" height="15.0" fill="rgb(215,17,35)" rx="2" ry="2" />
<text  x="131.00" y="303.5" >ScTabl..</text>
</g>
<g >
<title>SfxBaseModel::load (4 samples, 20.00%)</title><rect x="187.0" y="405" width="236.0" height="15.0" fill="rgb(250,183,50)" rx="2" ry="2" />
<text  x="190.00" y="415.5" >SfxBaseModel::load</text>
</g>
<g >
<title>OCommonEmbeddedObject::SwitchStateTo_Impl (2 samples, 10.00%)</title><rect x="10.0" y="229" width="118.0" height="15.0" fill="rgb(246,23,21)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >OCommonEmbedde..</text>
</g>
<g >
<title>ScPrintFunc::AdjustPrintArea (1 samples, 5.00%)</title><rect x="128.0" y="309" width="59.0" height="15.0" fill="rgb(218,179,52)" rx="2" ry="2" />
<text  x="131.00" y="319.5" >ScPrin..</text>
</g>
<g >
<title>std::_Rb_tree&lt;short, std::pair&lt;short const, ScBroadcastAreaSlotMachine::TableSlots&gt;, std::_Select1st&lt;std::pair&lt;short const, ScBroadcastAreaSlotMachine::TableSlots&gt; &gt;, std::less&lt;short&gt;, std::allocator&lt;std::pair&lt;short const, ScBroadcastAreaSlotMachine::TableSlots&gt; &gt; &gt;::_M_emplace_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;short&amp;&gt;, std::tuple&lt;unsigned long&amp;&gt; &gt; (4 samples, 20.00%)</title><rect x="187.0" y="133" width="236.0" height="15.0" fill="rgb(205,85,31)" rx="2" ry="2" />
<text  x="190.00" y="143.5" >std::_Rb_tree&lt;short, std::pair&lt;..</text>
</g>
<g >
<title>SfxObjectShell::ImportFrom (4 samples, 20.00%)</title><rect x="187.0" y="373" width="236.0" height="15.0" fill="rgb(216,125,51)" rx="2" ry="2" />
<text  x="190.00" y="383.5" >SfxObjectShell::ImportFrom</text>
</g>
<g >
<title>syscall (12 samples, 60.00%)</title><rect x="482.0" y="357" width="708.0" height="15.0" fill="rgb(253,92,43)" rx="2" ry="2" />
<text  x="485.00" y="367.5" >syscall</text>
</g>
<g >
<title>FormViewPageWindowAdapter::FormViewPageWindowAdapter (1 samples, 5.00%)</title><rect x="423.0" y="213" width="59.0" height="15.0" fill="rgb(241,32,11)" rx="2" ry="2" />
<text  x="426.00" y="223.5" >FormVi..</text>
</g>
<g >
<title>framework::LoadEnv::start (4 samples, 20.00%)</title><rect x="187.0" y="437" width="236.0" height="15.0" fill="rgb(252,126,27)" rx="2" ry="2" />
<text  x="190.00" y="447.5" >framework::LoadEnv::start</text>
</g>
<g >
<title>pthread_cond_timedwait (1 samples, 5.00%)</title><rect x="128.0" y="149" width="59.0" height="15.0" fill="rgb(230,195,21)" rx="2" ry="2" />
<text  x="131.00" y="159.5" >pthrea..</text>
</g>
<g >
<title>__memset_avx2_erms (4 samples, 20.00%)</title><rect x="187.0" y="117" width="236.0" height="15.0" fill="rgb(235,48,10)" rx="2" ry="2" />
<text  x="190.00" y="127.5" >__memset_avx2_erms</text>
</g>
<g >
<title>SdrOle2Obj::getXModel (2 samples, 10.00%)</title><rect x="10.0" y="277" width="118.0" height="15.0" fill="rgb(209,147,54)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >SdrOle2Obj::ge..</text>
</g>
<g >
<title>chart::XMLFilter::impl_ImportStream (2 samples, 10.00%)</title><rect x="10.0" y="149" width="118.0" height="15.0" fill="rgb(219,106,23)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >chart::XMLFilt..</text>
</g>
<g >
<title>kitbroker (8 samples, 40.00%)</title><rect x="10.0" y="517" width="472.0" height="15.0" fill="rgb(208,16,5)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >kitbroker</text>
</g>
<g >
<title>ScTabViewShell::CreateInstance (1 samples, 5.00%)</title><rect x="423.0" y="373" width="59.0" height="15.0" fill="rgb(240,180,7)" rx="2" ry="2" />
<text  x="426.00" y="383.5" >ScTabV..</text>
</g>
<g >
<title>SvXMLImport::parseStream (2 samples, 10.00%)</title><rect x="10.0" y="133" width="118.0" height="15.0" fill="rgb(245,38,35)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >SvXMLImport::p..</text>
</g>
<g >
<title>SdrObject::GetCurrentBoundRect (2 samples, 10.00%)</title><rect x="10.0" y="341" width="118.0" height="15.0" fill="rgb(238,92,53)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >SdrObject::Get..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="423.0" y="101" width="59.0" height="15.0" fill="rgb(206,6,53)" rx="2" ry="2" />
<text  x="426.00" y="111.5" >_IO_fu..</text>
</g>
<g >
<title>ScPrintFunc::InitParam (2 samples, 10.00%)</title><rect x="10.0" y="421" width="118.0" height="15.0" fill="rgb(242,192,18)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >ScPrintFunc::I..</text>
</g>
<g >
<title>framework::Desktop::loadComponentFromURL (1 samples, 5.00%)</title><rect x="423.0" y="469" width="59.0" height="15.0" fill="rgb(222,134,12)" rx="2" ry="2" />
<text  x="426.00" y="479.5" >framew..</text>
</g>
<g >
<title>FmXFormView::addWindow (1 samples, 5.00%)</title><rect x="423.0" y="261" width="59.0" height="15.0" fill="rgb(223,43,0)" rx="2" ry="2" />
<text  x="426.00" y="271.5" >FmXFor..</text>
</g>
<g >
<title>ScPrintFunc::ScPrintFunc (1 samples, 5.00%)</title><rect x="128.0" y="373" width="59.0" height="15.0" fill="rgb(240,56,34)" rx="2" ry="2" />
<text  x="131.00" y="383.5" >ScPrin..</text>
</g>
<g >
<title>oox::core::FilterBase::filter (4 samples, 20.00%)</title><rect x="187.0" y="341" width="236.0" height="15.0" fill="rgb(239,155,15)" rx="2" ry="2" />
<text  x="190.00" y="351.5" >oox::core::FilterBase::filter</text>
</g>
<g >
<title>ScTable::MaybeAddExtraColumn (1 samples, 5.00%)</title><rect x="128.0" y="277" width="59.0" height="15.0" fill="rgb(219,20,44)" rx="2" ry="2" />
<text  x="131.00" y="287.5" >ScTabl..</text>
</g>
<g >
<title>FmXUndoEnvironment::AddElement (1 samples, 5.00%)</title><rect x="423.0" y="165" width="59.0" height="15.0" fill="rgb(241,10,45)" rx="2" ry="2" />
<text  x="426.00" y="175.5" >FmXUnd..</text>
</g>
<g >
<title>chart::ChartModel::impl_load (2 samples, 10.00%)</title><rect x="10.0" y="197" width="118.0" height="15.0" fill="rgb(250,30,17)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >chart::ChartMo..</text>
</g>
<g >
<title>SfxObjectShell::SaveTo_Impl (1 samples, 5.00%)</title><rect x="128.0" y="485" width="59.0" height="15.0" fill="rgb(245,125,5)" rx="2" ry="2" />
<text  x="131.00" y="495.5" >SfxObj..</text>
</g>
<g >
<title>SfxBaseModel::createViewController (1 samples, 5.00%)</title><rect x="423.0" y="389" width="59.0" height="15.0" fill="rgb(239,129,8)" rx="2" ry="2" />
<text  x="426.00" y="399.5" >SfxBas..</text>
</g>
<g >
<title>chart::XMLFilter::filter (2 samples, 10.00%)</title><rect x="10.0" y="181" width="118.0" height="15.0" fill="rgb(221,48,46)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >chart::XMLFilt..</text>
</g>
<g >
<title>ScPrintFunc::Construct (2 samples, 10.00%)</title><rect x="10.0" y="437" width="118.0" height="15.0" fill="rgb(210,92,41)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >ScPrintFunc::C..</text>
</g>
<g >
<title>SfxObjectShell::DoLoad (4 samples, 20.00%)</title><rect x="187.0" y="389" width="236.0" height="15.0" fill="rgb(212,62,38)" rx="2" ry="2" />
<text  x="190.00" y="399.5" >SfxObjectShell::DoLoad</text>
</g>
<g >
<title>DocumentToGraphicRenderer::getDocumentSizeIn100mm (1 samples, 5.00%)</title><rect x="128.0" y="421" width="59.0" height="15.0" fill="rgb(230,27,30)" rx="2" ry="2" />
<text  x="131.00" y="431.5" >Docume..</text>
</g>
<g >
<title>ScTabViewShell::ScTabViewShell (1 samples, 5.00%)</title><rect x="423.0" y="357" width="59.0" height="15.0" fill="rgb(228,141,39)" rx="2" ry="2" />
<text  x="426.00" y="367.5" >ScTabV..</text>
</g>
<g >
<title>DocumentToGraphicRenderer::getDocumentSizeInPixels (1 samples, 5.00%)</title><rect x="128.0" y="437" width="59.0" height="15.0" fill="rgb(211,170,30)" rx="2" ry="2" />
<text  x="131.00" y="447.5" >Docume..</text>
</g>
<g >
<title>http::Session::syncRequest (12 samples, 60.00%)</title><rect x="482.0" y="437" width="708.0" height="15.0" fill="rgb(252,99,22)" rx="2" ry="2" />
<text  x="485.00" y="447.5" >http::Session::syncRequest</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="10.0" y="37" width="59.0" height="15.0" fill="rgb(251,92,32)" rx="2" ry="2" />
<text  x="13.00" y="47.5" >syscall</text>
</g>
<g >
<title>oox::core::XmlFilterBase::importFragment (4 samples, 20.00%)</title><rect x="187.0" y="309" width="236.0" height="15.0" fill="rgb(245,66,0)" rx="2" ry="2" />
<text  x="190.00" y="319.5" >oox::core::XmlFilterBase::impor..</text>
</g>
<g >
<title>ScModelObj::getRendererCount (2 samples, 10.00%)</title><rect x="10.0" y="485" width="118.0" height="15.0" fill="rgb(232,59,22)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >ScModelObj::ge..</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="69.0" y="37" width="59.0" height="15.0" fill="rgb(253,141,51)" rx="2" ry="2" />
<text  x="72.00" y="47.5" >syscall</text>
</g>
<g >
<title>[unknown] (8 samples, 40.00%)</title><rect x="10.0" y="501" width="472.0" height="15.0" fill="rgb(252,162,15)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >[unknown]</text>
</g>
<g >
<title>FmFormView::ShowSdrPage (1 samples, 5.00%)</title><rect x="423.0" y="277" width="59.0" height="15.0" fill="rgb(244,33,50)" rx="2" ry="2" />
<text  x="426.00" y="287.5" >FmForm..</text>
</g>
<g >
<title>[unknown] (12 samples, 60.00%)</title><rect x="482.0" y="501" width="708.0" height="15.0" fill="rgb(213,100,4)" rx="2" ry="2" />
<text  x="485.00" y="511.5" >[unknown]</text>
</g>
<g >
<title>ScDocument::GetPrintArea (2 samples, 10.00%)</title><rect x="10.0" y="373" width="118.0" height="15.0" fill="rgb(238,223,12)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >ScDocument::Ge..</text>
</g>
<g >
<title>oox::xls::ExcelFilter::filter (4 samples, 20.00%)</title><rect x="187.0" y="357" width="236.0" height="15.0" fill="rgb(227,147,36)" rx="2" ry="2" />
<text  x="190.00" y="367.5" >oox::xls::ExcelFilter::filter</text>
</g>
<g >
<title>oox::core::FastParser::parseStream (4 samples, 20.00%)</title><rect x="187.0" y="261" width="236.0" height="15.0" fill="rgb(223,196,6)" rx="2" ry="2" />
<text  x="190.00" y="271.5" >oox::core::FastParser::parseStr..</text>
</g>
<g >
<title>ScPrintFunc::CountPages (2 samples, 10.00%)</title><rect x="10.0" y="405" width="118.0" height="15.0" fill="rgb(214,193,49)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >ScPrintFunc::C..</text>
</g>
<g >
<title>handleUserProfileSignal (12 samples, 60.00%)</title><rect x="482.0" y="373" width="708.0" height="15.0" fill="rgb(244,203,12)" rx="2" ry="2" />
<text  x="485.00" y="383.5" >handleUserProfileSignal</text>
</g>
<g >
<title>framework::LoadEnv::loadComponentFromURL (4 samples, 20.00%)</title><rect x="187.0" y="469" width="236.0" height="15.0" fill="rgb(217,146,5)" rx="2" ry="2" />
<text  x="190.00" y="479.5" >framework::LoadEnv::loadCompone..</text>
</g>
<g >
<title>ScTabView::MakeDrawView (1 samples, 5.00%)</title><rect x="423.0" y="325" width="59.0" height="15.0" fill="rgb(216,185,42)" rx="2" ry="2" />
<text  x="426.00" y="335.5" >ScTabV..</text>
</g>
<g >
<title>oox::core::XmlFilterBase::importFragment (4 samples, 20.00%)</title><rect x="187.0" y="293" width="236.0" height="15.0" fill="rgb(238,210,38)" rx="2" ry="2" />
<text  x="190.00" y="303.5" >oox::core::XmlFilterBase::impor..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="128.0" y="117" width="59.0" height="15.0" fill="rgb(229,117,41)" rx="2" ry="2" />
<text  x="131.00" y="127.5" >handle..</text>
</g>
<g >
<title>OCommonEmbeddedObject::changeState (2 samples, 10.00%)</title><rect x="10.0" y="245" width="118.0" height="15.0" fill="rgb(254,45,39)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >OCommonEmbedde..</text>
</g>
<g >
<title>handleUserProfileSignal (4 samples, 20.00%)</title><rect x="187.0" y="85" width="236.0" height="15.0" fill="rgb(243,103,3)" rx="2" ry="2" />
<text  x="190.00" y="95.5" >handleUserProfileSignal</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="128.0" y="133" width="59.0" height="15.0" fill="rgb(252,223,53)" rx="2" ry="2" />
<text  x="131.00" y="143.5" >_IO_fu..</text>
</g>
<g >
<title>framework::LoadEnv::startLoading (1 samples, 5.00%)</title><rect x="423.0" y="437" width="59.0" height="15.0" fill="rgb(249,20,6)" rx="2" ry="2" />
<text  x="426.00" y="447.5" >framew..</text>
</g>
<g >
<title>svt::EmbeddedObjectRef::TryRunningState (2 samples, 10.00%)</title><rect x="10.0" y="261" width="118.0" height="15.0" fill="rgb(217,5,37)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >svt::EmbeddedO..</text>
</g>
<g >
<title>ScDrawView::ScDrawView (1 samples, 5.00%)</title><rect x="423.0" y="309" width="59.0" height="15.0" fill="rgb(214,74,7)" rx="2" ry="2" />
<text  x="426.00" y="319.5" >ScDraw..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="69.0" y="53" width="59.0" height="15.0" fill="rgb(224,212,46)" rx="2" ry="2" />
<text  x="72.00" y="63.5" >handle..</text>
</g>
<g >
<title>ScDrawLayer::GetPrintArea (2 samples, 10.00%)</title><rect x="10.0" y="357" width="118.0" height="15.0" fill="rgb(247,48,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >ScDrawLayer::G..</text>
</g>
<g >
<title>SdrObject::RecalcBoundRect (2 samples, 10.00%)</title><rect x="10.0" y="325" width="118.0" height="15.0" fill="rgb(207,179,31)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >SdrObject::Rec..</text>
</g>
<g >
<title>FmFormPageImpl::getForms (1 samples, 5.00%)</title><rect x="423.0" y="197" width="59.0" height="15.0" fill="rgb(208,207,23)" rx="2" ry="2" />
<text  x="426.00" y="207.5" >FmForm..</text>
</g>
<g >
<title>sal_detail_log_report (1 samples, 5.00%)</title><rect x="69.0" y="85" width="59.0" height="15.0" fill="rgb(252,164,25)" rx="2" ry="2" />
<text  x="72.00" y="95.5" >sal_de..</text>
</g>
<g >
<title>ScTabViewShell::Construct (1 samples, 5.00%)</title><rect x="423.0" y="341" width="59.0" height="15.0" fill="rgb(235,202,28)" rx="2" ry="2" />
<text  x="426.00" y="351.5" >ScTabV..</text>
</g>
<g >
<title>SocketPoll::poll (12 samples, 60.00%)</title><rect x="482.0" y="421" width="708.0" height="15.0" fill="rgb(233,54,4)" rx="2" ry="2" />
<text  x="485.00" y="431.5" >SocketPoll::poll</text>
</g>
<g >
<title>oox::xls::ExcelFilter::importDocument (4 samples, 20.00%)</title><rect x="187.0" y="325" width="236.0" height="15.0" fill="rgb(221,163,48)" rx="2" ry="2" />
<text  x="190.00" y="335.5" >oox::xls::ExcelFilter::importDo..</text>
</g>
<g >
<title>SvXMLImport::processNSAttributes (1 samples, 5.00%)</title><rect x="10.0" y="85" width="59.0" height="15.0" fill="rgb(231,145,7)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >SvXMLI..</text>
</g>
<g >
<title>framework::LoadEnv::impl_loadContent (4 samples, 20.00%)</title><rect x="187.0" y="421" width="236.0" height="15.0" fill="rgb(216,152,14)" rx="2" ry="2" />
<text  x="190.00" y="431.5" >framework::LoadEnv::impl_loadCo..</text>
</g>
<g >
<title>ScFormulaCell::StartListeningTo (4 samples, 20.00%)</title><rect x="187.0" y="181" width="236.0" height="15.0" fill="rgb(252,84,31)" rx="2" ry="2" />
<text  x="190.00" y="191.5" >ScFormulaCell::StartListeningTo</text>
</g>
<g >
<title>http::Session::syncRequest (12 samples, 60.00%)</title><rect x="482.0" y="453" width="708.0" height="15.0" fill="rgb(217,142,52)" rx="2" ry="2" />
<text  x="485.00" y="463.5" >http::Session::syncRequest</text>
</g>
<g >
<title>ScPrintFunc::Construct (1 samples, 5.00%)</title><rect x="128.0" y="357" width="59.0" height="15.0" fill="rgb(253,41,4)" rx="2" ry="2" />
<text  x="131.00" y="367.5" >ScPrin..</text>
</g>
<g >
<title>ScFormulaCell::IsValue (1 samples, 5.00%)</title><rect x="128.0" y="245" width="59.0" height="15.0" fill="rgb(223,117,47)" rx="2" ry="2" />
<text  x="131.00" y="255.5" >ScForm..</text>
</g>
<g >
<title>syscall (4 samples, 20.00%)</title><rect x="187.0" y="69" width="236.0" height="15.0" fill="rgb(206,105,31)" rx="2" ry="2" />
<text  x="190.00" y="79.5" >syscall</text>
</g>
</g>
</svg>
