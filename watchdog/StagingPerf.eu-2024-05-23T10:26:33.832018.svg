<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="502.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >StagingPerf.eu Watchdog Profile (2024-05-23T10:26:33.832018)</text>
<text id="details" x="10.00" y="485" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="485" > </text>
<g id="frames">
<g >
<title>handleUserProfileSignal (3 samples, 20.00%)</title><rect x="560.7" y="69" width="236.0" height="15.0" fill="rgb(214,44,22)" rx="2" ry="2" />
<text  x="563.67" y="79.5" >handleUserProfileSignal</text>
</g>
<g >
<title>malloc (1 samples, 6.67%)</title><rect x="482.0" y="213" width="78.7" height="15.0" fill="rgb(237,95,17)" rx="2" ry="2" />
<text  x="485.00" y="223.5" >malloc</text>
</g>
<g >
<title>SwTextPaintInfo::DrawText_ (3 samples, 20.00%)</title><rect x="560.7" y="373" width="236.0" height="15.0" fill="rgb(236,43,5)" rx="2" ry="2" />
<text  x="563.67" y="383.5" >SwTextPaintInfo::DrawText_</text>
</g>
<g >
<title>SwFrame::PaintSwFrameBackground (1 samples, 6.67%)</title><rect x="88.7" y="229" width="78.6" height="15.0" fill="rgb(231,78,27)" rx="2" ry="2" />
<text  x="91.67" y="239.5" >SwFrame::..</text>
</g>
<g >
<title>DeltaGenerator::createDelta (1 samples, 6.67%)</title><rect x="1032.7" y="373" width="78.6" height="15.0" fill="rgb(237,114,51)" rx="2" ry="2" />
<text  x="1035.67" y="383.5" >DeltaGene..</text>
</g>
<g >
<title>typelib_static_type_getByTypeClass (3 samples, 20.00%)</title><rect x="796.7" y="213" width="236.0" height="15.0" fill="rgb(231,138,9)" rx="2" ry="2" />
<text  x="799.67" y="223.5" >typelib_static_type_getByTypeCl..</text>
</g>
<g >
<title>SwCursorShell::Paint (1 samples, 6.67%)</title><rect x="88.7" y="325" width="78.6" height="15.0" fill="rgb(245,81,28)" rx="2" ry="2" />
<text  x="91.67" y="335.5" >SwCursorS..</text>
</g>
<g >
<title>syscall (1 samples, 6.67%)</title><rect x="1032.7" y="293" width="78.6" height="15.0" fill="rgb(220,228,34)" rx="2" ry="2" />
<text  x="1035.67" y="303.5" >syscall</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 6.67%)</title><rect x="167.3" y="213" width="78.7" height="15.0" fill="rgb(242,0,29)" rx="2" ry="2" />
<text  x="170.33" y="223.5" >_IO_funlo..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 6.67%)</title><rect x="1111.3" y="53" width="78.7" height="15.0" fill="rgb(212,5,14)" rx="2" ry="2" />
<text  x="1114.33" y="63.5" >handleUse..</text>
</g>
<g >
<title>SwFntObj::DrawText (1 samples, 6.67%)</title><rect x="167.3" y="293" width="78.7" height="15.0" fill="rgb(233,178,54)" rx="2" ry="2" />
<text  x="170.33" y="303.5" >SwFntObj:..</text>
</g>
<g >
<title>syscall (3 samples, 20.00%)</title><rect x="246.0" y="181" width="236.0" height="15.0" fill="rgb(247,160,0)" rx="2" ry="2" />
<text  x="249.00" y="191.5" >syscall</text>
</g>
<g >
<title>SwCursorShell::Paint (3 samples, 20.00%)</title><rect x="796.7" y="389" width="236.0" height="15.0" fill="rgb(230,159,51)" rx="2" ry="2" />
<text  x="799.67" y="399.5" >SwCursorShell::Paint</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 6.67%)</title><rect x="10.0" y="293" width="78.7" height="15.0" fill="rgb(217,89,44)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >handleUse..</text>
</g>
<g >
<title>_cairo_compositor_mask (3 samples, 20.00%)</title><rect x="560.7" y="165" width="236.0" height="15.0" fill="rgb(245,210,33)" rx="2" ry="2" />
<text  x="563.67" y="175.5" >_cairo_compositor_mask</text>
</g>
<g >
<title>OutputDevice::DrawBitmapEx (3 samples, 20.00%)</title><rect x="560.7" y="293" width="236.0" height="15.0" fill="rgb(253,146,8)" rx="2" ry="2" />
<text  x="563.67" y="303.5" >OutputDevice::DrawBitmapEx</text>
</g>
<g >
<title>doc_paintPartTile (1 samples, 6.67%)</title><rect x="88.7" y="389" width="78.6" height="15.0" fill="rgb(251,211,54)" rx="2" ry="2" />
<text  x="91.67" y="399.5" >doc_paint..</text>
</g>
<g >
<title>RenderTiles::doRender (1 samples, 6.67%)</title><rect x="1032.7" y="389" width="78.6" height="15.0" fill="rgb(209,174,5)" rx="2" ry="2" />
<text  x="1035.67" y="399.5" >RenderTil..</text>
</g>
<g >
<title>SwTextPaintInfo::DrawText_ (3 samples, 20.00%)</title><rect x="246.0" y="341" width="236.0" height="15.0" fill="rgb(244,186,51)" rx="2" ry="2" />
<text  x="249.00" y="351.5" >SwTextPaintInfo::DrawText_</text>
</g>
<g >
<title>ThreadPool::runOne (1 samples, 6.67%)</title><rect x="1032.7" y="405" width="78.6" height="15.0" fill="rgb(235,128,25)" rx="2" ry="2" />
<text  x="1035.67" y="415.5" >ThreadPoo..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 6.67%)</title><rect x="10.0" y="309" width="78.7" height="15.0" fill="rgb(210,90,34)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >_IO_funlo..</text>
</g>
<g >
<title>syscall (3 samples, 20.00%)</title><rect x="796.7" y="165" width="236.0" height="15.0" fill="rgb(251,96,16)" rx="2" ry="2" />
<text  x="799.67" y="175.5" >syscall</text>
</g>
<g >
<title>SwPageFrame::PaintBorderAndShadow (1 samples, 6.67%)</title><rect x="1111.3" y="293" width="78.7" height="15.0" fill="rgb(245,159,16)" rx="2" ry="2" />
<text  x="1114.33" y="303.5" >SwPageFra..</text>
</g>
<g >
<title>RenderTiles::doRender (1 samples, 6.67%)</title><rect x="10.0" y="357" width="78.7" height="15.0" fill="rgb(254,206,28)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >RenderTil..</text>
</g>
<g >
<title>syscall (3 samples, 20.00%)</title><rect x="560.7" y="53" width="236.0" height="15.0" fill="rgb(219,204,54)" rx="2" ry="2" />
<text  x="563.67" y="63.5" >syscall</text>
</g>
<g >
<title>SwExpandPortion::Paint (3 samples, 20.00%)</title><rect x="246.0" y="357" width="236.0" height="15.0" fill="rgb(242,16,14)" rx="2" ry="2" />
<text  x="249.00" y="367.5" >SwExpandPortion::Paint</text>
</g>
<g >
<title>syscall (1 samples, 6.67%)</title><rect x="88.7" y="149" width="78.6" height="15.0" fill="rgb(245,77,1)" rx="2" ry="2" />
<text  x="91.67" y="159.5" >syscall</text>
</g>
<g >
<title>SwFrame::PaintSwFrameBackground (1 samples, 6.67%)</title><rect x="88.7" y="245" width="78.6" height="15.0" fill="rgb(224,10,12)" rx="2" ry="2" />
<text  x="91.67" y="255.5" >SwFrame::..</text>
</g>
<g >
<title>free (1 samples, 6.67%)</title><rect x="10.0" y="325" width="78.7" height="15.0" fill="rgb(248,150,6)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >free</text>
</g>
<g >
<title>_cairo_clip_reduce_for_composite (1 samples, 6.67%)</title><rect x="1111.3" y="85" width="78.7" height="15.0" fill="rgb(252,159,42)" rx="2" ry="2" />
<text  x="1114.33" y="95.5" >_cairo_cl..</text>
</g>
<g >
<title>SwTextPainter::DrawTextLine (3 samples, 20.00%)</title><rect x="796.7" y="293" width="236.0" height="15.0" fill="rgb(208,169,45)" rx="2" ry="2" />
<text  x="799.67" y="303.5" >SwTextPainter::DrawTextLine</text>
</g>
<g >
<title>ThreadPool::runOne (1 samples, 6.67%)</title><rect x="10.0" y="373" width="78.7" height="15.0" fill="rgb(226,220,36)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >ThreadPoo..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 6.67%)</title><rect x="1032.7" y="309" width="78.6" height="15.0" fill="rgb(207,225,19)" rx="2" ry="2" />
<text  x="1035.67" y="319.5" >handleUse..</text>
</g>
<g >
<title>SwSubFont::DrawText_ (1 samples, 6.67%)</title><rect x="482.0" y="341" width="78.7" height="15.0" fill="rgb(231,157,30)" rx="2" ry="2" />
<text  x="485.00" y="351.5" >SwSubFont..</text>
</g>
<g >
<title>OutputDevice::ImplDrawTextDirect (3 samples, 20.00%)</title><rect x="246.0" y="277" width="236.0" height="15.0" fill="rgb(214,39,4)" rx="2" ry="2" />
<text  x="249.00" y="287.5" >OutputDevice::ImplDrawTextDirect</text>
</g>
<g >
<title>SwTextFrame::PaintSwFrame (3 samples, 20.00%)</title><rect x="796.7" y="309" width="236.0" height="15.0" fill="rgb(218,125,26)" rx="2" ry="2" />
<text  x="799.67" y="319.5" >SwTextFrame::PaintSwFrame</text>
</g>
<g >
<title>_cairo_surface_mask (1 samples, 6.67%)</title><rect x="1111.3" y="149" width="78.7" height="15.0" fill="rgb(232,5,29)" rx="2" ry="2" />
<text  x="1114.33" y="159.5" >_cairo_su..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 6.67%)</title><rect x="167.3" y="197" width="78.7" height="15.0" fill="rgb(252,208,14)" rx="2" ry="2" />
<text  x="170.33" y="207.5" >handleUse..</text>
</g>
<g >
<title>simd_initPixRowSimd (1 samples, 6.67%)</title><rect x="1032.7" y="341" width="78.6" height="15.0" fill="rgb(214,12,14)" rx="2" ry="2" />
<text  x="1035.67" y="351.5" >simd_init..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 6.67%)</title><rect x="482.0" y="181" width="78.7" height="15.0" fill="rgb(226,88,40)" rx="2" ry="2" />
<text  x="485.00" y="191.5" >handleUse..</text>
</g>
<g >
<title>handleUserProfileSignal (3 samples, 20.00%)</title><rect x="796.7" y="181" width="236.0" height="15.0" fill="rgb(253,3,8)" rx="2" ry="2" />
<text  x="799.67" y="191.5" >handleUserProfileSignal</text>
</g>
<g >
<title>SvtLinguConfigItem::GetProperty (3 samples, 20.00%)</title><rect x="796.7" y="229" width="236.0" height="15.0" fill="rgb(251,91,49)" rx="2" ry="2" />
<text  x="799.67" y="239.5" >SvtLinguConfigItem::GetProperty</text>
</g>
<g >
<title>doc_paintTile (1 samples, 6.67%)</title><rect x="88.7" y="373" width="78.6" height="15.0" fill="rgb(214,225,36)" rx="2" ry="2" />
<text  x="91.67" y="383.5" >doc_paint..</text>
</g>
<g >
<title>SalLayoutGlyphsCache::GetLayoutGlyphs (1 samples, 6.67%)</title><rect x="167.3" y="277" width="78.7" height="15.0" fill="rgb(206,209,12)" rx="2" ry="2" />
<text  x="170.33" y="287.5" >SalLayout..</text>
</g>
<g >
<title>_cairo_default_context_set_source_rgba (3 samples, 20.00%)</title><rect x="246.0" y="229" width="236.0" height="15.0" fill="rgb(211,142,49)" rx="2" ry="2" />
<text  x="249.00" y="239.5" >_cairo_default_context_set_sour..</text>
</g>
<g >
<title>SwFntObj::DrawText (1 samples, 6.67%)</title><rect x="482.0" y="325" width="78.7" height="15.0" fill="rgb(220,177,4)" rx="2" ry="2" />
<text  x="485.00" y="335.5" >SwFntObj:..</text>
</g>
<g >
<title>kitbroker (15 samples, 100.00%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(216,47,36)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >kitbroker</text>
</g>
<g >
<title>SwLayoutFrame::PaintSwFrame (1 samples, 6.67%)</title><rect x="167.3" y="405" width="78.7" height="15.0" fill="rgb(245,119,18)" rx="2" ry="2" />
<text  x="170.33" y="415.5" >SwLayoutF..</text>
</g>
<g >
<title>doc_paintTile (1 samples, 6.67%)</title><rect x="1111.3" y="389" width="78.7" height="15.0" fill="rgb(225,150,28)" rx="2" ry="2" />
<text  x="1114.33" y="399.5" >doc_paint..</text>
</g>
<g >
<title>SwLayoutFrame::PaintSwFrame (1 samples, 6.67%)</title><rect x="167.3" y="389" width="78.7" height="15.0" fill="rgb(236,48,1)" rx="2" ry="2" />
<text  x="170.33" y="399.5" >SwLayoutF..</text>
</g>
<g >
<title>SwFrame::PaintSwFrameBackground (1 samples, 6.67%)</title><rect x="88.7" y="261" width="78.6" height="15.0" fill="rgb(254,207,13)" rx="2" ry="2" />
<text  x="91.67" y="271.5" >SwFrame::..</text>
</g>
<g >
<title>SwFntObj::DrawText (3 samples, 20.00%)</title><rect x="246.0" y="309" width="236.0" height="15.0" fill="rgb(244,120,3)" rx="2" ry="2" />
<text  x="249.00" y="319.5" >SwFntObj::DrawText</text>
</g>
<g >
<title>SwFntObj::DrawText (3 samples, 20.00%)</title><rect x="560.7" y="341" width="236.0" height="15.0" fill="rgb(213,71,35)" rx="2" ry="2" />
<text  x="563.67" y="351.5" >SwFntObj::DrawText</text>
</g>
<g >
<title>SwTextPainter::DrawTextLine (3 samples, 20.00%)</title><rect x="560.7" y="405" width="236.0" height="15.0" fill="rgb(221,170,23)" rx="2" ry="2" />
<text  x="563.67" y="415.5" >SwTextPainter::DrawTextLine</text>
</g>
<g >
<title>SwXTextDocument::paintTile (1 samples, 6.67%)</title><rect x="1111.3" y="373" width="78.7" height="15.0" fill="rgb(244,64,26)" rx="2" ry="2" />
<text  x="1114.33" y="383.5" >SwXTextDo..</text>
</g>
<g >
<title>all (15 samples, 100%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(248,115,17)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>cairo_set_source_rgba (3 samples, 20.00%)</title><rect x="246.0" y="245" width="236.0" height="15.0" fill="rgb(218,120,17)" rx="2" ry="2" />
<text  x="249.00" y="255.5" >cairo_set_source_rgba</text>
</g>
<g >
<title>RenderTiles::doRender (2 samples, 13.33%)</title><rect x="10.0" y="405" width="157.3" height="15.0" fill="rgb(231,93,45)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >RenderTiles::doRender</text>
</g>
<g >
<title>syscall (1 samples, 6.67%)</title><rect x="482.0" y="165" width="78.7" height="15.0" fill="rgb(252,190,24)" rx="2" ry="2" />
<text  x="485.00" y="175.5" >syscall</text>
</g>
<g >
<title>[unknown] (15 samples, 100.00%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(234,140,4)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >[unknown]</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 6.67%)</title><rect x="1111.3" y="69" width="78.7" height="15.0" fill="rgb(253,95,9)" rx="2" ry="2" />
<text  x="1114.33" y="79.5" >_IO_funlo..</text>
</g>
<g >
<title>SwTextFrame::PaintSwFrame (1 samples, 6.67%)</title><rect x="167.3" y="373" width="78.7" height="15.0" fill="rgb(231,134,26)" rx="2" ry="2" />
<text  x="170.33" y="383.5" >SwTextFra..</text>
</g>
<g >
<title>_cairo_gstate_mask (3 samples, 20.00%)</title><rect x="560.7" y="197" width="236.0" height="15.0" fill="rgb(222,227,23)" rx="2" ry="2" />
<text  x="563.67" y="207.5" >_cairo_gstate_mask</text>
</g>
<g >
<title>SvtLinguConfig::GetProperty (3 samples, 20.00%)</title><rect x="796.7" y="245" width="236.0" height="15.0" fill="rgb(207,207,40)" rx="2" ry="2" />
<text  x="799.67" y="255.5" >SvtLinguConfig::GetProperty</text>
</g>
<g >
<title>cairo_mask (1 samples, 6.67%)</title><rect x="1111.3" y="181" width="78.7" height="15.0" fill="rgb(232,198,12)" rx="2" ry="2" />
<text  x="1114.33" y="191.5" >cairo_mask</text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_fill_insert (1 samples, 6.67%)</title><rect x="482.0" y="245" width="78.7" height="15.0" fill="rgb(228,115,53)" rx="2" ry="2" />
<text  x="485.00" y="255.5" >std::vect..</text>
</g>
<g >
<title>SwTextFrame::HangingMargin (1 samples, 6.67%)</title><rect x="88.7" y="197" width="78.6" height="15.0" fill="rgb(250,18,31)" rx="2" ry="2" />
<text  x="91.67" y="207.5" >SwTextFra..</text>
</g>
<g >
<title>SwTextPaintInfo::DrawText_ (3 samples, 20.00%)</title><rect x="796.7" y="261" width="236.0" height="15.0" fill="rgb(219,113,16)" rx="2" ry="2" />
<text  x="799.67" y="271.5" >SwTextPaintInfo::DrawText_</text>
</g>
<g >
<title>clip_and_composite_boxes (3 samples, 20.00%)</title><rect x="560.7" y="133" width="236.0" height="15.0" fill="rgb(227,216,29)" rx="2" ry="2" />
<text  x="563.67" y="143.5" >clip_and_composite_boxes</text>
</g>
<g >
<title>OutputDevice::DrawDeviceBitmapEx (3 samples, 20.00%)</title><rect x="560.7" y="261" width="236.0" height="15.0" fill="rgb(248,95,6)" rx="2" ry="2" />
<text  x="563.67" y="271.5" >OutputDevice::DrawDeviceBitmapEx</text>
</g>
<g >
<title>OutputDevice::DrawBitmapEx (1 samples, 6.67%)</title><rect x="1111.3" y="261" width="78.7" height="15.0" fill="rgb(214,104,23)" rx="2" ry="2" />
<text  x="1114.33" y="271.5" >OutputDev..</text>
</g>
<g >
<title>SwTextPaintInfo::DrawText_ (1 samples, 6.67%)</title><rect x="167.3" y="325" width="78.7" height="15.0" fill="rgb(233,104,1)" rx="2" ry="2" />
<text  x="170.33" y="335.5" >SwTextPai..</text>
</g>
<g >
<title>_cairo_composite_rectangles_init_for_mask (1 samples, 6.67%)</title><rect x="1111.3" y="117" width="78.7" height="15.0" fill="rgb(219,30,4)" rx="2" ry="2" />
<text  x="1114.33" y="127.5" >_cairo_co..</text>
</g>
<g >
<title>ThreadPool::run (1 samples, 6.67%)</title><rect x="10.0" y="389" width="78.7" height="15.0" fill="rgb(245,126,25)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >ThreadPoo..</text>
</g>
<g >
<title>syscall (1 samples, 6.67%)</title><rect x="167.3" y="181" width="78.7" height="15.0" fill="rgb(216,202,46)" rx="2" ry="2" />
<text  x="170.33" y="191.5" >syscall</text>
</g>
<g >
<title>SwRootFrame::PaintSwFrame (1 samples, 6.67%)</title><rect x="1111.3" y="309" width="78.7" height="15.0" fill="rgb(211,107,20)" rx="2" ry="2" />
<text  x="1114.33" y="319.5" >SwRootFra..</text>
</g>
<g >
<title>SwTextPortion::Paint (1 samples, 6.67%)</title><rect x="167.3" y="341" width="78.7" height="15.0" fill="rgb(225,19,17)" rx="2" ry="2" />
<text  x="170.33" y="351.5" >SwTextPor..</text>
</g>
<g >
<title>SwXTextDocument::paintTile (1 samples, 6.67%)</title><rect x="88.7" y="357" width="78.6" height="15.0" fill="rgb(217,80,52)" rx="2" ry="2" />
<text  x="91.67" y="367.5" >SwXTextDo..</text>
</g>
<g >
<title>SwViewShell::PaintTile (1 samples, 6.67%)</title><rect x="88.7" y="341" width="78.6" height="15.0" fill="rgb(236,99,32)" rx="2" ry="2" />
<text  x="91.67" y="351.5" >SwViewShe..</text>
</g>
<g >
<title>CairoCommon::drawAlphaBitmap (3 samples, 20.00%)</title><rect x="560.7" y="229" width="236.0" height="15.0" fill="rgb(210,49,22)" rx="2" ry="2" />
<text  x="563.67" y="239.5" >CairoCommon::drawAlphaBitmap</text>
</g>
<g >
<title>operator new (1 samples, 6.67%)</title><rect x="482.0" y="229" width="78.7" height="15.0" fill="rgb(242,62,49)" rx="2" ry="2" />
<text  x="485.00" y="239.5" >operator ..</text>
</g>
<g >
<title>OutputDevice::DrawDeviceAlphaBitmap (1 samples, 6.67%)</title><rect x="1111.3" y="213" width="78.7" height="15.0" fill="rgb(206,145,14)" rx="2" ry="2" />
<text  x="1114.33" y="223.5" >OutputDev..</text>
</g>
<g >
<title>CairoCommon::drawAlphaBitmap (1 samples, 6.67%)</title><rect x="1111.3" y="197" width="78.7" height="15.0" fill="rgb(211,104,40)" rx="2" ry="2" />
<text  x="1114.33" y="207.5" >CairoComm..</text>
</g>
<g >
<title>SwViewShell::PaintTile (3 samples, 20.00%)</title><rect x="796.7" y="405" width="236.0" height="15.0" fill="rgb(213,171,29)" rx="2" ry="2" />
<text  x="799.67" y="415.5" >SwViewShell::PaintTile</text>
</g>
<g >
<title>SwTextPaintInfo::DrawText_ (1 samples, 6.67%)</title><rect x="482.0" y="357" width="78.7" height="15.0" fill="rgb(238,155,17)" rx="2" ry="2" />
<text  x="485.00" y="367.5" >SwTextPai..</text>
</g>
<g >
<title>vcl::Font::~Font (1 samples, 6.67%)</title><rect x="167.3" y="229" width="78.7" height="15.0" fill="rgb(229,30,35)" rx="2" ry="2" />
<text  x="170.33" y="239.5" >vcl::Font..</text>
</g>
<g >
<title>SwLayoutFrame::PaintSwFrame (3 samples, 20.00%)</title><rect x="796.7" y="341" width="236.0" height="15.0" fill="rgb(246,109,9)" rx="2" ry="2" />
<text  x="799.67" y="351.5" >SwLayoutFrame::PaintSwFrame</text>
</g>
<g >
<title>SwFrame::UnionFrame (1 samples, 6.67%)</title><rect x="88.7" y="213" width="78.6" height="15.0" fill="rgb(245,128,49)" rx="2" ry="2" />
<text  x="91.67" y="223.5" >SwFrame::..</text>
</g>
<g >
<title>OutputDevice::DrawDeviceAlphaBitmap (3 samples, 20.00%)</title><rect x="560.7" y="245" width="236.0" height="15.0" fill="rgb(221,183,15)" rx="2" ry="2" />
<text  x="563.67" y="255.5" >OutputDevice::DrawDeviceAlphaBi..</text>
</g>
<g >
<title>GenericSalLayout::ApplyDXArray (1 samples, 6.67%)</title><rect x="482.0" y="277" width="78.7" height="15.0" fill="rgb(232,81,14)" rx="2" ry="2" />
<text  x="485.00" y="287.5" >GenericSa..</text>
</g>
<g >
<title>SwSubFont::DrawText_ (3 samples, 20.00%)</title><rect x="560.7" y="357" width="236.0" height="15.0" fill="rgb(237,72,31)" rx="2" ry="2" />
<text  x="563.67" y="367.5" >SwSubFont::DrawText_</text>
</g>
<g >
<title>OutputDevice::DrawTextArray (3 samples, 20.00%)</title><rect x="246.0" y="293" width="236.0" height="15.0" fill="rgb(237,183,15)" rx="2" ry="2" />
<text  x="249.00" y="303.5" >OutputDevice::DrawTextArray</text>
</g>
<g >
<title>CairoTextRender::DrawTextLayout (3 samples, 20.00%)</title><rect x="246.0" y="261" width="236.0" height="15.0" fill="rgb(229,129,52)" rx="2" ry="2" />
<text  x="249.00" y="271.5" >CairoTextRender::DrawTextLayout</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 6.67%)</title><rect x="88.7" y="165" width="78.6" height="15.0" fill="rgb(209,15,28)" rx="2" ry="2" />
<text  x="91.67" y="175.5" >handleUse..</text>
</g>
<g >
<title>OutputDevice::DrawTextArray (1 samples, 6.67%)</title><rect x="482.0" y="309" width="78.7" height="15.0" fill="rgb(248,127,44)" rx="2" ry="2" />
<text  x="485.00" y="319.5" >OutputDev..</text>
</g>
<g >
<title>_cairo_spans_compositor_paint (3 samples, 20.00%)</title><rect x="560.7" y="149" width="236.0" height="15.0" fill="rgb(234,5,45)" rx="2" ry="2" />
<text  x="563.67" y="159.5" >_cairo_spans_compositor_paint</text>
</g>
<g >
<title>SwTextPortion::Paint (3 samples, 20.00%)</title><rect x="796.7" y="277" width="236.0" height="15.0" fill="rgb(248,122,50)" rx="2" ry="2" />
<text  x="799.67" y="287.5" >SwTextPortion::Paint</text>
</g>
<g >
<title>o3tl::lru_map&lt;SalLayoutGlyphsCache::CachedGlyphsKey, SalLayoutGlyphs, SalLayoutGlyphsCache::CachedGlyphsHash, std::equal_to&lt;SalLayoutGlyphsCache::CachedGlyphsKey&gt;, SalLayoutGlyphsCache::GlyphsCost&gt;::insert (1 samples, 6.67%)</title><rect x="167.3" y="261" width="78.7" height="15.0" fill="rgb(246,114,10)" rx="2" ry="2" />
<text  x="170.33" y="271.5" >o3tl::lru..</text>
</g>
<g >
<title>_IO_funlockfile (3 samples, 20.00%)</title><rect x="246.0" y="213" width="236.0" height="15.0" fill="rgb(213,153,48)" rx="2" ry="2" />
<text  x="249.00" y="223.5" >_IO_funlockfile</text>
</g>
<g >
<title>_IO_funlockfile (3 samples, 20.00%)</title><rect x="796.7" y="197" width="236.0" height="15.0" fill="rgb(234,173,9)" rx="2" ry="2" />
<text  x="799.67" y="207.5" >_IO_funlockfile</text>
</g>
<g >
<title>SwTextFrame::PaintSwFrame (4 samples, 26.67%)</title><rect x="246.0" y="405" width="314.7" height="15.0" fill="rgb(235,24,53)" rx="2" ry="2" />
<text  x="249.00" y="415.5" >SwTextFrame::PaintSwFrame</text>
</g>
<g >
<title>SwViewShell::PaintTile (1 samples, 6.67%)</title><rect x="1111.3" y="357" width="78.7" height="15.0" fill="rgb(207,189,13)" rx="2" ry="2" />
<text  x="1114.33" y="367.5" >SwViewShe..</text>
</g>
<g >
<title>SwCursorShell::Paint (1 samples, 6.67%)</title><rect x="1111.3" y="341" width="78.7" height="15.0" fill="rgb(231,103,13)" rx="2" ry="2" />
<text  x="1114.33" y="351.5" >SwCursorS..</text>
</g>
<g >
<title>SwViewShell::Paint (3 samples, 20.00%)</title><rect x="796.7" y="373" width="236.0" height="15.0" fill="rgb(225,173,13)" rx="2" ry="2" />
<text  x="799.67" y="383.5" >SwViewShell::Paint</text>
</g>
<g >
<title>GenericSalLayout::GetCharWidths (1 samples, 6.67%)</title><rect x="482.0" y="261" width="78.7" height="15.0" fill="rgb(249,166,45)" rx="2" ry="2" />
<text  x="485.00" y="271.5" >GenericSa..</text>
</g>
<g >
<title>SwSubFont::DrawText_ (1 samples, 6.67%)</title><rect x="167.3" y="309" width="78.7" height="15.0" fill="rgb(244,46,17)" rx="2" ry="2" />
<text  x="170.33" y="319.5" >SwSubFont..</text>
</g>
<g >
<title>SwLayoutFrame::PaintSwFrame (3 samples, 20.00%)</title><rect x="796.7" y="325" width="236.0" height="15.0" fill="rgb(228,93,21)" rx="2" ry="2" />
<text  x="799.67" y="335.5" >SwLayoutFrame::PaintSwFrame</text>
</g>
<g >
<title>_cairo_composite_rectangles_intersect_mask_extents (3 samples, 20.00%)</title><rect x="560.7" y="117" width="236.0" height="15.0" fill="rgb(225,32,18)" rx="2" ry="2" />
<text  x="563.67" y="127.5" >_cairo_composite_rectangles_int..</text>
</g>
<g >
<title>syscall (1 samples, 6.67%)</title><rect x="10.0" y="277" width="78.7" height="15.0" fill="rgb(206,208,48)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >syscall</text>
</g>
<g >
<title>SwViewShell::Paint (1 samples, 6.67%)</title><rect x="1111.3" y="325" width="78.7" height="15.0" fill="rgb(229,178,46)" rx="2" ry="2" />
<text  x="1114.33" y="335.5" >SwViewShe..</text>
</g>
<g >
<title>_cairo_rectangle_intersect (3 samples, 20.00%)</title><rect x="560.7" y="101" width="236.0" height="15.0" fill="rgb(237,42,47)" rx="2" ry="2" />
<text  x="563.67" y="111.5" >_cairo_rectangle_intersect</text>
</g>
<g >
<title>SwSubFont::DrawText_ (3 samples, 20.00%)</title><rect x="246.0" y="325" width="236.0" height="15.0" fill="rgb(214,127,11)" rx="2" ry="2" />
<text  x="249.00" y="335.5" >SwSubFont::DrawText_</text>
</g>
<g >
<title>OutputDevice::DrawBitmapEx (1 samples, 6.67%)</title><rect x="1111.3" y="245" width="78.7" height="15.0" fill="rgb(231,90,47)" rx="2" ry="2" />
<text  x="1114.33" y="255.5" >OutputDev..</text>
</g>
<g >
<title>lcl_DrawLineForWrongListData (3 samples, 20.00%)</title><rect x="560.7" y="325" width="236.0" height="15.0" fill="rgb(235,156,13)" rx="2" ry="2" />
<text  x="563.67" y="335.5" >lcl_DrawLineForWrongListData</text>
</g>
<g >
<title>SwTextPortion::Paint (3 samples, 20.00%)</title><rect x="560.7" y="389" width="236.0" height="15.0" fill="rgb(236,142,9)" rx="2" ry="2" />
<text  x="563.67" y="399.5" >SwTextPortion::Paint</text>
</g>
<g >
<title>doc_paintPartTile (1 samples, 6.67%)</title><rect x="1111.3" y="405" width="78.7" height="15.0" fill="rgb(251,61,42)" rx="2" ry="2" />
<text  x="1114.33" y="415.5" >doc_paint..</text>
</g>
<g >
<title>SwTextPortion::Paint (1 samples, 6.67%)</title><rect x="482.0" y="373" width="78.7" height="15.0" fill="rgb(205,87,36)" rx="2" ry="2" />
<text  x="485.00" y="383.5" >SwTextPor..</text>
</g>
<g >
<title>_IO_funlockfile (3 samples, 20.00%)</title><rect x="560.7" y="85" width="236.0" height="15.0" fill="rgb(216,38,13)" rx="2" ry="2" />
<text  x="563.67" y="95.5" >_IO_funlockfile</text>
</g>
<g >
<title>OutputDevice::ImplLayout (1 samples, 6.67%)</title><rect x="482.0" y="293" width="78.7" height="15.0" fill="rgb(235,92,50)" rx="2" ry="2" />
<text  x="485.00" y="303.5" >OutputDev..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 6.67%)</title><rect x="482.0" y="197" width="78.7" height="15.0" fill="rgb(223,23,8)" rx="2" ry="2" />
<text  x="485.00" y="207.5" >_IO_funlo..</text>
</g>
<g >
<title>SwNumberPortion::Paint (3 samples, 20.00%)</title><rect x="246.0" y="373" width="236.0" height="15.0" fill="rgb(247,12,39)" rx="2" ry="2" />
<text  x="249.00" y="383.5" >SwNumberPortion::Paint</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 6.67%)</title><rect x="88.7" y="181" width="78.6" height="15.0" fill="rgb(246,167,6)" rx="2" ry="2" />
<text  x="91.67" y="191.5" >_IO_funlo..</text>
</g>
<g >
<title>OutputDevice::DrawDeviceBitmapEx (1 samples, 6.67%)</title><rect x="1111.3" y="229" width="78.7" height="15.0" fill="rgb(248,216,2)" rx="2" ry="2" />
<text  x="1114.33" y="239.5" >OutputDev..</text>
</g>
<g >
<title>OutputDevice::DrawBitmapEx (3 samples, 20.00%)</title><rect x="560.7" y="277" width="236.0" height="15.0" fill="rgb(212,181,12)" rx="2" ry="2" />
<text  x="563.67" y="287.5" >OutputDevice::DrawBitmapEx</text>
</g>
<g >
<title>SwRootFrame::PaintSwFrame (3 samples, 20.00%)</title><rect x="796.7" y="357" width="236.0" height="15.0" fill="rgb(224,49,13)" rx="2" ry="2" />
<text  x="799.67" y="367.5" >SwRootFrame::PaintSwFrame</text>
</g>
<g >
<title>SwTextPainter::DrawTextLine (1 samples, 6.67%)</title><rect x="167.3" y="357" width="78.7" height="15.0" fill="rgb(227,121,48)" rx="2" ry="2" />
<text  x="170.33" y="367.5" >SwTextPai..</text>
</g>
<g >
<title>DeltaGenerator::createDelta (1 samples, 6.67%)</title><rect x="10.0" y="341" width="78.7" height="15.0" fill="rgb(227,117,52)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >DeltaGene..</text>
</g>
<g >
<title>SwViewShell::Paint (1 samples, 6.67%)</title><rect x="88.7" y="309" width="78.6" height="15.0" fill="rgb(241,153,0)" rx="2" ry="2" />
<text  x="91.67" y="319.5" >SwViewShe..</text>
</g>
<g >
<title>o3tl::lru_map&lt;SalLayoutGlyphsCache::CachedGlyphsKey, SalLayoutGlyphs, SalLayoutGlyphsCache::CachedGlyphsHash, std::equal_to&lt;SalLayoutGlyphsCache::CachedGlyphsKey&gt;, SalLayoutGlyphsCache::GlyphsCost&gt;::removeOldestItem (1 samples, 6.67%)</title><rect x="167.3" y="245" width="78.7" height="15.0" fill="rgb(250,135,40)" rx="2" ry="2" />
<text  x="170.33" y="255.5" >o3tl::lru..</text>
</g>
<g >
<title>syscall (1 samples, 6.67%)</title><rect x="1111.3" y="37" width="78.7" height="15.0" fill="rgb(250,41,0)" rx="2" ry="2" />
<text  x="1114.33" y="47.5" >syscall</text>
</g>
<g >
<title>_cairo_gstate_mask (1 samples, 6.67%)</title><rect x="1111.3" y="165" width="78.7" height="15.0" fill="rgb(215,103,24)" rx="2" ry="2" />
<text  x="1114.33" y="175.5" >_cairo_gs..</text>
</g>
<g >
<title>OutputDevice::DrawWaveLine (3 samples, 20.00%)</title><rect x="560.7" y="309" width="236.0" height="15.0" fill="rgb(241,190,40)" rx="2" ry="2" />
<text  x="563.67" y="319.5" >OutputDevice::DrawWaveLine</text>
</g>
<g >
<title>_cairo_compositor_mask (1 samples, 6.67%)</title><rect x="1111.3" y="133" width="78.7" height="15.0" fill="rgb(210,155,35)" rx="2" ry="2" />
<text  x="1114.33" y="143.5" >_cairo_co..</text>
</g>
<g >
<title>_cairo_surface_mask (3 samples, 20.00%)</title><rect x="560.7" y="181" width="236.0" height="15.0" fill="rgb(246,128,5)" rx="2" ry="2" />
<text  x="563.67" y="191.5" >_cairo_surface_mask</text>
</g>
<g >
<title>SwTextPainter::DrawTextLine (4 samples, 26.67%)</title><rect x="246.0" y="389" width="314.7" height="15.0" fill="rgb(231,38,28)" rx="2" ry="2" />
<text  x="249.00" y="399.5" >SwTextPainter::DrawTextLine</text>
</g>
<g >
<title>handleUserProfileSignal (3 samples, 20.00%)</title><rect x="246.0" y="197" width="236.0" height="15.0" fill="rgb(240,0,21)" rx="2" ry="2" />
<text  x="249.00" y="207.5" >handleUserProfileSignal</text>
</g>
<g >
<title>lcl_paintBitmapExToRect (1 samples, 6.67%)</title><rect x="1111.3" y="277" width="78.7" height="15.0" fill="rgb(217,171,29)" rx="2" ry="2" />
<text  x="1114.33" y="287.5" >lcl_paint..</text>
</g>
<g >
<title>SwFrame::PaintBaBo (1 samples, 6.67%)</title><rect x="88.7" y="277" width="78.6" height="15.0" fill="rgb(249,218,4)" rx="2" ry="2" />
<text  x="91.67" y="287.5" >SwFrame::..</text>
</g>
<g >
<title>cairo_mask (3 samples, 20.00%)</title><rect x="560.7" y="213" width="236.0" height="15.0" fill="rgb(223,52,50)" rx="2" ry="2" />
<text  x="563.67" y="223.5" >cairo_mask</text>
</g>
<g >
<title>_cairo_composite_rectangles_intersect (1 samples, 6.67%)</title><rect x="1111.3" y="101" width="78.7" height="15.0" fill="rgb(248,194,6)" rx="2" ry="2" />
<text  x="1114.33" y="111.5" >_cairo_co..</text>
</g>
<g >
<title>SwRootFrame::PaintSwFrame (1 samples, 6.67%)</title><rect x="88.7" y="293" width="78.6" height="15.0" fill="rgb(254,140,30)" rx="2" ry="2" />
<text  x="91.67" y="303.5" >SwRootFra..</text>
</g>
<g >
<title>DeltaGenerator::DeltaData::DeltaData (1 samples, 6.67%)</title><rect x="1032.7" y="357" width="78.6" height="15.0" fill="rgb(230,45,33)" rx="2" ry="2" />
<text  x="1035.67" y="367.5" >DeltaGene..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 6.67%)</title><rect x="1032.7" y="325" width="78.6" height="15.0" fill="rgb(246,61,12)" rx="2" ry="2" />
<text  x="1035.67" y="335.5" >_IO_funlo..</text>
</g>
</g>
</svg>
