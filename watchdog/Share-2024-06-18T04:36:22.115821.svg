<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="294" onload="init(evt)" viewBox="0 0 1200 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="294.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Share Watchdog Profile (2024-06-18T04:36:22.115821)</text>
<text id="details" x="10.00" y="277" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="277" > </text>
<g id="frames">
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="758.2" y="181" width="2.5" height="15.0" fill="rgb(219,18,52)" rx="2" ry="2" />
<text  x="761.17" y="191.5" ></text>
</g>
<g >
<title>all (470 samples, 100%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(254,57,32)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>SalFrame::DumpSetPosSize (6 samples, 1.28%)</title><rect x="328.9" y="197" width="15.0" height="15.0" fill="rgb(240,148,38)" rx="2" ry="2" />
<text  x="331.85" y="207.5" ></text>
</g>
<g >
<title>SfxStyleSheetBase::SfxStyleSheetBase (2 samples, 0.43%)</title><rect x="426.8" y="197" width="5.0" height="15.0" fill="rgb(223,186,26)" rx="2" ry="2" />
<text  x="429.77" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="55.2" y="181" width="5.0" height="15.0" fill="rgb(221,133,20)" rx="2" ry="2" />
<text  x="58.19" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (5 samples, 1.06%)</title><rect x="672.8" y="181" width="12.6" height="15.0" fill="rgb(224,160,39)" rx="2" ry="2" />
<text  x="675.81" y="191.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.21%)</title><rect x="758.2" y="197" width="2.5" height="15.0" fill="rgb(237,129,50)" rx="2" ry="2" />
<text  x="761.17" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="389.1" y="181" width="5.0" height="15.0" fill="rgb(241,149,12)" rx="2" ry="2" />
<text  x="392.11" y="191.5" ></text>
</g>
<g >
<title>png_write_IHDR (1 samples, 0.21%)</title><rect x="95.4" y="197" width="2.5" height="15.0" fill="rgb(232,173,12)" rx="2" ry="2" />
<text  x="98.36" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (3 samples, 0.64%)</title><rect x="1034.3" y="181" width="7.6" height="15.0" fill="rgb(217,65,9)" rx="2" ry="2" />
<text  x="1037.34" y="191.5" ></text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 0.21%)</title><rect x="10.0" y="101" width="2.5" height="15.0" fill="rgb(247,198,49)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>syscall (4 samples, 0.85%)</title><rect x="65.2" y="165" width="10.1" height="15.0" fill="rgb(215,189,7)" rx="2" ry="2" />
<text  x="68.23" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1099.6" y="165" width="2.5" height="15.0" fill="rgb(254,160,5)" rx="2" ry="2" />
<text  x="1102.62" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1109.7" y="165" width="2.5" height="15.0" fill="rgb(233,34,15)" rx="2" ry="2" />
<text  x="1112.66" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (4 samples, 0.85%)</title><rect x="210.9" y="197" width="10.0" height="15.0" fill="rgb(249,229,14)" rx="2" ry="2" />
<text  x="213.85" y="207.5" ></text>
</g>
<g >
<title>SwStyleSheetIterator::IsUsedInComments (1 samples, 0.21%)</title><rect x="165.7" y="181" width="2.5" height="15.0" fill="rgb(212,51,10)" rx="2" ry="2" />
<text  x="168.66" y="191.5" ></text>
</g>
<g >
<title>syscall (4 samples, 0.85%)</title><rect x="210.9" y="181" width="10.0" height="15.0" fill="rgb(248,91,40)" rx="2" ry="2" />
<text  x="213.85" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="431.8" y="165" width="2.5" height="15.0" fill="rgb(212,119,43)" rx="2" ry="2" />
<text  x="434.79" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="421.7" y="165" width="2.6" height="15.0" fill="rgb(244,151,0)" rx="2" ry="2" />
<text  x="424.74" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="921.4" y="181" width="2.5" height="15.0" fill="rgb(220,141,6)" rx="2" ry="2" />
<text  x="924.36" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="883.7" y="165" width="2.5" height="15.0" fill="rgb(237,74,49)" rx="2" ry="2" />
<text  x="886.70" y="175.5" ></text>
</g>
<g >
<title>[coolforkit] (2 samples, 0.43%)</title><rect x="705.4" y="197" width="5.1" height="15.0" fill="rgb(219,155,36)" rx="2" ry="2" />
<text  x="708.45" y="207.5" ></text>
</g>
<g >
<title>__brk (1 samples, 0.21%)</title><rect x="753.1" y="197" width="2.6" height="15.0" fill="rgb(236,30,44)" rx="2" ry="2" />
<text  x="756.15" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="451.9" y="165" width="2.5" height="15.0" fill="rgb(213,81,38)" rx="2" ry="2" />
<text  x="454.87" y="175.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@@GLIBC_2.2.5 (1 samples, 0.21%)</title><rect x="954.0" y="197" width="2.5" height="15.0" fill="rgb(233,19,4)" rx="2" ry="2" />
<text  x="957.00" y="207.5" ></text>
</g>
<g >
<title>i18npool::BreakIterator_Unicode::loadICUBreakIterator (1 samples, 0.21%)</title><rect x="843.5" y="197" width="2.5" height="15.0" fill="rgb(221,35,20)" rx="2" ry="2" />
<text  x="846.53" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="37.6" y="165" width="2.5" height="15.0" fill="rgb(224,28,6)" rx="2" ry="2" />
<text  x="40.62" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="685.4" y="165" width="2.5" height="15.0" fill="rgb(210,83,43)" rx="2" ry="2" />
<text  x="688.36" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="906.3" y="181" width="2.5" height="15.0" fill="rgb(216,101,48)" rx="2" ry="2" />
<text  x="909.30" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1016.8" y="181" width="2.5" height="15.0" fill="rgb(231,117,19)" rx="2" ry="2" />
<text  x="1019.77" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="364.0" y="181" width="2.5" height="15.0" fill="rgb(254,7,48)" rx="2" ry="2" />
<text  x="367.00" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (4 samples, 0.85%)</title><rect x="1062.0" y="197" width="10.0" height="15.0" fill="rgb(218,116,4)" rx="2" ry="2" />
<text  x="1064.96" y="207.5" ></text>
</g>
<g >
<title>vcl::(anonymous namespace)::ImplScaleConvolutionHor (6 samples, 1.28%)</title><rect x="1167.4" y="213" width="15.1" height="15.0" fill="rgb(206,134,30)" rx="2" ry="2" />
<text  x="1170.40" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="1056.9" y="181" width="5.1" height="15.0" fill="rgb(245,16,33)" rx="2" ry="2" />
<text  x="1059.94" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="760.7" y="165" width="2.5" height="15.0" fill="rgb(254,38,13)" rx="2" ry="2" />
<text  x="763.68" y="175.5" ></text>
</g>
<g >
<title>malloc (13 samples, 2.77%)</title><rect x="851.1" y="197" width="32.6" height="15.0" fill="rgb(211,157,16)" rx="2" ry="2" />
<text  x="854.06" y="207.5" >ma..</text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="60.2" y="181" width="2.5" height="15.0" fill="rgb(242,23,47)" rx="2" ry="2" />
<text  x="63.21" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="720.5" y="181" width="2.5" height="15.0" fill="rgb(218,47,34)" rx="2" ry="2" />
<text  x="723.51" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="836.0" y="181" width="2.5" height="15.0" fill="rgb(244,136,53)" rx="2" ry="2" />
<text  x="839.00" y="191.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.21%)</title><rect x="1077.0" y="197" width="2.5" height="15.0" fill="rgb(239,3,46)" rx="2" ry="2" />
<text  x="1080.02" y="207.5" ></text>
</g>
<g >
<title>ScAttrArray::~ScAttrArray (1 samples, 0.21%)</title><rect x="346.4" y="197" width="2.5" height="15.0" fill="rgb(230,33,31)" rx="2" ry="2" />
<text  x="349.43" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="62.7" y="165" width="2.5" height="15.0" fill="rgb(236,169,44)" rx="2" ry="2" />
<text  x="65.72" y="175.5" ></text>
</g>
<g >
<title>icu_73::RuleBasedBreakIterator::handleNext (1 samples, 0.21%)</title><rect x="37.6" y="181" width="2.5" height="15.0" fill="rgb(246,97,5)" rx="2" ry="2" />
<text  x="40.62" y="191.5" ></text>
</g>
<g >
<title>__tz_convert (1 samples, 0.21%)</title><rect x="785.8" y="197" width="2.5" height="15.0" fill="rgb(242,29,0)" rx="2" ry="2" />
<text  x="788.79" y="207.5" ></text>
</g>
<g >
<title>SwModify::CallSwClientNotify (1 samples, 0.21%)</title><rect x="1185.0" y="197" width="2.5" height="15.0" fill="rgb(235,217,10)" rx="2" ry="2" />
<text  x="1187.98" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="803.4" y="181" width="2.5" height="15.0" fill="rgb(243,82,2)" rx="2" ry="2" />
<text  x="806.36" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.21%)</title><rect x="10.0" y="117" width="2.5" height="15.0" fill="rgb(220,49,0)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (1 samples, 0.21%)</title><rect x="95.4" y="149" width="2.5" height="15.0" fill="rgb(239,226,50)" rx="2" ry="2" />
<text  x="98.36" y="159.5" ></text>
</g>
<g >
<title>ScAttrArray::SetPatternAreaImpl (1 samples, 0.21%)</title><rect x="170.7" y="197" width="2.5" height="15.0" fill="rgb(248,60,36)" rx="2" ry="2" />
<text  x="173.68" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="720.5" y="165" width="2.5" height="15.0" fill="rgb(241,215,40)" rx="2" ry="2" />
<text  x="723.51" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="95.4" y="117" width="2.5" height="15.0" fill="rgb(221,30,45)" rx="2" ry="2" />
<text  x="98.36" y="127.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="1056.9" y="165" width="5.1" height="15.0" fill="rgb(208,206,17)" rx="2" ry="2" />
<text  x="1059.94" y="175.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2 samples, 0.43%)</title><rect x="813.4" y="197" width="5.0" height="15.0" fill="rgb(240,65,40)" rx="2" ry="2" />
<text  x="816.40" y="207.5" ></text>
</g>
<g >
<title>mdds::mtv::soa::multi_type_vector&lt;sc::CellStoreTraits&gt;::cend (1 samples, 0.21%)</title><rect x="906.3" y="197" width="2.5" height="15.0" fill="rgb(252,31,38)" rx="2" ry="2" />
<text  x="909.30" y="207.5" ></text>
</g>
<g >
<title>non-virtual thunk to SwFormatsModifyBase&lt;SwTextFormatColl*&gt;::GetFormat (3 samples, 0.64%)</title><rect x="911.3" y="197" width="7.6" height="15.0" fill="rgb(205,74,16)" rx="2" ry="2" />
<text  x="914.32" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="42.6" y="165" width="2.5" height="15.0" fill="rgb(250,64,34)" rx="2" ry="2" />
<text  x="45.64" y="175.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="896.3" y="165" width="5.0" height="15.0" fill="rgb(232,225,0)" rx="2" ry="2" />
<text  x="899.26" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="908.8" y="165" width="2.5" height="15.0" fill="rgb(238,222,5)" rx="2" ry="2" />
<text  x="911.81" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="62.7" y="181" width="2.5" height="15.0" fill="rgb(206,56,51)" rx="2" ry="2" />
<text  x="65.72" y="191.5" ></text>
</g>
<g >
<title>ScAttrArray::GetLastVisibleAttr (1 samples, 0.21%)</title><rect x="343.9" y="197" width="2.5" height="15.0" fill="rgb(205,106,10)" rx="2" ry="2" />
<text  x="346.91" y="207.5" ></text>
</g>
<g >
<title>[unknown] (354 samples, 75.32%)</title><rect x="263.6" y="213" width="888.7" height="15.0" fill="rgb(252,56,27)" rx="2" ry="2" />
<text  x="266.57" y="223.5" >[unknown]</text>
</g>
<g >
<title>ImplFontCache::CacheGlyphBoundRect (1 samples, 0.21%)</title><rect x="298.7" y="197" width="2.5" height="15.0" fill="rgb(225,62,31)" rx="2" ry="2" />
<text  x="301.72" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="321.3" y="165" width="2.5" height="15.0" fill="rgb(241,112,32)" rx="2" ry="2" />
<text  x="324.32" y="175.5" ></text>
</g>
<g >
<title>vtable for SwIterator&lt;SwClient, SwModify,  (2 samples, 0.43%)</title><rect x="165.7" y="197" width="5.0" height="15.0" fill="rgb(244,148,28)" rx="2" ry="2" />
<text  x="168.66" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1182.5" y="165" width="2.5" height="15.0" fill="rgb(234,48,26)" rx="2" ry="2" />
<text  x="1185.47" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="459.4" y="165" width="2.5" height="15.0" fill="rgb(210,47,27)" rx="2" ry="2" />
<text  x="462.40" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="893.7" y="181" width="2.6" height="15.0" fill="rgb(211,90,13)" rx="2" ry="2" />
<text  x="896.74" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="775.7" y="181" width="5.1" height="15.0" fill="rgb(224,116,30)" rx="2" ry="2" />
<text  x="778.74" y="191.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="175.7" y="165" width="5.0" height="15.0" fill="rgb(243,208,38)" rx="2" ry="2" />
<text  x="178.70" y="175.5" ></text>
</g>
<g >
<title>CairoCommon::clipRegion (1 samples, 0.21%)</title><rect x="271.1" y="197" width="2.5" height="15.0" fill="rgb(250,209,47)" rx="2" ry="2" />
<text  x="274.11" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="120.5" y="165" width="2.5" height="15.0" fill="rgb(254,179,29)" rx="2" ry="2" />
<text  x="123.47" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1024.3" y="165" width="2.5" height="15.0" fill="rgb(235,98,41)" rx="2" ry="2" />
<text  x="1027.30" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="286.2" y="181" width="5.0" height="15.0" fill="rgb(237,112,5)" rx="2" ry="2" />
<text  x="289.17" y="191.5" ></text>
</g>
<g >
<title>[libicuuc.so.73] (1 samples, 0.21%)</title><rect x="256.0" y="197" width="2.6" height="15.0" fill="rgb(209,114,51)" rx="2" ry="2" />
<text  x="259.04" y="207.5" ></text>
</g>
<g >
<title>syscall (3 samples, 0.64%)</title><rect x="80.3" y="165" width="7.5" height="15.0" fill="rgb(210,34,54)" rx="2" ry="2" />
<text  x="83.30" y="175.5" ></text>
</g>
<g >
<title>ClientRequestDispatcher::handleIncomingMessage (1 samples, 0.21%)</title><rect x="1187.5" y="197" width="2.5" height="15.0" fill="rgb(206,13,31)" rx="2" ry="2" />
<text  x="1190.49" y="207.5" ></text>
</g>
<g >
<title>ScTable::UpdatePageBreaks (1 samples, 0.21%)</title><rect x="406.7" y="197" width="2.5" height="15.0" fill="rgb(247,53,40)" rx="2" ry="2" />
<text  x="409.68" y="207.5" ></text>
</g>
<g >
<title>SwDoc::CopyFormat (1 samples, 0.21%)</title><rect x="40.1" y="197" width="2.5" height="15.0" fill="rgb(234,146,11)" rx="2" ry="2" />
<text  x="43.13" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="841.0" y="181" width="2.5" height="15.0" fill="rgb(216,8,46)" rx="2" ry="2" />
<text  x="844.02" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="785.8" y="181" width="2.5" height="15.0" fill="rgb(252,51,21)" rx="2" ry="2" />
<text  x="788.79" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="690.4" y="165" width="2.5" height="15.0" fill="rgb(246,218,51)" rx="2" ry="2" />
<text  x="693.38" y="175.5" ></text>
</g>
<g >
<title>cppu::OWeakObject::release (1 samples, 0.21%)</title><rect x="826.0" y="197" width="2.5" height="15.0" fill="rgb(227,66,46)" rx="2" ry="2" />
<text  x="828.96" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="77.8" y="181" width="2.5" height="15.0" fill="rgb(222,98,27)" rx="2" ry="2" />
<text  x="80.79" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="723.0" y="133" width="2.5" height="15.0" fill="rgb(222,38,37)" rx="2" ry="2" />
<text  x="726.02" y="143.5" ></text>
</g>
<g >
<title>cppu::queryDeepNoXInterface (1 samples, 0.21%)</title><rect x="828.5" y="181" width="2.5" height="15.0" fill="rgb(254,103,14)" rx="2" ry="2" />
<text  x="831.47" y="191.5" ></text>
</g>
<g >
<title>sse2_fill (2 samples, 0.43%)</title><rect x="1019.3" y="197" width="5.0" height="15.0" fill="rgb(213,221,35)" rx="2" ry="2" />
<text  x="1022.28" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="833.5" y="149" width="2.5" height="15.0" fill="rgb(251,127,46)" rx="2" ry="2" />
<text  x="836.49" y="159.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1001.7" y="165" width="2.5" height="15.0" fill="rgb(210,193,33)" rx="2" ry="2" />
<text  x="1004.70" y="175.5" ></text>
</g>
<g >
<title>SwTextMargin::CtorInitTextMargin (1 samples, 0.21%)</title><rect x="692.9" y="197" width="2.5" height="15.0" fill="rgb(229,127,23)" rx="2" ry="2" />
<text  x="695.89" y="207.5" ></text>
</g>
<g >
<title>Poco::Net::HTMLForm::HTMLForm (1 samples, 0.21%)</title><rect x="1187.5" y="165" width="2.5" height="15.0" fill="rgb(218,49,53)" rx="2" ry="2" />
<text  x="1190.49" y="175.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="396.6" y="165" width="5.1" height="15.0" fill="rgb(240,131,35)" rx="2" ry="2" />
<text  x="399.64" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="203.3" y="181" width="2.5" height="15.0" fill="rgb(218,104,43)" rx="2" ry="2" />
<text  x="206.32" y="191.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="351.4" y="165" width="5.1" height="15.0" fill="rgb(246,188,33)" rx="2" ry="2" />
<text  x="354.45" y="175.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.43%)</title><rect x="780.8" y="197" width="5.0" height="15.0" fill="rgb(229,147,25)" rx="2" ry="2" />
<text  x="783.77" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1009.2" y="149" width="2.5" height="15.0" fill="rgb(242,180,45)" rx="2" ry="2" />
<text  x="1012.23" y="159.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="826.0" y="165" width="2.5" height="15.0" fill="rgb(219,148,8)" rx="2" ry="2" />
<text  x="828.96" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="303.7" y="165" width="2.6" height="15.0" fill="rgb(215,117,8)" rx="2" ry="2" />
<text  x="306.74" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="15.0" y="181" width="2.5" height="15.0" fill="rgb(246,80,40)" rx="2" ry="2" />
<text  x="18.02" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="306.3" y="181" width="2.5" height="15.0" fill="rgb(213,9,34)" rx="2" ry="2" />
<text  x="309.26" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (8 samples, 1.70%)</title><rect x="1079.5" y="197" width="20.1" height="15.0" fill="rgb(205,69,3)" rx="2" ry="2" />
<text  x="1082.53" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="118.0" y="165" width="2.5" height="15.0" fill="rgb(241,23,53)" rx="2" ry="2" />
<text  x="120.96" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="444.3" y="165" width="2.6" height="15.0" fill="rgb(232,62,26)" rx="2" ry="2" />
<text  x="447.34" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_get_insert_unique_pos (3 samples, 0.64%)</title><rect x="1046.9" y="197" width="7.5" height="15.0" fill="rgb(233,58,19)" rx="2" ry="2" />
<text  x="1049.89" y="207.5" ></text>
</g>
<g >
<title>_cairo_default_context_fill (1 samples, 0.21%)</title><rect x="195.8" y="197" width="2.5" height="15.0" fill="rgb(216,225,47)" rx="2" ry="2" />
<text  x="198.79" y="207.5" ></text>
</g>
<g >
<title>GenericSalLayout::LayoutText (2 samples, 0.43%)</title><rect x="286.2" y="197" width="5.0" height="15.0" fill="rgb(205,129,40)" rx="2" ry="2" />
<text  x="289.17" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="291.2" y="165" width="2.5" height="15.0" fill="rgb(235,120,47)" rx="2" ry="2" />
<text  x="294.19" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="15.0" y="197" width="2.5" height="15.0" fill="rgb(238,51,35)" rx="2" ry="2" />
<text  x="18.02" y="207.5" ></text>
</g>
<g >
<title>WopiStorage::downloadDocument (1 samples, 0.21%)</title><rect x="10.0" y="181" width="2.5" height="15.0" fill="rgb(220,175,7)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="87.8" y="165" width="5.1" height="15.0" fill="rgb(241,153,48)" rx="2" ry="2" />
<text  x="90.83" y="175.5" ></text>
</g>
<g >
<title>rtl_ustr_compare_WithLength (1 samples, 0.21%)</title><rect x="1001.7" y="197" width="2.5" height="15.0" fill="rgb(243,15,15)" rx="2" ry="2" />
<text  x="1004.70" y="207.5" ></text>
</g>
<g >
<title>mdds::mtv::soa::multi_type_vector&lt;sc::SparklineTraits&gt;::cbegin (1 samples, 0.21%)</title><rect x="908.8" y="197" width="2.5" height="15.0" fill="rgb(250,12,50)" rx="2" ry="2" />
<text  x="911.81" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="718.0" y="181" width="2.5" height="15.0" fill="rgb(251,164,47)" rx="2" ry="2" />
<text  x="721.00" y="191.5" ></text>
</g>
<g >
<title>std::pair&lt;rtl::OUString, std::shared_ptr&lt;vcl::text::TextLayoutCache const&gt; &gt;::~pair (2 samples, 0.43%)</title><rect x="1102.1" y="197" width="5.0" height="15.0" fill="rgb(249,2,27)" rx="2" ry="2" />
<text  x="1105.13" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="361.5" y="181" width="2.5" height="15.0" fill="rgb(205,145,28)" rx="2" ry="2" />
<text  x="364.49" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="933.9" y="149" width="2.5" height="15.0" fill="rgb(207,53,37)" rx="2" ry="2" />
<text  x="936.91" y="159.5" ></text>
</g>
<g >
<title>[libwpftwriterlo.so] (1 samples, 0.21%)</title><rect x="723.0" y="197" width="2.5" height="15.0" fill="rgb(225,167,14)" rx="2" ry="2" />
<text  x="726.02" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="938.9" y="165" width="2.5" height="15.0" fill="rgb(228,3,18)" rx="2" ry="2" />
<text  x="941.94" y="175.5" ></text>
</g>
<g >
<title>ClientRequestDispatcher::handleClipboardRequest (1 samples, 0.21%)</title><rect x="1187.5" y="181" width="2.5" height="15.0" fill="rgb(254,190,21)" rx="2" ry="2" />
<text  x="1190.49" y="191.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="1079.5" y="149" width="5.1" height="15.0" fill="rgb(242,170,43)" rx="2" ry="2" />
<text  x="1082.53" y="159.5" ></text>
</g>
<g >
<title>ScInterpreter::ScIfJump (1 samples, 0.21%)</title><rect x="386.6" y="149" width="2.5" height="15.0" fill="rgb(236,98,15)" rx="2" ry="2" />
<text  x="389.60" y="159.5" ></text>
</g>
<g >
<title>non-virtual thunk to SwFormatsModifyBase&lt;SwTextFormatColl*&gt;::GetFormatCount (1 samples, 0.21%)</title><rect x="918.9" y="197" width="2.5" height="15.0" fill="rgb(211,137,23)" rx="2" ry="2" />
<text  x="921.85" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="755.7" y="165" width="2.5" height="15.0" fill="rgb(253,57,30)" rx="2" ry="2" />
<text  x="758.66" y="175.5" ></text>
</g>
<g >
<title>png_write_compressed_data_out (1 samples, 0.21%)</title><rect x="790.8" y="181" width="2.5" height="15.0" fill="rgb(238,10,25)" rx="2" ry="2" />
<text  x="793.81" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="256.0" y="181" width="2.6" height="15.0" fill="rgb(238,161,49)" rx="2" ry="2" />
<text  x="259.04" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="692.9" y="181" width="2.5" height="15.0" fill="rgb(243,143,14)" rx="2" ry="2" />
<text  x="695.89" y="191.5" ></text>
</g>
<g >
<title>SwFormatsBase::FindFormatByName (84 samples, 17.87%)</title><rect x="461.9" y="197" width="210.9" height="15.0" fill="rgb(240,170,6)" rx="2" ry="2" />
<text  x="464.91" y="207.5" >SwFormatsBase::FindFormatBy..</text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="351.4" y="181" width="5.1" height="15.0" fill="rgb(234,131,29)" rx="2" ry="2" />
<text  x="354.45" y="191.5" ></text>
</g>
<g >
<title>__libc_calloc (1 samples, 0.21%)</title><rect x="760.7" y="197" width="2.5" height="15.0" fill="rgb(223,141,2)" rx="2" ry="2" />
<text  x="763.68" y="207.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="198.3" y="165" width="5.0" height="15.0" fill="rgb(253,17,54)" rx="2" ry="2" />
<text  x="201.30" y="175.5" ></text>
</g>
<g >
<title>vcl::Region::GetAsRegionBand (2 samples, 0.43%)</title><rect x="160.6" y="197" width="5.1" height="15.0" fill="rgb(230,165,10)" rx="2" ry="2" />
<text  x="163.64" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="371.5" y="165" width="2.5" height="15.0" fill="rgb(216,163,53)" rx="2" ry="2" />
<text  x="374.53" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="381.6" y="165" width="2.5" height="15.0" fill="rgb(251,150,13)" rx="2" ry="2" />
<text  x="384.57" y="175.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (2 samples, 0.43%)</title><rect x="1079.5" y="181" width="5.1" height="15.0" fill="rgb(250,52,9)" rx="2" ry="2" />
<text  x="1082.53" y="191.5" ></text>
</g>
<g >
<title>vcl::graphic::Manager::registerGraphic (1 samples, 0.21%)</title><rect x="1139.8" y="197" width="2.5" height="15.0" fill="rgb(229,30,31)" rx="2" ry="2" />
<text  x="1142.79" y="207.5" ></text>
</g>
<g >
<title>rtl_uString_intern (1 samples, 0.21%)</title><rect x="984.1" y="197" width="2.5" height="15.0" fill="rgb(234,114,20)" rx="2" ry="2" />
<text  x="987.13" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="923.9" y="165" width="2.5" height="15.0" fill="rgb(250,128,22)" rx="2" ry="2" />
<text  x="926.87" y="175.5" ></text>
</g>
<g >
<title>LanguageTag::registerImpl (3 samples, 0.64%)</title><rect x="308.8" y="197" width="7.5" height="15.0" fill="rgb(205,190,34)" rx="2" ry="2" />
<text  x="311.77" y="207.5" ></text>
</g>
<g >
<title>cppu::WeakImplHelper_query (1 samples, 0.21%)</title><rect x="828.5" y="197" width="2.5" height="15.0" fill="rgb(248,62,14)" rx="2" ry="2" />
<text  x="831.47" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="954.0" y="165" width="2.5" height="15.0" fill="rgb(220,157,29)" rx="2" ry="2" />
<text  x="957.00" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="223.4" y="197" width="5.0" height="15.0" fill="rgb(209,33,11)" rx="2" ry="2" />
<text  x="226.40" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;SwAutoCompleteString*, SwAutoCompleteString*&amp;, SwAutoCompleteString**&gt; std::move_backward&lt;std::_Deque_iterator&lt;SwAutoCompleteString*, SwAutoCompleteString*&amp;, SwAutoCompleteString**&gt;, std::_Deque_iterator&lt;SwAutoCompleteString*, SwAutoCompleteString*&amp;, SwAutoCompleteString**&gt; &gt; (1 samples, 0.21%)</title><rect x="1024.3" y="197" width="2.5" height="15.0" fill="rgb(242,43,39)" rx="2" ry="2" />
<text  x="1027.30" y="207.5" ></text>
</g>
<g >
<title>SfxItemSet::Equals (1 samples, 0.21%)</title><rect x="981.6" y="181" width="2.5" height="15.0" fill="rgb(242,198,16)" rx="2" ry="2" />
<text  x="984.62" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="903.8" y="181" width="2.5" height="15.0" fill="rgb(237,48,14)" rx="2" ry="2" />
<text  x="906.79" y="191.5" ></text>
</g>
<g >
<title>SwModify::CallSwClientNotify (1 samples, 0.21%)</title><rect x="1152.3" y="197" width="2.6" height="15.0" fill="rgb(246,9,6)" rx="2" ry="2" />
<text  x="1155.34" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rtl::OUString, rtl::OUString, std::_Identity&lt;rtl::OUString&gt;, std::less&lt;rtl::OUString&gt;, std::allocator&lt;rtl::OUString&gt; &gt;::_M_erase (1 samples, 0.21%)</title><rect x="1054.4" y="197" width="2.5" height="15.0" fill="rgb(207,39,44)" rx="2" ry="2" />
<text  x="1057.43" y="207.5" ></text>
</g>
<g >
<title>sse2_blt.part.0 (1 samples, 0.21%)</title><rect x="1016.8" y="197" width="2.5" height="15.0" fill="rgb(241,204,42)" rx="2" ry="2" />
<text  x="1019.77" y="207.5" ></text>
</g>
<g >
<title>ScRefCellValue::assign (2 samples, 0.43%)</title><rect x="396.6" y="197" width="5.1" height="15.0" fill="rgb(254,162,14)" rx="2" ry="2" />
<text  x="399.64" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="828.5" y="133" width="2.5" height="15.0" fill="rgb(244,94,44)" rx="2" ry="2" />
<text  x="831.47" y="143.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="180.7" y="165" width="2.5" height="15.0" fill="rgb(221,78,6)" rx="2" ry="2" />
<text  x="183.72" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1149.8" y="181" width="2.5" height="15.0" fill="rgb(216,217,44)" rx="2" ry="2" />
<text  x="1152.83" y="191.5" ></text>
</g>
<g >
<title>[[stack]] (52 samples, 11.06%)</title><rect x="40.1" y="213" width="130.6" height="15.0" fill="rgb(239,34,33)" rx="2" ry="2" />
<text  x="43.13" y="223.5" >[[stack]]</text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1026.8" y="165" width="2.5" height="15.0" fill="rgb(230,214,0)" rx="2" ry="2" />
<text  x="1029.81" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="999.2" y="165" width="2.5" height="15.0" fill="rgb(250,212,13)" rx="2" ry="2" />
<text  x="1002.19" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (3 samples, 0.64%)</title><rect x="1129.7" y="181" width="7.6" height="15.0" fill="rgb(214,50,9)" rx="2" ry="2" />
<text  x="1132.74" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="32.6" y="165" width="2.5" height="15.0" fill="rgb(206,212,17)" rx="2" ry="2" />
<text  x="35.60" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="230.9" y="181" width="2.5" height="15.0" fill="rgb(252,171,10)" rx="2" ry="2" />
<text  x="233.94" y="191.5" ></text>
</g>
<g >
<title>sal::detail::textenc::convertUnicodeToChar (1 samples, 0.21%)</title><rect x="1006.7" y="197" width="2.5" height="15.0" fill="rgb(210,151,31)" rx="2" ry="2" />
<text  x="1009.72" y="207.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="820.9" y="165" width="5.1" height="15.0" fill="rgb(221,134,54)" rx="2" ry="2" />
<text  x="823.94" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rtl::OUString, std::pair&lt;rtl::OUString const, unsigned int&gt;, std::allocator&lt;std::pair&lt;rtl::OUString const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rtl::OUString&gt;, std::hash&lt;rtl::OUString&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, false&gt; &gt;::_M_insert_multi_node (1 samples, 0.21%)</title><rect x="1026.8" y="197" width="2.5" height="15.0" fill="rgb(220,21,11)" rx="2" ry="2" />
<text  x="1029.81" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="173.2" y="181" width="2.5" height="15.0" fill="rgb(225,22,18)" rx="2" ry="2" />
<text  x="176.19" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="441.8" y="165" width="2.5" height="15.0" fill="rgb(247,89,41)" rx="2" ry="2" />
<text  x="444.83" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="406.7" y="165" width="2.5" height="15.0" fill="rgb(232,15,51)" rx="2" ry="2" />
<text  x="409.68" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="208.3" y="165" width="2.6" height="15.0" fill="rgb(221,35,17)" rx="2" ry="2" />
<text  x="211.34" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1006.7" y="181" width="2.5" height="15.0" fill="rgb(231,144,18)" rx="2" ry="2" />
<text  x="1009.72" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="961.5" y="165" width="2.5" height="15.0" fill="rgb(232,29,3)" rx="2" ry="2" />
<text  x="964.53" y="175.5" ></text>
</g>
<g >
<title>ppoll (1 samples, 0.21%)</title><rect x="10.0" y="133" width="2.5" height="15.0" fill="rgb(205,205,52)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>SvtBroadcaster::Remove (2 samples, 0.43%)</title><rect x="180.7" y="197" width="5.0" height="15.0" fill="rgb(247,98,22)" rx="2" ry="2" />
<text  x="183.72" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="35.1" y="165" width="2.5" height="15.0" fill="rgb(246,106,34)" rx="2" ry="2" />
<text  x="38.11" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="253.5" y="197" width="2.5" height="15.0" fill="rgb(249,135,8)" rx="2" ry="2" />
<text  x="256.53" y="207.5" ></text>
</g>
<g >
<title>osl_releaseMutex (5 samples, 1.06%)</title><rect x="926.4" y="197" width="12.5" height="15.0" fill="rgb(221,206,34)" rx="2" ry="2" />
<text  x="929.38" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="431.8" y="181" width="2.5" height="15.0" fill="rgb(207,142,30)" rx="2" ry="2" />
<text  x="434.79" y="191.5" ></text>
</g>
<g >
<title>syscall (4 samples, 0.85%)</title><rect x="1157.4" y="213" width="10.0" height="15.0" fill="rgb(253,78,31)" rx="2" ry="2" />
<text  x="1160.36" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="426.8" y="181" width="5.0" height="15.0" fill="rgb(237,193,39)" rx="2" ry="2" />
<text  x="429.77" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt;, std::pair&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt; const, unsigned int&gt;, std::allocator&lt;std::pair&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt; const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt; &gt;, std::hash&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.43%)</title><rect x="160.6" y="181" width="5.1" height="15.0" fill="rgb(207,125,5)" rx="2" ry="2" />
<text  x="163.64" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.21%)</title><rect x="1187.5" y="69" width="2.5" height="15.0" fill="rgb(246,9,12)" rx="2" ry="2" />
<text  x="1190.49" y="79.5" ></text>
</g>
<g >
<title>syscall (3 samples, 0.64%)</title><rect x="1046.9" y="165" width="7.5" height="15.0" fill="rgb(253,38,38)" rx="2" ry="2" />
<text  x="1049.89" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="831.0" y="165" width="2.5" height="15.0" fill="rgb(252,60,13)" rx="2" ry="2" />
<text  x="833.98" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="27.6" y="181" width="2.5" height="15.0" fill="rgb(217,32,36)" rx="2" ry="2" />
<text  x="30.57" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="901.3" y="165" width="2.5" height="15.0" fill="rgb(225,80,54)" rx="2" ry="2" />
<text  x="904.28" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="188.3" y="181" width="5.0" height="15.0" fill="rgb(222,153,39)" rx="2" ry="2" />
<text  x="191.26" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1009.2" y="165" width="2.5" height="15.0" fill="rgb(219,137,26)" rx="2" ry="2" />
<text  x="1012.23" y="175.5" ></text>
</g>
<g >
<title>void rtl::str::release&lt;_rtl_uString&gt; (3 samples, 0.64%)</title><rect x="1142.3" y="197" width="7.5" height="15.0" fill="rgb(225,146,0)" rx="2" ry="2" />
<text  x="1145.30" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1004.2" y="181" width="2.5" height="15.0" fill="rgb(216,15,51)" rx="2" ry="2" />
<text  x="1007.21" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="805.9" y="165" width="2.5" height="15.0" fill="rgb(214,215,36)" rx="2" ry="2" />
<text  x="808.87" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="718.0" y="165" width="2.5" height="15.0" fill="rgb(231,106,31)" rx="2" ry="2" />
<text  x="721.00" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="25.1" y="181" width="2.5" height="15.0" fill="rgb(237,46,51)" rx="2" ry="2" />
<text  x="28.06" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="198.3" y="181" width="5.0" height="15.0" fill="rgb(228,228,13)" rx="2" ry="2" />
<text  x="201.30" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="170.7" y="181" width="2.5" height="15.0" fill="rgb(211,48,46)" rx="2" ry="2" />
<text  x="173.68" y="191.5" ></text>
</g>
<g >
<title>ImplFontCache::GetGlyphFallbackFont (1 samples, 0.21%)</title><rect x="301.2" y="197" width="2.5" height="15.0" fill="rgb(224,98,42)" rx="2" ry="2" />
<text  x="304.23" y="207.5" ></text>
</g>
<g >
<title>SvtBroadcaster::Remove (1 samples, 0.21%)</title><rect x="760.7" y="181" width="2.5" height="15.0" fill="rgb(242,63,31)" rx="2" ry="2" />
<text  x="763.68" y="191.5" ></text>
</g>
<g >
<title>ImplFont::EqualIgnoreColor (1 samples, 0.21%)</title><rect x="296.2" y="197" width="2.5" height="15.0" fill="rgb(238,96,19)" rx="2" ry="2" />
<text  x="299.21" y="207.5" ></text>
</g>
<g >
<title>OutputDevice::CreateTextLayoutCache (1 samples, 0.21%)</title><rect x="318.8" y="197" width="2.5" height="15.0" fill="rgb(208,106,13)" rx="2" ry="2" />
<text  x="321.81" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="685.4" y="181" width="2.5" height="15.0" fill="rgb(228,152,40)" rx="2" ry="2" />
<text  x="688.36" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="301.2" y="181" width="2.5" height="15.0" fill="rgb(233,128,48)" rx="2" ry="2" />
<text  x="304.23" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="424.3" y="165" width="2.5" height="15.0" fill="rgb(250,142,42)" rx="2" ry="2" />
<text  x="427.26" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="40.1" y="165" width="2.5" height="15.0" fill="rgb(252,111,9)" rx="2" ry="2" />
<text  x="43.13" y="175.5" ></text>
</g>
<g >
<title>syscall (3 samples, 0.64%)</title><rect x="273.6" y="149" width="7.5" height="15.0" fill="rgb(225,59,7)" rx="2" ry="2" />
<text  x="276.62" y="159.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="436.8" y="165" width="2.5" height="15.0" fill="rgb(248,178,3)" rx="2" ry="2" />
<text  x="439.81" y="175.5" ></text>
</g>
<g >
<title>non-virtual thunk to i18npool::BreakIteratorImpl::isEndWord (1 samples, 0.21%)</title><rect x="921.4" y="197" width="2.5" height="15.0" fill="rgb(212,111,53)" rx="2" ry="2" />
<text  x="924.36" y="207.5" ></text>
</g>
<g >
<title>Poco::Net::MultipartStreamBuf::readFromDevice (1 samples, 0.21%)</title><rect x="1187.5" y="85" width="2.5" height="15.0" fill="rgb(234,120,32)" rx="2" ry="2" />
<text  x="1190.49" y="95.5" ></text>
</g>
<g >
<title>SfxAllItemSet::Clone (1 samples, 0.21%)</title><rect x="409.2" y="197" width="2.5" height="15.0" fill="rgb(234,228,48)" rx="2" ry="2" />
<text  x="412.19" y="207.5" ></text>
</g>
<g >
<title>SalInstanceLinkButton::set_label (1 samples, 0.21%)</title><rect x="723.0" y="181" width="2.5" height="15.0" fill="rgb(252,167,37)" rx="2" ry="2" />
<text  x="726.02" y="191.5" ></text>
</g>
<g >
<title>SfxVisibilityItem::QueryValue (1 samples, 0.21%)</title><rect x="434.3" y="197" width="2.5" height="15.0" fill="rgb(247,79,9)" rx="2" ry="2" />
<text  x="437.30" y="207.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0] (3 samples, 0.64%)</title><rect x="220.9" y="213" width="7.5" height="15.0" fill="rgb(242,92,34)" rx="2" ry="2" />
<text  x="223.89" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="20.0" y="181" width="5.1" height="15.0" fill="rgb(244,86,51)" rx="2" ry="2" />
<text  x="23.04" y="191.5" ></text>
</g>
<g >
<title>__gxx_personality_v0 (1 samples, 0.21%)</title><rect x="723.0" y="165" width="2.5" height="15.0" fill="rgb(251,134,41)" rx="2" ry="2" />
<text  x="726.02" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="251.0" y="181" width="2.5" height="15.0" fill="rgb(210,193,26)" rx="2" ry="2" />
<text  x="254.02" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt;, std::pair&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt; const, unsigned int&gt;, std::allocator&lt;std::pair&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt; const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt; &gt;, std::hash&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.64%)</title><rect x="1034.3" y="197" width="7.6" height="15.0" fill="rgb(230,222,33)" rx="2" ry="2" />
<text  x="1037.34" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="906.3" y="165" width="2.5" height="15.0" fill="rgb(221,193,17)" rx="2" ry="2" />
<text  x="909.30" y="175.5" ></text>
</g>
<g >
<title>_start (1 samples, 0.21%)</title><rect x="798.3" y="197" width="2.6" height="15.0" fill="rgb(211,114,53)" rx="2" ry="2" />
<text  x="801.34" y="207.5" ></text>
</g>
<g >
<title>i18npool::BreakIteratorImpl::getWordBoundary (1 samples, 0.21%)</title><rect x="846.0" y="165" width="2.6" height="15.0" fill="rgb(243,159,29)" rx="2" ry="2" />
<text  x="849.04" y="175.5" ></text>
</g>
<g >
<title>syscall (3 samples, 0.64%)</title><rect x="1122.2" y="165" width="7.5" height="15.0" fill="rgb(218,70,16)" rx="2" ry="2" />
<text  x="1125.21" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="984.1" y="181" width="2.5" height="15.0" fill="rgb(228,135,36)" rx="2" ry="2" />
<text  x="987.13" y="191.5" ></text>
</g>
<g >
<title>__GI___futex_abstimed_wait_cancelable64 (1 samples, 0.21%)</title><rect x="75.3" y="197" width="2.5" height="15.0" fill="rgb(237,149,40)" rx="2" ry="2" />
<text  x="78.28" y="207.5" ></text>
</g>
<g >
<title>png_write_find_filter (8 samples, 1.70%)</title><rect x="97.9" y="197" width="20.1" height="15.0" fill="rgb(251,45,33)" rx="2" ry="2" />
<text  x="100.87" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (3 samples, 0.64%)</title><rect x="1122.2" y="181" width="7.5" height="15.0" fill="rgb(232,43,30)" rx="2" ry="2" />
<text  x="1125.21" y="191.5" ></text>
</g>
<g >
<title>[libicuuc.so.73] (1 samples, 0.21%)</title><rect x="718.0" y="197" width="2.5" height="15.0" fill="rgb(213,11,41)" rx="2" ry="2" />
<text  x="721.00" y="207.5" ></text>
</g>
<g >
<title>Poco::BasicBufferedStreamBuf&lt;char, std::char_traits&lt;char&gt;, Poco::BufferAllocator&lt;char&gt; &gt;::underflow (1 samples, 0.21%)</title><rect x="1187.5" y="101" width="2.5" height="15.0" fill="rgb(238,82,0)" rx="2" ry="2" />
<text  x="1190.49" y="111.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="936.4" y="165" width="2.5" height="15.0" fill="rgb(210,129,47)" rx="2" ry="2" />
<text  x="939.43" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="283.7" y="181" width="2.5" height="15.0" fill="rgb(248,151,49)" rx="2" ry="2" />
<text  x="286.66" y="191.5" ></text>
</g>
<g >
<title>http::Session::syncDownload (1 samples, 0.21%)</title><rect x="10.0" y="165" width="2.5" height="15.0" fill="rgb(217,2,52)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>syscall (13 samples, 2.77%)</title><rect x="851.1" y="165" width="32.6" height="15.0" fill="rgb(228,103,15)" rx="2" ry="2" />
<text  x="854.06" y="175.5" >sy..</text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="220.9" y="181" width="2.5" height="15.0" fill="rgb(209,87,16)" rx="2" ry="2" />
<text  x="223.89" y="191.5" ></text>
</g>
<g >
<title>ScDocument::GetCondResult (1 samples, 0.21%)</title><rect x="17.5" y="213" width="2.5" height="15.0" fill="rgb(221,212,6)" rx="2" ry="2" />
<text  x="20.53" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (6 samples, 1.28%)</title><rect x="328.9" y="165" width="15.0" height="15.0" fill="rgb(207,35,3)" rx="2" ry="2" />
<text  x="331.85" y="175.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="426.8" y="165" width="5.0" height="15.0" fill="rgb(241,7,40)" rx="2" ry="2" />
<text  x="429.77" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt;, std::pair&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt; const, unsigned int&gt;, std::allocator&lt;std::pair&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt; const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt; &gt;, std::hash&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.21%)</title><rect x="1044.4" y="197" width="2.5" height="15.0" fill="rgb(228,172,33)" rx="2" ry="2" />
<text  x="1047.38" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="160.6" y="165" width="5.1" height="15.0" fill="rgb(254,176,36)" rx="2" ry="2" />
<text  x="163.64" y="175.5" ></text>
</g>
<g >
<title>comphelper::SolarMutex::IsCurrentThread (1 samples, 0.21%)</title><rect x="818.4" y="197" width="2.5" height="15.0" fill="rgb(239,209,44)" rx="2" ry="2" />
<text  x="821.43" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="220.9" y="165" width="2.5" height="15.0" fill="rgb(239,149,30)" rx="2" ry="2" />
<text  x="223.89" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="281.1" y="165" width="2.6" height="15.0" fill="rgb(254,62,43)" rx="2" ry="2" />
<text  x="284.15" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="271.1" y="165" width="2.5" height="15.0" fill="rgb(215,71,3)" rx="2" ry="2" />
<text  x="274.11" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="409.2" y="181" width="2.5" height="15.0" fill="rgb(252,91,13)" rx="2" ry="2" />
<text  x="412.19" y="191.5" ></text>
</g>
<g >
<title>SfxItemPool::GetTrueSlotId (1 samples, 0.21%)</title><rect x="421.7" y="197" width="2.6" height="15.0" fill="rgb(212,109,42)" rx="2" ry="2" />
<text  x="424.74" y="207.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="55.2" y="165" width="5.0" height="15.0" fill="rgb(230,0,30)" rx="2" ry="2" />
<text  x="58.19" y="175.5" ></text>
</g>
<g >
<title>WopiStorage::downloadStorageFileToLocal (1 samples, 0.21%)</title><rect x="10.0" y="197" width="2.5" height="15.0" fill="rgb(232,162,22)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="800.9" y="165" width="2.5" height="15.0" fill="rgb(236,137,27)" rx="2" ry="2" />
<text  x="803.85" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="348.9" y="181" width="2.5" height="15.0" fill="rgb(251,222,22)" rx="2" ry="2" />
<text  x="351.94" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="692.9" y="165" width="2.5" height="15.0" fill="rgb(248,42,53)" rx="2" ry="2" />
<text  x="695.89" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1107.1" y="165" width="2.6" height="15.0" fill="rgb(211,30,24)" rx="2" ry="2" />
<text  x="1110.15" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1152.3" y="165" width="2.6" height="15.0" fill="rgb(232,16,27)" rx="2" ry="2" />
<text  x="1155.34" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="183.2" y="165" width="2.5" height="15.0" fill="rgb(207,24,15)" rx="2" ry="2" />
<text  x="186.23" y="175.5" ></text>
</g>
<g >
<title>syscall (7 samples, 1.49%)</title><rect x="964.0" y="165" width="17.6" height="15.0" fill="rgb(220,76,50)" rx="2" ry="2" />
<text  x="967.04" y="175.5" ></text>
</g>
<g >
<title>Poco::Net::HTMLForm::load (1 samples, 0.21%)</title><rect x="1187.5" y="149" width="2.5" height="15.0" fill="rgb(210,77,30)" rx="2" ry="2" />
<text  x="1190.49" y="159.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (1 samples, 0.21%)</title><rect x="230.9" y="213" width="2.5" height="15.0" fill="rgb(210,58,31)" rx="2" ry="2" />
<text  x="233.94" y="223.5" ></text>
</g>
<g >
<title>Poco::Net::HTMLForm::readMultipart (1 samples, 0.21%)</title><rect x="1187.5" y="133" width="2.5" height="15.0" fill="rgb(231,195,10)" rx="2" ry="2" />
<text  x="1190.49" y="143.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (6 samples, 1.28%)</title><rect x="1167.4" y="197" width="15.1" height="15.0" fill="rgb(249,86,50)" rx="2" ry="2" />
<text  x="1170.40" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="318.8" y="181" width="2.5" height="15.0" fill="rgb(231,194,50)" rx="2" ry="2" />
<text  x="321.81" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="37.6" y="149" width="2.5" height="15.0" fill="rgb(226,60,11)" rx="2" ry="2" />
<text  x="40.62" y="159.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="705.4" y="181" width="5.1" height="15.0" fill="rgb(205,140,8)" rx="2" ry="2" />
<text  x="708.45" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="271.1" y="181" width="2.5" height="15.0" fill="rgb(212,131,23)" rx="2" ry="2" />
<text  x="274.11" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="60.2" y="165" width="2.5" height="15.0" fill="rgb(236,210,0)" rx="2" ry="2" />
<text  x="63.21" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (3 samples, 0.64%)</title><rect x="80.3" y="181" width="7.5" height="15.0" fill="rgb(217,143,38)" rx="2" ry="2" />
<text  x="83.30" y="191.5" ></text>
</g>
<g >
<title>syscall (3 samples, 0.64%)</title><rect x="926.4" y="149" width="7.5" height="15.0" fill="rgb(232,85,29)" rx="2" ry="2" />
<text  x="929.38" y="159.5" ></text>
</g>
<g >
<title>uno_type_any_assign (3 samples, 0.64%)</title><rect x="1122.2" y="197" width="7.5" height="15.0" fill="rgb(235,142,45)" rx="2" ry="2" />
<text  x="1125.21" y="207.5" ></text>
</g>
<g >
<title>__GI_____strtoll_l_internal (1 samples, 0.21%)</title><rect x="27.6" y="197" width="2.5" height="15.0" fill="rgb(217,163,41)" rx="2" ry="2" />
<text  x="30.57" y="207.5" ></text>
</g>
<g >
<title>i18npool::CharacterClassificationImpl::createLocaleSpecificCharacterClassification (1 samples, 0.21%)</title><rect x="32.6" y="197" width="2.5" height="15.0" fill="rgb(217,109,41)" rx="2" ry="2" />
<text  x="35.60" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="30.1" y="181" width="2.5" height="15.0" fill="rgb(210,36,43)" rx="2" ry="2" />
<text  x="33.09" y="191.5" ></text>
</g>
<g >
<title>void std::__insertion_sort&lt;unsigned short*, __gnu_cxx::__ops::_Iter_less_iter&gt; (1 samples, 0.21%)</title><rect x="1149.8" y="197" width="2.5" height="15.0" fill="rgb(244,143,17)" rx="2" ry="2" />
<text  x="1152.83" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="296.2" y="165" width="2.5" height="15.0" fill="rgb(242,60,46)" rx="2" ry="2" />
<text  x="299.21" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="306.3" y="165" width="2.5" height="15.0" fill="rgb(233,194,11)" rx="2" ry="2" />
<text  x="309.26" y="175.5" ></text>
</g>
<g >
<title>SpellCheckerDispatcher::isValid_Impl (1 samples, 0.21%)</title><rect x="436.8" y="197" width="2.5" height="15.0" fill="rgb(252,210,8)" rx="2" ry="2" />
<text  x="439.81" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="750.6" y="165" width="2.5" height="15.0" fill="rgb(222,36,20)" rx="2" ry="2" />
<text  x="753.64" y="175.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="1072.0" y="165" width="5.0" height="15.0" fill="rgb(231,187,24)" rx="2" ry="2" />
<text  x="1075.00" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="750.6" y="181" width="2.5" height="15.0" fill="rgb(224,139,11)" rx="2" ry="2" />
<text  x="753.64" y="191.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.21%)</title><rect x="77.8" y="197" width="2.5" height="15.0" fill="rgb(223,163,52)" rx="2" ry="2" />
<text  x="80.79" y="207.5" ></text>
</g>
<g >
<title>SwFont::SwFont (1 samples, 0.21%)</title><rect x="185.7" y="197" width="2.6" height="15.0" fill="rgb(254,30,54)" rx="2" ry="2" />
<text  x="188.74" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="954.0" y="181" width="2.5" height="15.0" fill="rgb(215,135,3)" rx="2" ry="2" />
<text  x="957.00" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="87.8" y="181" width="5.1" height="15.0" fill="rgb(238,13,48)" rx="2" ry="2" />
<text  x="90.83" y="191.5" ></text>
</g>
<g >
<title>sal_detail_log_report (1 samples, 0.21%)</title><rect x="1009.2" y="197" width="2.5" height="15.0" fill="rgb(244,50,32)" rx="2" ry="2" />
<text  x="1012.23" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="831.0" y="149" width="2.5" height="15.0" fill="rgb(245,90,25)" rx="2" ry="2" />
<text  x="833.98" y="159.5" ></text>
</g>
<g >
<title>[libsqlite3.so] (1 samples, 0.21%)</title><rect x="228.4" y="213" width="2.5" height="15.0" fill="rgb(214,1,49)" rx="2" ry="2" />
<text  x="231.43" y="223.5" ></text>
</g>
<g >
<title>rtl_uString_release (1 samples, 0.21%)</title><rect x="999.2" y="197" width="2.5" height="15.0" fill="rgb(230,82,46)" rx="2" ry="2" />
<text  x="1002.19" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="12.5" y="181" width="2.5" height="15.0" fill="rgb(206,187,17)" rx="2" ry="2" />
<text  x="15.51" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="394.1" y="181" width="2.5" height="15.0" fill="rgb(245,180,33)" rx="2" ry="2" />
<text  x="397.13" y="191.5" ></text>
</g>
<g >
<title>FcStrSetMember (1 samples, 0.21%)</title><rect x="283.7" y="197" width="2.5" height="15.0" fill="rgb(242,81,10)" rx="2" ry="2" />
<text  x="286.66" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1054.4" y="181" width="2.5" height="15.0" fill="rgb(246,77,13)" rx="2" ry="2" />
<text  x="1057.43" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="454.4" y="181" width="2.5" height="15.0" fill="rgb(247,161,40)" rx="2" ry="2" />
<text  x="457.38" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1099.6" y="181" width="2.5" height="15.0" fill="rgb(244,2,51)" rx="2" ry="2" />
<text  x="1102.62" y="191.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.21%)</title><rect x="883.7" y="197" width="2.5" height="15.0" fill="rgb(233,3,24)" rx="2" ry="2" />
<text  x="886.70" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="346.4" y="165" width="2.5" height="15.0" fill="rgb(244,206,42)" rx="2" ry="2" />
<text  x="349.43" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="356.5" y="165" width="2.5" height="15.0" fill="rgb(232,64,18)" rx="2" ry="2" />
<text  x="359.47" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="713.0" y="181" width="5.0" height="15.0" fill="rgb(240,114,48)" rx="2" ry="2" />
<text  x="715.98" y="191.5" ></text>
</g>
<g >
<title>OutputDevice::GetTextArray (1 samples, 0.21%)</title><rect x="323.8" y="197" width="2.5" height="15.0" fill="rgb(243,88,12)" rx="2" ry="2" />
<text  x="326.83" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="251.0" y="165" width="2.5" height="15.0" fill="rgb(205,65,21)" rx="2" ry="2" />
<text  x="254.02" y="175.5" ></text>
</g>
<g >
<title>AffixMgr::defcpd_check (1 samples, 0.21%)</title><rect x="833.5" y="181" width="2.5" height="15.0" fill="rgb(218,52,36)" rx="2" ry="2" />
<text  x="836.49" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1185.0" y="165" width="2.5" height="15.0" fill="rgb(241,64,47)" rx="2" ry="2" />
<text  x="1187.98" y="175.5" ></text>
</g>
<g >
<title>CairoCommon::doXorOnRelease (3 samples, 0.64%)</title><rect x="273.6" y="197" width="7.5" height="15.0" fill="rgb(207,213,47)" rx="2" ry="2" />
<text  x="276.62" y="207.5" ></text>
</g>
<g >
<title>shallowTextClone.part.0 (1 samples, 0.21%)</title><rect x="1014.3" y="197" width="2.5" height="15.0" fill="rgb(213,94,51)" rx="2" ry="2" />
<text  x="1017.26" y="207.5" ></text>
</g>
<g >
<title>vcl::bitmap::isHistorical8x8 (1 samples, 0.21%)</title><rect x="1137.3" y="197" width="2.5" height="15.0" fill="rgb(215,217,48)" rx="2" ry="2" />
<text  x="1140.28" y="207.5" ></text>
</g>
<g >
<title>ScTable::UpdatePageBreaks (1 samples, 0.21%)</title><rect x="886.2" y="181" width="2.5" height="15.0" fill="rgb(219,72,1)" rx="2" ry="2" />
<text  x="889.21" y="191.5" ></text>
</g>
<g >
<title>OutputDevice::GetTextArray (1 samples, 0.21%)</title><rect x="1009.2" y="181" width="2.5" height="15.0" fill="rgb(213,58,39)" rx="2" ry="2" />
<text  x="1012.23" y="191.5" ></text>
</g>
<g >
<title>i18npool::BreakIteratorImpl::nextScript (1 samples, 0.21%)</title><rect x="933.9" y="181" width="2.5" height="15.0" fill="rgb(252,205,37)" rx="2" ry="2" />
<text  x="936.91" y="191.5" ></text>
</g>
<g >
<title>SwNumberTreeNode::GetLevelInListTree (1 samples, 0.21%)</title><rect x="685.4" y="197" width="2.5" height="15.0" fill="rgb(241,220,21)" rx="2" ry="2" />
<text  x="688.36" y="207.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="1029.3" y="165" width="5.0" height="15.0" fill="rgb(252,107,15)" rx="2" ry="2" />
<text  x="1032.32" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="687.9" y="165" width="2.5" height="15.0" fill="rgb(218,44,44)" rx="2" ry="2" />
<text  x="690.87" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="296.2" y="181" width="2.5" height="15.0" fill="rgb(252,101,35)" rx="2" ry="2" />
<text  x="299.21" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="303.7" y="181" width="2.6" height="15.0" fill="rgb(243,20,15)" rx="2" ry="2" />
<text  x="306.74" y="191.5" ></text>
</g>
<g >
<title>WhichRangesContainer::operator= (1 samples, 0.21%)</title><rect x="700.4" y="197" width="2.5" height="15.0" fill="rgb(237,166,52)" rx="2" ry="2" />
<text  x="703.43" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="17.5" y="181" width="2.5" height="15.0" fill="rgb(236,157,50)" rx="2" ry="2" />
<text  x="20.53" y="191.5" ></text>
</g>
<g >
<title>vcl::Font::SetFillColor (3 samples, 0.64%)</title><rect x="1129.7" y="197" width="7.6" height="15.0" fill="rgb(240,123,26)" rx="2" ry="2" />
<text  x="1132.74" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1006.7" y="165" width="2.5" height="15.0" fill="rgb(211,81,39)" rx="2" ry="2" />
<text  x="1009.72" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="788.3" y="181" width="2.5" height="15.0" fill="rgb(240,78,3)" rx="2" ry="2" />
<text  x="791.30" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="10.0" y="85" width="2.5" height="15.0" fill="rgb(211,186,51)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="92.9" y="165" width="2.5" height="15.0" fill="rgb(238,42,20)" rx="2" ry="2" />
<text  x="95.85" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="800.9" y="181" width="2.5" height="15.0" fill="rgb(214,216,28)" rx="2" ry="2" />
<text  x="803.85" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rtl::OUString, std::pair&lt;rtl::OUString const, unsigned short&gt;, std::allocator&lt;std::pair&lt;rtl::OUString const, unsigned short&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rtl::OUString&gt;, std::hash&lt;rtl::OUString&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.43%)</title><rect x="1029.3" y="197" width="5.0" height="15.0" fill="rgb(227,154,39)" rx="2" ry="2" />
<text  x="1032.32" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="404.2" y="165" width="2.5" height="15.0" fill="rgb(229,21,13)" rx="2" ry="2" />
<text  x="407.17" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.21%)</title><rect x="710.5" y="197" width="2.5" height="15.0" fill="rgb(243,172,53)" rx="2" ry="2" />
<text  x="713.47" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="348.9" y="165" width="2.5" height="15.0" fill="rgb(234,14,16)" rx="2" ry="2" />
<text  x="351.94" y="175.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="713.0" y="165" width="5.0" height="15.0" fill="rgb(220,188,4)" rx="2" ry="2" />
<text  x="715.98" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="846.0" y="133" width="2.6" height="15.0" fill="rgb(235,20,24)" rx="2" ry="2" />
<text  x="849.04" y="143.5" ></text>
</g>
<g >
<title>syscall (8 samples, 1.70%)</title><rect x="97.9" y="165" width="20.1" height="15.0" fill="rgb(248,130,24)" rx="2" ry="2" />
<text  x="100.87" y="175.5" ></text>
</g>
<g >
<title>SwDoc::CopyFormat (1 samples, 0.21%)</title><rect x="208.3" y="197" width="2.6" height="15.0" fill="rgb(229,59,27)" rx="2" ry="2" />
<text  x="211.34" y="207.5" ></text>
</g>
<g >
<title>syscall (5 samples, 1.06%)</title><rect x="672.8" y="165" width="12.6" height="15.0" fill="rgb(229,92,31)" rx="2" ry="2" />
<text  x="675.81" y="175.5" ></text>
</g>
<g >
<title>_int_malloc (3 samples, 0.64%)</title><rect x="926.4" y="181" width="7.5" height="15.0" fill="rgb(226,188,25)" rx="2" ry="2" />
<text  x="929.38" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="434.3" y="165" width="2.5" height="15.0" fill="rgb(213,227,21)" rx="2" ry="2" />
<text  x="437.30" y="175.5" ></text>
</g>
<g >
<title>bits_image_fetch_separable_convolution_affine_none_a8 (1 samples, 0.21%)</title><rect x="803.4" y="197" width="2.5" height="15.0" fill="rgb(222,28,19)" rx="2" ry="2" />
<text  x="806.36" y="207.5" ></text>
</g>
<g >
<title>ScInterpreter::PopDoubleRefOrSingleRef (1 samples, 0.21%)</title><rect x="381.6" y="197" width="2.5" height="15.0" fill="rgb(216,194,7)" rx="2" ry="2" />
<text  x="384.57" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="702.9" y="165" width="2.5" height="15.0" fill="rgb(254,129,47)" rx="2" ry="2" />
<text  x="705.94" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="253.5" y="181" width="2.5" height="15.0" fill="rgb(213,158,54)" rx="2" ry="2" />
<text  x="256.53" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="379.1" y="165" width="2.5" height="15.0" fill="rgb(222,33,15)" rx="2" ry="2" />
<text  x="382.06" y="175.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="780.8" y="165" width="5.0" height="15.0" fill="rgb(253,132,54)" rx="2" ry="2" />
<text  x="783.77" y="175.5" ></text>
</g>
<g >
<title>syscall (4 samples, 0.85%)</title><rect x="765.7" y="165" width="10.0" height="15.0" fill="rgb(214,154,27)" rx="2" ry="2" />
<text  x="768.70" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="700.4" y="181" width="2.5" height="15.0" fill="rgb(254,213,46)" rx="2" ry="2" />
<text  x="703.43" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="12.5" y="197" width="2.5" height="15.0" fill="rgb(218,157,16)" rx="2" ry="2" />
<text  x="15.51" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="758.2" y="165" width="2.5" height="15.0" fill="rgb(241,145,23)" rx="2" ry="2" />
<text  x="761.17" y="175.5" ></text>
</g>
<g >
<title>syscall (10 samples, 2.13%)</title><rect x="725.5" y="165" width="25.1" height="15.0" fill="rgb(215,15,3)" rx="2" ry="2" />
<text  x="728.53" y="175.5" >s..</text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="298.7" y="165" width="2.5" height="15.0" fill="rgb(241,53,41)" rx="2" ry="2" />
<text  x="301.72" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="896.3" y="181" width="5.0" height="15.0" fill="rgb(238,191,46)" rx="2" ry="2" />
<text  x="899.26" y="191.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (1 samples, 0.21%)</title><rect x="1099.6" y="197" width="2.5" height="15.0" fill="rgb(206,39,40)" rx="2" ry="2" />
<text  x="1102.62" y="207.5" ></text>
</g>
<g >
<title>ScInterpreter::CreateFormulaDoubleToken (1 samples, 0.21%)</title><rect x="386.6" y="165" width="2.5" height="15.0" fill="rgb(227,121,50)" rx="2" ry="2" />
<text  x="389.60" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1139.8" y="181" width="2.5" height="15.0" fill="rgb(224,188,53)" rx="2" ry="2" />
<text  x="1142.79" y="191.5" ></text>
</g>
<g >
<title>ScQueryCellIteratorBase&lt; (1 samples, 0.21%)</title><rect x="394.1" y="197" width="2.5" height="15.0" fill="rgb(232,65,6)" rx="2" ry="2" />
<text  x="397.13" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1077.0" y="181" width="2.5" height="15.0" fill="rgb(217,46,4)" rx="2" ry="2" />
<text  x="1080.02" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1077.0" y="165" width="2.5" height="15.0" fill="rgb(220,184,9)" rx="2" ry="2" />
<text  x="1080.02" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="401.7" y="181" width="2.5" height="15.0" fill="rgb(232,165,2)" rx="2" ry="2" />
<text  x="404.66" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="95.4" y="133" width="2.5" height="15.0" fill="rgb(230,151,3)" rx="2" ry="2" />
<text  x="98.36" y="143.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="710.5" y="165" width="2.5" height="15.0" fill="rgb(240,174,1)" rx="2" ry="2" />
<text  x="713.47" y="175.5" ></text>
</g>
<g >
<title>SfxPoolItemHolder::operator= (1 samples, 0.21%)</title><rect x="424.3" y="197" width="2.5" height="15.0" fill="rgb(252,120,46)" rx="2" ry="2" />
<text  x="427.26" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (2 samples, 0.43%)</title><rect x="1072.0" y="197" width="5.0" height="15.0" fill="rgb(219,20,30)" rx="2" ry="2" />
<text  x="1075.00" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1185.0" y="181" width="2.5" height="15.0" fill="rgb(229,187,32)" rx="2" ry="2" />
<text  x="1187.98" y="191.5" ></text>
</g>
<g >
<title>[coolforkit] (1 samples, 0.21%)</title><rect x="203.3" y="213" width="2.5" height="15.0" fill="rgb(223,73,31)" rx="2" ry="2" />
<text  x="206.32" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="230.9" y="197" width="2.5" height="15.0" fill="rgb(249,77,0)" rx="2" ry="2" />
<text  x="233.94" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1152.3" y="181" width="2.6" height="15.0" fill="rgb(212,205,44)" rx="2" ry="2" />
<text  x="1155.34" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="901.3" y="181" width="2.5" height="15.0" fill="rgb(214,44,35)" rx="2" ry="2" />
<text  x="904.28" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="808.4" y="165" width="2.5" height="15.0" fill="rgb(230,161,54)" rx="2" ry="2" />
<text  x="811.38" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="798.3" y="165" width="2.6" height="15.0" fill="rgb(225,17,39)" rx="2" ry="2" />
<text  x="801.34" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="439.3" y="165" width="2.5" height="15.0" fill="rgb(240,219,48)" rx="2" ry="2" />
<text  x="442.32" y="175.5" ></text>
</g>
<g >
<title>SwAttrIter::SeekAndChgAttrIter (1 samples, 0.21%)</title><rect x="451.9" y="197" width="2.5" height="15.0" fill="rgb(216,63,41)" rx="2" ry="2" />
<text  x="454.87" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="923.9" y="181" width="2.5" height="15.0" fill="rgb(244,149,51)" rx="2" ry="2" />
<text  x="926.87" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="404.2" y="181" width="2.5" height="15.0" fill="rgb(238,30,33)" rx="2" ry="2" />
<text  x="407.17" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1149.8" y="165" width="2.5" height="15.0" fill="rgb(206,59,35)" rx="2" ry="2" />
<text  x="1152.83" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="753.1" y="181" width="2.6" height="15.0" fill="rgb(210,9,47)" rx="2" ry="2" />
<text  x="756.15" y="191.5" ></text>
</g>
<g >
<title>ScInterpreter::ScMul (1 samples, 0.21%)</title><rect x="386.6" y="197" width="2.5" height="15.0" fill="rgb(229,19,25)" rx="2" ry="2" />
<text  x="389.60" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="120.5" y="181" width="2.5" height="15.0" fill="rgb(240,128,42)" rx="2" ry="2" />
<text  x="123.47" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (3 samples, 0.64%)</title><rect x="1142.3" y="181" width="7.5" height="15.0" fill="rgb(238,190,29)" rx="2" ry="2" />
<text  x="1145.30" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="42.6" y="149" width="2.5" height="15.0" fill="rgb(206,136,4)" rx="2" ry="2" />
<text  x="45.64" y="159.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="298.7" y="181" width="2.5" height="15.0" fill="rgb(241,207,7)" rx="2" ry="2" />
<text  x="301.72" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="981.6" y="165" width="2.5" height="15.0" fill="rgb(209,189,3)" rx="2" ry="2" />
<text  x="984.62" y="175.5" ></text>
</g>
<g >
<title>SwDocStyleSheetPool::Find (1 samples, 0.21%)</title><rect x="459.4" y="197" width="2.5" height="15.0" fill="rgb(236,142,54)" rx="2" ry="2" />
<text  x="462.40" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="710.5" y="181" width="2.5" height="15.0" fill="rgb(207,220,48)" rx="2" ry="2" />
<text  x="713.47" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="195.8" y="165" width="2.5" height="15.0" fill="rgb(239,173,40)" rx="2" ry="2" />
<text  x="198.79" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="228.4" y="197" width="2.5" height="15.0" fill="rgb(235,192,43)" rx="2" ry="2" />
<text  x="231.43" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="848.6" y="165" width="2.5" height="15.0" fill="rgb(211,62,49)" rx="2" ry="2" />
<text  x="851.55" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (4 samples, 0.85%)</title><rect x="1062.0" y="181" width="10.0" height="15.0" fill="rgb(232,33,17)" rx="2" ry="2" />
<text  x="1064.96" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (3 samples, 0.64%)</title><rect x="911.3" y="181" width="7.6" height="15.0" fill="rgb(220,128,12)" rx="2" ry="2" />
<text  x="914.32" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="695.4" y="165" width="2.5" height="15.0" fill="rgb(252,189,51)" rx="2" ry="2" />
<text  x="698.40" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="118.0" y="181" width="2.5" height="15.0" fill="rgb(217,150,32)" rx="2" ry="2" />
<text  x="120.96" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="366.5" y="181" width="2.5" height="15.0" fill="rgb(216,128,53)" rx="2" ry="2" />
<text  x="369.51" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="321.3" y="181" width="2.5" height="15.0" fill="rgb(228,66,3)" rx="2" ry="2" />
<text  x="324.32" y="191.5" ></text>
</g>
<g >
<title>[libmergedlo.so] (1 samples, 0.21%)</title><rect x="720.5" y="197" width="2.5" height="15.0" fill="rgb(219,18,37)" rx="2" ry="2" />
<text  x="723.51" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="175.7" y="181" width="5.0" height="15.0" fill="rgb(230,194,15)" rx="2" ry="2" />
<text  x="178.70" y="191.5" ></text>
</g>
<g >
<title>SwDoc::IsUsed (1 samples, 0.21%)</title><rect x="456.9" y="197" width="2.5" height="15.0" fill="rgb(253,181,50)" rx="2" ry="2" />
<text  x="459.89" y="207.5" ></text>
</g>
<g >
<title>syscall (3 samples, 0.64%)</title><rect x="1129.7" y="165" width="7.6" height="15.0" fill="rgb(234,141,20)" rx="2" ry="2" />
<text  x="1132.74" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="27.6" y="165" width="2.5" height="15.0" fill="rgb(223,73,52)" rx="2" ry="2" />
<text  x="30.57" y="175.5" ></text>
</g>
<g >
<title>ScColumn::GetCellCount (1 samples, 0.21%)</title><rect x="348.9" y="197" width="2.5" height="15.0" fill="rgb(229,191,0)" rx="2" ry="2" />
<text  x="351.94" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="938.9" y="181" width="2.5" height="15.0" fill="rgb(252,32,49)" rx="2" ry="2" />
<text  x="941.94" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (3 samples, 0.64%)</title><rect x="1046.9" y="181" width="7.5" height="15.0" fill="rgb(243,43,0)" rx="2" ry="2" />
<text  x="1049.89" y="191.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.21%)</title><rect x="1154.9" y="197" width="2.5" height="15.0" fill="rgb(246,78,53)" rx="2" ry="2" />
<text  x="1157.85" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="266.1" y="165" width="2.5" height="15.0" fill="rgb(207,99,41)" rx="2" ry="2" />
<text  x="269.09" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1016.8" y="165" width="2.5" height="15.0" fill="rgb(207,196,4)" rx="2" ry="2" />
<text  x="1019.77" y="175.5" ></text>
</g>
<g >
<title>ScTable::GetRowHeight (1 samples, 0.21%)</title><rect x="401.7" y="197" width="2.5" height="15.0" fill="rgb(245,111,39)" rx="2" ry="2" />
<text  x="404.66" y="207.5" ></text>
</g>
<g >
<title>linguistic::SpellCache::AddWord (1 samples, 0.21%)</title><rect x="35.1" y="197" width="2.5" height="15.0" fill="rgb(253,121,44)" rx="2" ry="2" />
<text  x="38.11" y="207.5" ></text>
</g>
<g >
<title>framework::StatusIndicatorInterfaceWrapper::setText (1 samples, 0.21%)</title><rect x="92.9" y="197" width="2.5" height="15.0" fill="rgb(238,129,54)" rx="2" ry="2" />
<text  x="95.85" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="92.9" y="181" width="2.5" height="15.0" fill="rgb(206,21,0)" rx="2" ry="2" />
<text  x="95.85" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="268.6" y="181" width="2.5" height="15.0" fill="rgb(248,178,20)" rx="2" ry="2" />
<text  x="271.60" y="191.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="705.4" y="165" width="5.1" height="15.0" fill="rgb(222,94,6)" rx="2" ry="2" />
<text  x="708.45" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="697.9" y="165" width="2.5" height="15.0" fill="rgb(221,182,5)" rx="2" ry="2" />
<text  x="700.91" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="409.2" y="165" width="2.5" height="15.0" fill="rgb(243,217,51)" rx="2" ry="2" />
<text  x="412.19" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="173.2" y="165" width="2.5" height="15.0" fill="rgb(205,10,11)" rx="2" ry="2" />
<text  x="176.19" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="424.3" y="181" width="2.5" height="15.0" fill="rgb(241,105,3)" rx="2" ry="2" />
<text  x="427.26" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="205.8" y="181" width="2.5" height="15.0" fill="rgb(242,52,17)" rx="2" ry="2" />
<text  x="208.83" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="323.8" y="149" width="2.5" height="15.0" fill="rgb(245,178,29)" rx="2" ry="2" />
<text  x="326.83" y="159.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@@GLIBC_2.2.5 (2 samples, 0.43%)</title><rect x="956.5" y="197" width="5.0" height="15.0" fill="rgb(227,229,4)" rx="2" ry="2" />
<text  x="959.51" y="207.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="775.7" y="165" width="5.1" height="15.0" fill="rgb(221,9,26)" rx="2" ry="2" />
<text  x="778.74" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="888.7" y="181" width="5.0" height="15.0" fill="rgb(220,167,6)" rx="2" ry="2" />
<text  x="891.72" y="191.5" ></text>
</g>
<g >
<title>syscall (3 samples, 0.64%)</title><rect x="1142.3" y="165" width="7.5" height="15.0" fill="rgb(248,20,38)" rx="2" ry="2" />
<text  x="1145.30" y="175.5" ></text>
</g>
<g >
<title>png_destroy_png_struct (1 samples, 0.21%)</title><rect x="95.4" y="165" width="2.5" height="15.0" fill="rgb(211,97,51)" rx="2" ry="2" />
<text  x="98.36" y="175.5" ></text>
</g>
<g >
<title>ScInterpreter::PushTempTokenWithoutError (1 samples, 0.21%)</title><rect x="384.1" y="197" width="2.5" height="15.0" fill="rgb(236,181,31)" rx="2" ry="2" />
<text  x="387.09" y="207.5" ></text>
</g>
<g >
<title>LanguageTag::LanguageTag (1 samples, 0.21%)</title><rect x="306.3" y="197" width="2.5" height="15.0" fill="rgb(234,174,52)" rx="2" ry="2" />
<text  x="309.26" y="207.5" ></text>
</g>
<g >
<title>ClipboardPartHandler::handlePart (1 samples, 0.21%)</title><rect x="1187.5" y="117" width="2.5" height="15.0" fill="rgb(211,180,46)" rx="2" ry="2" />
<text  x="1190.49" y="127.5" ></text>
</g>
<g >
<title>[libgcc_s.so.1] (1 samples, 0.21%)</title><rect x="62.7" y="197" width="2.5" height="15.0" fill="rgb(215,44,53)" rx="2" ry="2" />
<text  x="65.72" y="207.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="793.3" y="165" width="5.0" height="15.0" fill="rgb(254,104,24)" rx="2" ry="2" />
<text  x="796.32" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="193.3" y="181" width="2.5" height="15.0" fill="rgb(224,176,53)" rx="2" ry="2" />
<text  x="196.28" y="191.5" ></text>
</g>
<g >
<title>rtl_uString_alloc (1 samples, 0.21%)</title><rect x="981.6" y="197" width="2.5" height="15.0" fill="rgb(241,117,48)" rx="2" ry="2" />
<text  x="984.62" y="207.5" ></text>
</g>
<g >
<title>sw::DocumentStylePoolManager::IsPoolTextCollUsed (15 samples, 3.19%)</title><rect x="123.0" y="197" width="37.6" height="15.0" fill="rgb(237,207,47)" rx="2" ry="2" />
<text  x="125.98" y="207.5" >sw:..</text>
</g>
<g >
<title>SvNumberFormatter::ImpAdjustFormatCodeDefault (1 samples, 0.21%)</title><rect x="444.3" y="197" width="2.6" height="15.0" fill="rgb(249,128,30)" rx="2" ry="2" />
<text  x="447.34" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="411.7" y="181" width="2.5" height="15.0" fill="rgb(216,136,22)" rx="2" ry="2" />
<text  x="414.70" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="810.9" y="181" width="2.5" height="15.0" fill="rgb(253,59,53)" rx="2" ry="2" />
<text  x="813.89" y="191.5" ></text>
</g>
<g >
<title>linguistic::SpellCache::AddWord (1 samples, 0.21%)</title><rect x="848.6" y="197" width="2.5" height="15.0" fill="rgb(208,155,17)" rx="2" ry="2" />
<text  x="851.55" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="908.8" y="181" width="2.5" height="15.0" fill="rgb(242,74,8)" rx="2" ry="2" />
<text  x="911.81" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="826.0" y="181" width="2.5" height="15.0" fill="rgb(232,120,50)" rx="2" ry="2" />
<text  x="828.96" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="439.3" y="181" width="2.5" height="15.0" fill="rgb(234,18,2)" rx="2" ry="2" />
<text  x="442.32" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="753.1" y="165" width="2.6" height="15.0" fill="rgb(241,203,49)" rx="2" ry="2" />
<text  x="756.15" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1011.7" y="165" width="2.6" height="15.0" fill="rgb(231,113,0)" rx="2" ry="2" />
<text  x="1014.74" y="175.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.21%)</title><rect x="10.0" y="213" width="2.5" height="15.0" fill="rgb(227,67,32)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>sse2_composite_over_n_8_8888 (1 samples, 0.21%)</title><rect x="118.0" y="197" width="2.5" height="15.0" fill="rgb(254,229,49)" rx="2" ry="2" />
<text  x="120.96" y="207.5" ></text>
</g>
<g >
<title>StringVector::operator[] (1 samples, 0.21%)</title><rect x="439.3" y="197" width="2.5" height="15.0" fill="rgb(217,176,39)" rx="2" ry="2" />
<text  x="442.32" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (5 samples, 1.06%)</title><rect x="941.4" y="181" width="12.6" height="15.0" fill="rgb(249,192,23)" rx="2" ry="2" />
<text  x="944.45" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="386.6" y="117" width="2.5" height="15.0" fill="rgb(212,152,34)" rx="2" ry="2" />
<text  x="389.60" y="127.5" ></text>
</g>
<g >
<title>SwCache::Get (1 samples, 0.21%)</title><rect x="454.4" y="197" width="2.5" height="15.0" fill="rgb(207,109,33)" rx="2" ry="2" />
<text  x="457.38" y="207.5" ></text>
</g>
<g >
<title>mdds::__st::tree_builder&lt;mdds::flat_segment_tree&lt;int, unsigned short&gt; &gt;::build_tree_non_leaf (1 samples, 0.21%)</title><rect x="886.2" y="197" width="2.5" height="15.0" fill="rgb(219,137,36)" rx="2" ry="2" />
<text  x="889.21" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="374.0" y="181" width="5.1" height="15.0" fill="rgb(249,110,46)" rx="2" ry="2" />
<text  x="377.04" y="191.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.21%)</title><rect x="833.5" y="197" width="2.5" height="15.0" fill="rgb(244,169,43)" rx="2" ry="2" />
<text  x="836.49" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="258.6" y="197" width="5.0" height="15.0" fill="rgb(211,26,51)" rx="2" ry="2" />
<text  x="261.55" y="207.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_clone (1 samples, 0.21%)</title><rect x="1109.7" y="197" width="2.5" height="15.0" fill="rgb(233,128,7)" rx="2" ry="2" />
<text  x="1112.66" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="805.9" y="181" width="2.5" height="15.0" fill="rgb(249,119,23)" rx="2" ry="2" />
<text  x="808.87" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="77.8" y="165" width="2.5" height="15.0" fill="rgb(248,41,29)" rx="2" ry="2" />
<text  x="80.79" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="185.7" y="165" width="2.6" height="15.0" fill="rgb(230,1,35)" rx="2" ry="2" />
<text  x="188.74" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="414.2" y="165" width="2.5" height="15.0" fill="rgb(246,152,3)" rx="2" ry="2" />
<text  x="417.21" y="175.5" ></text>
</g>
<g >
<title>ScDocument::FetchTable (1 samples, 0.21%)</title><rect x="356.5" y="197" width="2.5" height="15.0" fill="rgb(252,122,22)" rx="2" ry="2" />
<text  x="359.47" y="207.5" ></text>
</g>
<g >
<title>deflate (1 samples, 0.21%)</title><rect x="95.4" y="181" width="2.5" height="15.0" fill="rgb(208,160,32)" rx="2" ry="2" />
<text  x="98.36" y="191.5" ></text>
</g>
<g >
<title>SwStyleSheetIterator::SwPoolFormatList::Append (1 samples, 0.21%)</title><rect x="168.2" y="181" width="2.5" height="15.0" fill="rgb(229,74,23)" rx="2" ry="2" />
<text  x="171.17" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1154.9" y="165" width="2.5" height="15.0" fill="rgb(217,135,27)" rx="2" ry="2" />
<text  x="1157.85" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="986.6" y="149" width="2.5" height="15.0" fill="rgb(213,121,11)" rx="2" ry="2" />
<text  x="989.64" y="159.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="75.3" y="181" width="2.5" height="15.0" fill="rgb(240,217,42)" rx="2" ry="2" />
<text  x="78.28" y="191.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="1112.2" y="197" width="5.0" height="15.0" fill="rgb(231,67,37)" rx="2" ry="2" />
<text  x="1115.17" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1041.9" y="181" width="2.5" height="15.0" fill="rgb(252,69,0)" rx="2" ry="2" />
<text  x="1044.87" y="191.5" ></text>
</g>
<g >
<title>fetch_pixel_b8g8r8 (1 samples, 0.21%)</title><rect x="836.0" y="197" width="2.5" height="15.0" fill="rgb(252,229,6)" rx="2" ry="2" />
<text  x="839.00" y="207.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.21%)</title><rect x="763.2" y="197" width="2.5" height="15.0" fill="rgb(253,155,40)" rx="2" ry="2" />
<text  x="766.19" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="808.4" y="181" width="2.5" height="15.0" fill="rgb(229,222,32)" rx="2" ry="2" />
<text  x="811.38" y="191.5" ></text>
</g>
<g >
<title>__GI_____strtoll_l_internal (1 samples, 0.21%)</title><rect x="750.6" y="197" width="2.5" height="15.0" fill="rgb(229,215,14)" rx="2" ry="2" />
<text  x="753.64" y="207.5" ></text>
</g>
<g >
<title>linguistic::GetLocaleDataWrapper (1 samples, 0.21%)</title><rect x="828.5" y="165" width="2.5" height="15.0" fill="rgb(233,211,27)" rx="2" ry="2" />
<text  x="831.47" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="803.4" y="165" width="2.5" height="15.0" fill="rgb(244,137,38)" rx="2" ry="2" />
<text  x="806.36" y="175.5" ></text>
</g>
<g >
<title>SwStyleSheetIterator::First (2 samples, 0.43%)</title><rect x="55.2" y="197" width="5.0" height="15.0" fill="rgb(252,223,35)" rx="2" ry="2" />
<text  x="58.19" y="207.5" ></text>
</g>
<g >
<title>rtl_uString_new (5 samples, 1.06%)</title><rect x="986.6" y="197" width="12.6" height="15.0" fill="rgb(241,125,25)" rx="2" ry="2" />
<text  x="989.64" y="207.5" ></text>
</g>
<g >
<title>rtl_ustr_indexOfChar_WithLength (1 samples, 0.21%)</title><rect x="1004.2" y="197" width="2.5" height="15.0" fill="rgb(243,61,25)" rx="2" ry="2" />
<text  x="1007.21" y="207.5" ></text>
</g>
<g >
<title>cppu::OWeakConnectionPoint::release (2 samples, 0.43%)</title><rect x="820.9" y="197" width="5.1" height="15.0" fill="rgb(250,27,26)" rx="2" ry="2" />
<text  x="823.94" y="207.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="20.0" y="165" width="5.1" height="15.0" fill="rgb(254,130,28)" rx="2" ry="2" />
<text  x="23.04" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="793.3" y="181" width="5.0" height="15.0" fill="rgb(223,77,36)" rx="2" ry="2" />
<text  x="796.32" y="191.5" ></text>
</g>
<g >
<title>syscall (84 samples, 17.87%)</title><rect x="461.9" y="165" width="210.9" height="15.0" fill="rgb(228,19,48)" rx="2" ry="2" />
<text  x="464.91" y="175.5" >syscall</text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="451.9" y="181" width="2.5" height="15.0" fill="rgb(228,132,37)" rx="2" ry="2" />
<text  x="454.87" y="191.5" ></text>
</g>
<g >
<title>i18npool::Transliteration_body::transliterateChar2Char (1 samples, 0.21%)</title><rect x="846.0" y="197" width="2.6" height="15.0" fill="rgb(240,43,8)" rx="2" ry="2" />
<text  x="849.04" y="207.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="188.3" y="165" width="5.0" height="15.0" fill="rgb(226,24,38)" rx="2" ry="2" />
<text  x="191.26" y="175.5" ></text>
</g>
<g >
<title>png_write_find_filter (6 samples, 1.28%)</title><rect x="328.9" y="181" width="15.0" height="15.0" fill="rgb(210,73,22)" rx="2" ry="2" />
<text  x="331.85" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="833.5" y="165" width="2.5" height="15.0" fill="rgb(216,178,23)" rx="2" ry="2" />
<text  x="836.49" y="175.5" ></text>
</g>
<g >
<title>SwStyleSheetIterator::First (3 samples, 0.64%)</title><rect x="273.6" y="181" width="7.5" height="15.0" fill="rgb(228,193,45)" rx="2" ry="2" />
<text  x="276.62" y="191.5" ></text>
</g>
<g >
<title>void rtl::str::stringbuffer_insert&lt;_rtl_uString, char16_t&gt; (1 samples, 0.21%)</title><rect x="831.0" y="181" width="2.5" height="15.0" fill="rgb(233,9,12)" rx="2" ry="2" />
<text  x="833.98" y="191.5" ></text>
</g>
<g >
<title>syscall (4 samples, 0.85%)</title><rect x="1062.0" y="165" width="10.0" height="15.0" fill="rgb(252,16,53)" rx="2" ry="2" />
<text  x="1064.96" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="168.2" y="149" width="2.5" height="15.0" fill="rgb(217,169,30)" rx="2" ry="2" />
<text  x="171.17" y="159.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1041.9" y="165" width="2.5" height="15.0" fill="rgb(217,157,43)" rx="2" ry="2" />
<text  x="1044.87" y="175.5" ></text>
</g>
<g >
<title>[libswlo.so] (7 samples, 1.49%)</title><rect x="233.4" y="213" width="17.6" height="15.0" fill="rgb(251,61,38)" rx="2" ry="2" />
<text  x="236.45" y="223.5" ></text>
</g>
<g >
<title>rtl_impl_convertUStringToString (1 samples, 0.21%)</title><rect x="961.5" y="197" width="2.5" height="15.0" fill="rgb(230,144,2)" rx="2" ry="2" />
<text  x="964.53" y="207.5" ></text>
</g>
<g >
<title>ParaPortionList::SafeGetObject (1 samples, 0.21%)</title><rect x="326.3" y="197" width="2.6" height="15.0" fill="rgb(231,136,17)" rx="2" ry="2" />
<text  x="329.34" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="986.6" y="165" width="2.5" height="15.0" fill="rgb(252,219,2)" rx="2" ry="2" />
<text  x="989.64" y="175.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="888.7" y="165" width="5.0" height="15.0" fill="rgb(215,31,42)" rx="2" ry="2" />
<text  x="891.72" y="175.5" ></text>
</g>
<g >
<title>SwTextFormatter::NewTextPortion (1 samples, 0.21%)</title><rect x="687.9" y="197" width="2.5" height="15.0" fill="rgb(223,199,32)" rx="2" ry="2" />
<text  x="690.87" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (10 samples, 2.13%)</title><rect x="725.5" y="181" width="25.1" height="15.0" fill="rgb(234,2,4)" rx="2" ry="2" />
<text  x="728.53" y="191.5" >s..</text>
</g>
<g >
<title>syscall (3 samples, 0.64%)</title><rect x="308.8" y="165" width="7.5" height="15.0" fill="rgb(244,18,15)" rx="2" ry="2" />
<text  x="311.77" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="886.2" y="165" width="2.5" height="15.0" fill="rgb(249,99,17)" rx="2" ry="2" />
<text  x="889.21" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="165.7" y="165" width="2.5" height="15.0" fill="rgb(219,176,26)" rx="2" ry="2" />
<text  x="168.66" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="838.5" y="165" width="2.5" height="15.0" fill="rgb(248,124,48)" rx="2" ry="2" />
<text  x="841.51" y="175.5" ></text>
</g>
<g >
<title>kitbroker (468 samples, 99.57%)</title><rect x="12.5" y="229" width="1175.0" height="15.0" fill="rgb(210,38,14)" rx="2" ry="2" />
<text  x="15.51" y="239.5" >kitbroker</text>
</g>
<g >
<title>sal::detail::textenc::convertUnicodeToChar (1 samples, 0.21%)</title><rect x="251.0" y="197" width="2.5" height="15.0" fill="rgb(219,64,54)" rx="2" ry="2" />
<text  x="254.02" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="820.9" y="181" width="5.1" height="15.0" fill="rgb(225,198,54)" rx="2" ry="2" />
<text  x="823.94" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (3 samples, 0.64%)</title><rect x="308.8" y="181" width="7.5" height="15.0" fill="rgb(214,166,46)" rx="2" ry="2" />
<text  x="311.77" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="848.6" y="181" width="2.5" height="15.0" fill="rgb(213,63,42)" rx="2" ry="2" />
<text  x="851.55" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="763.2" y="181" width="2.5" height="15.0" fill="rgb(254,92,43)" rx="2" ry="2" />
<text  x="766.19" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="30.1" y="165" width="2.5" height="15.0" fill="rgb(231,206,34)" rx="2" ry="2" />
<text  x="33.09" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1137.3" y="181" width="2.5" height="15.0" fill="rgb(205,212,10)" rx="2" ry="2" />
<text  x="1140.28" y="191.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.21%)</title><rect x="291.2" y="181" width="2.5" height="15.0" fill="rgb(233,15,1)" rx="2" ry="2" />
<text  x="294.19" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="883.7" y="181" width="2.5" height="15.0" fill="rgb(254,120,8)" rx="2" ry="2" />
<text  x="886.70" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.85%)</title><rect x="765.7" y="197" width="10.0" height="15.0" fill="rgb(235,210,31)" rx="2" ry="2" />
<text  x="768.70" y="207.5" ></text>
</g>
<g >
<title>ScInterpreter::MergeCalcConfig (1 samples, 0.21%)</title><rect x="379.1" y="197" width="2.5" height="15.0" fill="rgb(221,147,40)" rx="2" ry="2" />
<text  x="382.06" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="291.2" y="149" width="2.5" height="15.0" fill="rgb(247,162,30)" rx="2" ry="2" />
<text  x="294.19" y="159.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="419.2" y="181" width="2.5" height="15.0" fill="rgb(237,208,3)" rx="2" ry="2" />
<text  x="422.23" y="191.5" ></text>
</g>
<g >
<title>mdds::mtv::soa::multi_type_vector&lt;sc::CellStoreTraits&gt;::cbegin (1 samples, 0.21%)</title><rect x="903.8" y="197" width="2.5" height="15.0" fill="rgb(232,179,17)" rx="2" ry="2" />
<text  x="906.79" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="343.9" y="165" width="2.5" height="15.0" fill="rgb(237,46,33)" rx="2" ry="2" />
<text  x="346.91" y="175.5" ></text>
</g>
<g >
<title>bool OT::hb_accelerate_subtables_context_t::cache_func_to&lt;OT::Layout::GPOS_impl::MarkBasePosFormat1_2&lt;OT::Layout::SmallTypes&gt; &gt; (1 samples, 0.21%)</title><rect x="808.4" y="197" width="2.5" height="15.0" fill="rgb(245,19,23)" rx="2" ry="2" />
<text  x="811.38" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="359.0" y="165" width="2.5" height="15.0" fill="rgb(250,56,16)" rx="2" ry="2" />
<text  x="361.98" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="843.5" y="181" width="2.5" height="15.0" fill="rgb(229,28,36)" rx="2" ry="2" />
<text  x="846.53" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1014.3" y="181" width="2.5" height="15.0" fill="rgb(233,100,47)" rx="2" ry="2" />
<text  x="1017.26" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="454.4" y="165" width="2.5" height="15.0" fill="rgb(254,209,52)" rx="2" ry="2" />
<text  x="457.38" y="175.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (2 samples, 0.43%)</title><rect x="1117.2" y="197" width="5.0" height="15.0" fill="rgb(224,23,22)" rx="2" ry="2" />
<text  x="1120.19" y="207.5" ></text>
</g>
<g >
<title>SwStyleSheetIterator::First (1 samples, 0.21%)</title><rect x="195.8" y="181" width="2.5" height="15.0" fill="rgb(220,128,7)" rx="2" ry="2" />
<text  x="198.79" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="293.7" y="165" width="2.5" height="15.0" fill="rgb(242,181,2)" rx="2" ry="2" />
<text  x="296.70" y="175.5" ></text>
</g>
<g >
<title>main_arena (2 samples, 0.43%)</title><rect x="1152.3" y="213" width="5.1" height="15.0" fill="rgb(209,57,42)" rx="2" ry="2" />
<text  x="1155.34" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="780.8" y="181" width="5.0" height="15.0" fill="rgb(228,169,8)" rx="2" ry="2" />
<text  x="783.77" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="790.8" y="165" width="2.5" height="15.0" fill="rgb(242,74,48)" rx="2" ry="2" />
<text  x="793.81" y="175.5" ></text>
</g>
<g >
<title>syscall (6 samples, 1.28%)</title><rect x="328.9" y="149" width="15.0" height="15.0" fill="rgb(250,14,6)" rx="2" ry="2" />
<text  x="331.85" y="159.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="205.8" y="197" width="2.5" height="15.0" fill="rgb(218,159,13)" rx="2" ry="2" />
<text  x="208.83" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="421.7" y="181" width="2.6" height="15.0" fill="rgb(241,55,15)" rx="2" ry="2" />
<text  x="424.74" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="810.9" y="165" width="2.5" height="15.0" fill="rgb(206,160,9)" rx="2" ry="2" />
<text  x="813.89" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1154.9" y="181" width="2.5" height="15.0" fill="rgb(245,82,15)" rx="2" ry="2" />
<text  x="1157.85" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="170.7" y="165" width="2.5" height="15.0" fill="rgb(216,205,2)" rx="2" ry="2" />
<text  x="173.68" y="175.5" ></text>
</g>
<g >
<title>__GI___futex_abstimed_wait_cancelable64 (1 samples, 0.21%)</title><rect x="193.3" y="197" width="2.5" height="15.0" fill="rgb(223,88,48)" rx="2" ry="2" />
<text  x="196.28" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="384.1" y="165" width="2.5" height="15.0" fill="rgb(222,190,15)" rx="2" ry="2" />
<text  x="387.09" y="175.5" ></text>
</g>
<g >
<title>bits_image_fetch_pixel_separable_convolution (1 samples, 0.21%)</title><rect x="800.9" y="197" width="2.5" height="15.0" fill="rgb(228,155,26)" rx="2" ry="2" />
<text  x="803.85" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1139.8" y="165" width="2.5" height="15.0" fill="rgb(236,28,16)" rx="2" ry="2" />
<text  x="1142.79" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="359.0" y="181" width="2.5" height="15.0" fill="rgb(212,189,10)" rx="2" ry="2" />
<text  x="361.98" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="1029.3" y="181" width="5.0" height="15.0" fill="rgb(218,160,15)" rx="2" ry="2" />
<text  x="1032.32" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="788.3" y="165" width="2.5" height="15.0" fill="rgb(209,7,32)" rx="2" ry="2" />
<text  x="791.30" y="175.5" ></text>
</g>
<g >
<title>Impl_getTextEncodingData (1 samples, 0.21%)</title><rect x="303.7" y="197" width="2.6" height="15.0" fill="rgb(242,83,51)" rx="2" ry="2" />
<text  x="306.74" y="207.5" ></text>
</g>
<g >
<title>[coolforkit] (1 samples, 0.21%)</title><rect x="60.2" y="197" width="2.5" height="15.0" fill="rgb(211,180,29)" rx="2" ry="2" />
<text  x="63.21" y="207.5" ></text>
</g>
<g >
<title>DeltaGenerator::DeltaData::DeltaData (1 samples, 0.21%)</title><rect x="12.5" y="213" width="2.5" height="15.0" fill="rgb(251,70,38)" rx="2" ry="2" />
<text  x="15.51" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="208.3" y="181" width="2.6" height="15.0" fill="rgb(240,225,14)" rx="2" ry="2" />
<text  x="211.34" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="183.2" y="149" width="2.5" height="15.0" fill="rgb(246,160,24)" rx="2" ry="2" />
<text  x="186.23" y="159.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="763.2" y="165" width="2.5" height="15.0" fill="rgb(234,210,43)" rx="2" ry="2" />
<text  x="766.19" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="843.5" y="165" width="2.5" height="15.0" fill="rgb(240,8,23)" rx="2" ry="2" />
<text  x="846.53" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="406.7" y="181" width="2.5" height="15.0" fill="rgb(234,53,31)" rx="2" ry="2" />
<text  x="409.68" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="228.4" y="181" width="2.5" height="15.0" fill="rgb(228,174,53)" rx="2" ry="2" />
<text  x="231.43" y="191.5" ></text>
</g>
<g >
<title>SfxEntry::test_condition (1 samples, 0.21%)</title><rect x="414.2" y="197" width="2.5" height="15.0" fill="rgb(217,96,42)" rx="2" ry="2" />
<text  x="417.21" y="207.5" ></text>
</g>
<g >
<title>CFX_ScanlineCompositor::CompositePalBitmapLine (1 samples, 0.21%)</title><rect x="266.1" y="197" width="2.5" height="15.0" fill="rgb(224,24,40)" rx="2" ry="2" />
<text  x="269.09" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="266.1" y="181" width="2.5" height="15.0" fill="rgb(213,71,51)" rx="2" ry="2" />
<text  x="269.09" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="256.0" y="165" width="2.6" height="15.0" fill="rgb(224,8,7)" rx="2" ry="2" />
<text  x="259.04" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="984.1" y="165" width="2.5" height="15.0" fill="rgb(223,104,31)" rx="2" ry="2" />
<text  x="987.13" y="175.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (2 samples, 0.43%)</title><rect x="188.3" y="197" width="5.0" height="15.0" fill="rgb(224,196,35)" rx="2" ry="2" />
<text  x="191.26" y="207.5" ></text>
</g>
<g >
<title>SwStyleSheetIterator::SwPoolFormatList::Append (1 samples, 0.21%)</title><rect x="42.6" y="181" width="2.5" height="15.0" fill="rgb(234,87,7)" rx="2" ry="2" />
<text  x="45.64" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (7 samples, 1.49%)</title><rect x="964.0" y="181" width="17.6" height="15.0" fill="rgb(244,66,22)" rx="2" ry="2" />
<text  x="967.04" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="364.0" y="165" width="2.5" height="15.0" fill="rgb(249,6,49)" rx="2" ry="2" />
<text  x="367.00" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="268.6" y="165" width="2.5" height="15.0" fill="rgb(208,59,9)" rx="2" ry="2" />
<text  x="271.60" y="175.5" ></text>
</g>
<g >
<title>_dl_find_object (1 samples, 0.21%)</title><rect x="788.3" y="197" width="2.5" height="15.0" fill="rgb(210,168,35)" rx="2" ry="2" />
<text  x="791.30" y="207.5" ></text>
</g>
<g >
<title>mdds::flat_segment_tree&lt;int, unsigned short&gt;::search_tree_for_leaf_node (2 samples, 0.43%)</title><rect x="896.3" y="197" width="5.0" height="15.0" fill="rgb(238,186,16)" rx="2" ry="2" />
<text  x="899.26" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="180.7" y="149" width="2.5" height="15.0" fill="rgb(205,146,32)" rx="2" ry="2" />
<text  x="183.72" y="159.5" ></text>
</g>
<g >
<title>syscall (3 samples, 0.64%)</title><rect x="911.3" y="165" width="7.6" height="15.0" fill="rgb(240,39,35)" rx="2" ry="2" />
<text  x="914.32" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.21%)</title><rect x="205.8" y="213" width="2.5" height="15.0" fill="rgb(252,92,54)" rx="2" ry="2" />
<text  x="208.83" y="223.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="301.2" y="165" width="2.5" height="15.0" fill="rgb(240,7,39)" rx="2" ry="2" />
<text  x="304.23" y="175.5" ></text>
</g>
<g >
<title>[libgcc_s.so.1] (2 samples, 0.43%)</title><rect x="713.0" y="197" width="5.0" height="15.0" fill="rgb(205,186,13)" rx="2" ry="2" />
<text  x="715.98" y="207.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="1117.2" y="165" width="5.0" height="15.0" fill="rgb(226,123,42)" rx="2" ry="2" />
<text  x="1120.19" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="886.2" y="149" width="2.5" height="15.0" fill="rgb(227,226,31)" rx="2" ry="2" />
<text  x="889.21" y="159.5" ></text>
</g>
<g >
<title>SwModify::CallSwClientNotify (5 samples, 1.06%)</title><rect x="672.8" y="197" width="12.6" height="15.0" fill="rgb(223,198,50)" rx="2" ry="2" />
<text  x="675.81" y="207.5" ></text>
</g>
<g >
<title>com::sun::star::uno::BaseReference::operator== (1 samples, 0.21%)</title><rect x="30.1" y="197" width="2.5" height="15.0" fill="rgb(228,108,44)" rx="2" ry="2" />
<text  x="33.09" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="755.7" y="181" width="2.5" height="15.0" fill="rgb(242,87,27)" rx="2" ry="2" />
<text  x="758.66" y="191.5" ></text>
</g>
<g >
<title>adler32_z (2 samples, 0.43%)</title><rect x="87.8" y="197" width="5.1" height="15.0" fill="rgb(254,206,0)" rx="2" ry="2" />
<text  x="90.83" y="207.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="160.6" y="149" width="5.1" height="15.0" fill="rgb(228,111,30)" rx="2" ry="2" />
<text  x="163.64" y="159.5" ></text>
</g>
<g >
<title>boost::container::vec_iterator&lt;int*, false&gt; boost::container::vector&lt;int, boost::container::small_vector_allocator&lt;int, boost::container::new_allocator&lt;void&gt;, void&gt;, void&gt;::priv_insert_forward_range_no_capacity&lt;boost::container::dtl::insert_emplace_proxy&lt;boost::container::small_vector_allocator&lt;int, boost::container::new_allocator&lt;void&gt;, void&gt;, int const&amp;&gt; &gt; (1 samples, 0.21%)</title><rect x="810.9" y="197" width="2.5" height="15.0" fill="rgb(220,50,29)" rx="2" ry="2" />
<text  x="813.89" y="207.5" ></text>
</g>
<g >
<title>[[heap]] (8 samples, 1.70%)</title><rect x="20.0" y="213" width="20.1" height="15.0" fill="rgb(235,124,31)" rx="2" ry="2" />
<text  x="23.04" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="369.0" y="181" width="2.5" height="15.0" fill="rgb(247,158,30)" rx="2" ry="2" />
<text  x="372.02" y="191.5" ></text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 0.21%)</title><rect x="1187.5" y="53" width="2.5" height="15.0" fill="rgb(233,197,36)" rx="2" ry="2" />
<text  x="1190.49" y="63.5" ></text>
</g>
<g >
<title>syscall (6 samples, 1.28%)</title><rect x="1084.6" y="181" width="15.0" height="15.0" fill="rgb(213,215,24)" rx="2" ry="2" />
<text  x="1087.55" y="191.5" ></text>
</g>
<g >
<title>LanguageTagImpl::isIsoLocale (1 samples, 0.21%)</title><rect x="316.3" y="197" width="2.5" height="15.0" fill="rgb(212,153,29)" rx="2" ry="2" />
<text  x="319.30" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (84 samples, 17.87%)</title><rect x="461.9" y="181" width="210.9" height="15.0" fill="rgb(237,220,28)" rx="2" ry="2" />
<text  x="464.91" y="191.5" >std::deque&lt;net::AsyncDNS::L..</text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (7 samples, 1.49%)</title><rect x="233.4" y="197" width="17.6" height="15.0" fill="rgb(211,185,18)" rx="2" ry="2" />
<text  x="236.45" y="207.5" ></text>
</g>
<g >
<title>CPDF_Dictionary::~CPDF_Dictionary (1 samples, 0.21%)</title><rect x="268.6" y="197" width="2.5" height="15.0" fill="rgb(234,215,16)" rx="2" ry="2" />
<text  x="271.60" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="356.5" y="181" width="2.5" height="15.0" fill="rgb(240,143,26)" rx="2" ry="2" />
<text  x="359.47" y="191.5" ></text>
</g>
<g >
<title>SfxItemSet::Equals (1 samples, 0.21%)</title><rect x="173.2" y="197" width="2.5" height="15.0" fill="rgb(234,65,0)" rx="2" ry="2" />
<text  x="176.19" y="207.5" ></text>
</g>
<g >
<title>SwStyleSheetIterator::First (1 samples, 0.21%)</title><rect x="180.7" y="181" width="2.5" height="15.0" fill="rgb(224,100,8)" rx="2" ry="2" />
<text  x="183.72" y="191.5" ></text>
</g>
<g >
<title>GenericSalLayout::~GenericSalLayout (1 samples, 0.21%)</title><rect x="291.2" y="197" width="2.5" height="15.0" fill="rgb(232,12,0)" rx="2" ry="2" />
<text  x="294.19" y="207.5" ></text>
</g>
<g >
<title>SfxItemPool::FindItemSurrogate (1 samples, 0.21%)</title><rect x="25.1" y="197" width="2.5" height="15.0" fill="rgb(241,135,29)" rx="2" ry="2" />
<text  x="28.06" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="700.4" y="165" width="2.5" height="15.0" fill="rgb(210,228,30)" rx="2" ry="2" />
<text  x="703.43" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="203.3" y="197" width="2.5" height="15.0" fill="rgb(223,104,16)" rx="2" ry="2" />
<text  x="206.32" y="207.5" ></text>
</g>
<g >
<title>SfxInterface::GetSlot (1 samples, 0.21%)</title><rect x="416.7" y="197" width="2.5" height="15.0" fill="rgb(227,53,48)" rx="2" ry="2" />
<text  x="419.72" y="207.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="813.4" y="165" width="5.0" height="15.0" fill="rgb(244,187,2)" rx="2" ry="2" />
<text  x="816.40" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="723.0" y="149" width="2.5" height="15.0" fill="rgb(210,221,22)" rx="2" ry="2" />
<text  x="726.02" y="159.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="35.1" y="181" width="2.5" height="15.0" fill="rgb(217,73,36)" rx="2" ry="2" />
<text  x="38.11" y="191.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.21%)</title><rect x="755.7" y="197" width="2.5" height="15.0" fill="rgb(226,82,42)" rx="2" ry="2" />
<text  x="758.66" y="207.5" ></text>
</g>
<g >
<title>OutputDevice::DrawRect (1 samples, 0.21%)</title><rect x="321.3" y="197" width="2.5" height="15.0" fill="rgb(238,159,54)" rx="2" ry="2" />
<text  x="324.32" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="185.7" y="181" width="2.6" height="15.0" fill="rgb(214,125,8)" rx="2" ry="2" />
<text  x="188.74" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (1 samples, 0.21%)</title><rect x="120.5" y="197" width="2.5" height="15.0" fill="rgb(234,116,51)" rx="2" ry="2" />
<text  x="123.47" y="207.5" ></text>
</g>
<g >
<title>SfxItemPool::Delete (1 samples, 0.21%)</title><rect x="419.2" y="197" width="2.5" height="15.0" fill="rgb(230,166,27)" rx="2" ry="2" />
<text  x="422.23" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="414.2" y="181" width="2.5" height="15.0" fill="rgb(240,67,53)" rx="2" ry="2" />
<text  x="417.21" y="191.5" ></text>
</g>
<g >
<title>mdds::mtv::soa::detail::iterator_updater&lt;mdds::mtv::soa::multi_type_vector&lt;sc::CellStoreTraits&gt;::const_iterator_trait&gt;::inc (1 samples, 0.21%)</title><rect x="901.3" y="197" width="2.5" height="15.0" fill="rgb(240,118,30)" rx="2" ry="2" />
<text  x="904.28" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="818.4" y="181" width="2.5" height="15.0" fill="rgb(212,129,18)" rx="2" ry="2" />
<text  x="821.43" y="191.5" ></text>
</g>
<g >
<title>rtl_uString_acquire (7 samples, 1.49%)</title><rect x="964.0" y="197" width="17.6" height="15.0" fill="rgb(211,68,10)" rx="2" ry="2" />
<text  x="967.04" y="207.5" ></text>
</g>
<g >
<title>ScFlatUInt16RowSegments::getRangeData (1 samples, 0.21%)</title><rect x="364.0" y="197" width="2.5" height="15.0" fill="rgb(227,78,14)" rx="2" ry="2" />
<text  x="367.00" y="207.5" ></text>
</g>
<g >
<title>SwTextFormatColl::SwClientNotify (1 samples, 0.21%)</title><rect x="183.2" y="181" width="2.5" height="15.0" fill="rgb(211,187,52)" rx="2" ry="2" />
<text  x="186.23" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (4 samples, 0.85%)</title><rect x="765.7" y="181" width="10.0" height="15.0" fill="rgb(231,11,8)" rx="2" ry="2" />
<text  x="768.70" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="326.3" y="181" width="2.6" height="15.0" fill="rgb(222,212,13)" rx="2" ry="2" />
<text  x="329.34" y="191.5" ></text>
</g>
<g >
<title>bits_image_fetch_separable_convolution_affine_pad_a8 (1 samples, 0.21%)</title><rect x="805.9" y="197" width="2.5" height="15.0" fill="rgb(240,20,2)" rx="2" ry="2" />
<text  x="808.87" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="436.8" y="181" width="2.5" height="15.0" fill="rgb(228,64,1)" rx="2" ry="2" />
<text  x="439.81" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="379.1" y="181" width="2.5" height="15.0" fill="rgb(253,222,50)" rx="2" ry="2" />
<text  x="382.06" y="191.5" ></text>
</g>
<g >
<title>_int_malloc (3 samples, 0.64%)</title><rect x="80.3" y="197" width="7.5" height="15.0" fill="rgb(218,3,26)" rx="2" ry="2" />
<text  x="83.30" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="893.7" y="165" width="2.6" height="15.0" fill="rgb(208,44,7)" rx="2" ry="2" />
<text  x="896.74" y="175.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="956.5" y="165" width="5.0" height="15.0" fill="rgb(214,158,45)" rx="2" ry="2" />
<text  x="959.51" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="459.4" y="181" width="2.5" height="15.0" fill="rgb(230,164,29)" rx="2" ry="2" />
<text  x="462.40" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="981.6" y="149" width="2.5" height="15.0" fill="rgb(254,215,43)" rx="2" ry="2" />
<text  x="984.62" y="159.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="286.2" y="165" width="5.0" height="15.0" fill="rgb(229,184,42)" rx="2" ry="2" />
<text  x="289.17" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="316.3" y="165" width="2.5" height="15.0" fill="rgb(241,81,32)" rx="2" ry="2" />
<text  x="319.30" y="175.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="223.4" y="181" width="5.0" height="15.0" fill="rgb(206,109,18)" rx="2" ry="2" />
<text  x="226.40" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="346.4" y="181" width="2.5" height="15.0" fill="rgb(222,216,53)" rx="2" ry="2" />
<text  x="349.43" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="168.2" y="165" width="2.5" height="15.0" fill="rgb(238,187,49)" rx="2" ry="2" />
<text  x="171.17" y="175.5" ></text>
</g>
<g >
<title>[anon] (13 samples, 2.77%)</title><rect x="170.7" y="213" width="32.6" height="15.0" fill="rgb(219,61,32)" rx="2" ry="2" />
<text  x="173.68" y="223.5" >[a..</text>
</g>
<g >
<title>cppu::_copyConstructAny (1 samples, 0.21%)</title><rect x="831.0" y="197" width="2.5" height="15.0" fill="rgb(239,194,47)" rx="2" ry="2" />
<text  x="833.98" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1044.4" y="165" width="2.5" height="15.0" fill="rgb(214,197,4)" rx="2" ry="2" />
<text  x="1047.38" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="697.9" y="181" width="2.5" height="15.0" fill="rgb(207,193,33)" rx="2" ry="2" />
<text  x="700.91" y="191.5" ></text>
</g>
<g >
<title>SwModify::CallSwClientNotify (5 samples, 1.06%)</title><rect x="42.6" y="197" width="12.6" height="15.0" fill="rgb(234,211,35)" rx="2" ry="2" />
<text  x="45.64" y="207.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (4 samples, 0.85%)</title><rect x="65.2" y="197" width="10.1" height="15.0" fill="rgb(219,105,7)" rx="2" ry="2" />
<text  x="68.23" y="207.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="374.0" y="165" width="5.1" height="15.0" fill="rgb(226,147,42)" rx="2" ry="2" />
<text  x="377.04" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="434.3" y="181" width="2.5" height="15.0" fill="rgb(233,185,52)" rx="2" ry="2" />
<text  x="437.30" y="191.5" ></text>
</g>
<g >
<title>syscall (15 samples, 3.19%)</title><rect x="123.0" y="165" width="37.6" height="15.0" fill="rgb(207,82,14)" rx="2" ry="2" />
<text  x="125.98" y="175.5" >sys..</text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="695.4" y="181" width="2.5" height="15.0" fill="rgb(208,111,36)" rx="2" ry="2" />
<text  x="698.40" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="281.1" y="181" width="2.6" height="15.0" fill="rgb(243,77,24)" rx="2" ry="2" />
<text  x="284.15" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1014.3" y="165" width="2.5" height="15.0" fill="rgb(211,120,3)" rx="2" ry="2" />
<text  x="1017.26" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="798.3" y="181" width="2.6" height="15.0" fill="rgb(229,32,20)" rx="2" ry="2" />
<text  x="801.34" y="191.5" ></text>
</g>
<g >
<title>SvxFont::QuickGetTextSize (1 samples, 0.21%)</title><rect x="1182.5" y="197" width="2.5" height="15.0" fill="rgb(230,171,28)" rx="2" ry="2" />
<text  x="1185.47" y="207.5" ></text>
</g>
<g >
<title>mdds::flat_segment_tree&lt;int, unsigned short&gt;::search_impl (1 samples, 0.21%)</title><rect x="893.7" y="197" width="2.6" height="15.0" fill="rgb(216,46,7)" rx="2" ry="2" />
<text  x="896.74" y="207.5" ></text>
</g>
<g >
<title>ScInterpreter::PushDouble (1 samples, 0.21%)</title><rect x="386.6" y="181" width="2.5" height="15.0" fill="rgb(219,139,44)" rx="2" ry="2" />
<text  x="389.60" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="401.7" y="165" width="2.5" height="15.0" fill="rgb(237,19,10)" rx="2" ry="2" />
<text  x="404.66" y="175.5" ></text>
</g>
<g >
<title>websrv_poll (1 samples, 0.21%)</title><rect x="1187.5" y="229" width="2.5" height="15.0" fill="rgb(218,19,35)" rx="2" ry="2" />
<text  x="1190.49" y="239.5" ></text>
</g>
<g >
<title>[libmergedlo.so] (5 samples, 1.06%)</title><rect x="208.3" y="213" width="12.6" height="15.0" fill="rgb(224,202,22)" rx="2" ry="2" />
<text  x="211.34" y="223.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="416.7" y="165" width="2.5" height="15.0" fill="rgb(205,204,44)" rx="2" ry="2" />
<text  x="419.72" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="444.3" y="181" width="2.6" height="15.0" fill="rgb(210,229,22)" rx="2" ry="2" />
<text  x="447.34" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1004.2" y="165" width="2.5" height="15.0" fill="rgb(247,115,24)" rx="2" ry="2" />
<text  x="1007.21" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="394.1" y="165" width="2.5" height="15.0" fill="rgb(212,59,15)" rx="2" ry="2" />
<text  x="397.13" y="175.5" ></text>
</g>
<g >
<title>vtable for SvxShapeText (1 samples, 0.21%)</title><rect x="1182.5" y="213" width="2.5" height="15.0" fill="rgb(249,160,18)" rx="2" ry="2" />
<text  x="1185.47" y="223.5" ></text>
</g>
<g >
<title>png_read_filter_row (1 samples, 0.21%)</title><rect x="938.9" y="197" width="2.5" height="15.0" fill="rgb(215,159,43)" rx="2" ry="2" />
<text  x="941.94" y="207.5" ></text>
</g>
<g >
<title>docbroker (1 samples, 0.21%)</title><rect x="10.0" y="229" width="2.5" height="15.0" fill="rgb(215,183,7)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="1072.0" y="181" width="5.0" height="15.0" fill="rgb(219,98,16)" rx="2" ry="2" />
<text  x="1075.00" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="323.8" y="133" width="2.5" height="15.0" fill="rgb(218,82,18)" rx="2" ry="2" />
<text  x="326.83" y="143.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="40.1" y="181" width="2.5" height="15.0" fill="rgb(224,130,23)" rx="2" ry="2" />
<text  x="43.13" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="17.5" y="197" width="2.5" height="15.0" fill="rgb(218,79,51)" rx="2" ry="2" />
<text  x="20.53" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="381.6" y="181" width="2.5" height="15.0" fill="rgb(235,171,14)" rx="2" ry="2" />
<text  x="384.57" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="386.6" y="133" width="2.5" height="15.0" fill="rgb(219,94,38)" rx="2" ry="2" />
<text  x="389.60" y="143.5" ></text>
</g>
<g >
<title>syscall (4 samples, 0.85%)</title><rect x="989.1" y="165" width="10.1" height="15.0" fill="rgb(238,139,32)" rx="2" ry="2" />
<text  x="992.15" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="760.7" y="149" width="2.5" height="15.0" fill="rgb(235,202,3)" rx="2" ry="2" />
<text  x="763.68" y="159.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="1079.5" y="165" width="5.1" height="15.0" fill="rgb(213,158,18)" rx="2" ry="2" />
<text  x="1082.53" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="384.1" y="181" width="2.5" height="15.0" fill="rgb(245,198,1)" rx="2" ry="2" />
<text  x="387.09" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1109.7" y="181" width="2.5" height="15.0" fill="rgb(216,141,19)" rx="2" ry="2" />
<text  x="1112.66" y="191.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="258.6" y="181" width="5.0" height="15.0" fill="rgb(241,66,47)" rx="2" ry="2" />
<text  x="261.55" y="191.5" ></text>
</g>
<g >
<title>bits_image_fetch_separable_convolution_affine_none_a8 (1 samples, 0.21%)</title><rect x="220.9" y="197" width="2.5" height="15.0" fill="rgb(213,32,41)" rx="2" ry="2" />
<text  x="223.89" y="207.5" ></text>
</g>
<g >
<title>_int_malloc (3 samples, 0.64%)</title><rect x="790.8" y="197" width="7.5" height="15.0" fill="rgb(211,176,15)" rx="2" ry="2" />
<text  x="793.81" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (3 samples, 0.64%)</title><rect x="926.4" y="165" width="7.5" height="15.0" fill="rgb(221,76,50)" rx="2" ry="2" />
<text  x="929.38" y="175.5" ></text>
</g>
<g >
<title>[libuno_cppu.so.3] (2 samples, 0.43%)</title><rect x="251.0" y="213" width="5.0" height="15.0" fill="rgb(234,16,37)" rx="2" ry="2" />
<text  x="254.02" y="223.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="195.8" y="149" width="2.5" height="15.0" fill="rgb(251,123,4)" rx="2" ry="2" />
<text  x="198.79" y="159.5" ></text>
</g>
<g >
<title>hb_ot_get_variation_glyph (1 samples, 0.21%)</title><rect x="838.5" y="197" width="2.5" height="15.0" fill="rgb(210,184,0)" rx="2" ry="2" />
<text  x="841.51" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="813.4" y="181" width="5.0" height="15.0" fill="rgb(228,213,31)" rx="2" ry="2" />
<text  x="816.40" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="690.4" y="181" width="2.5" height="15.0" fill="rgb(229,177,0)" rx="2" ry="2" />
<text  x="693.38" y="191.5" ></text>
</g>
<g >
<title>SfxBroadcaster::ForAllListeners (1 samples, 0.21%)</title><rect x="411.7" y="197" width="2.5" height="15.0" fill="rgb(251,182,16)" rx="2" ry="2" />
<text  x="414.70" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="283.7" y="165" width="2.5" height="15.0" fill="rgb(220,215,30)" rx="2" ry="2" />
<text  x="286.66" y="175.5" ></text>
</g>
<g >
<title>syscall (3 samples, 0.64%)</title><rect x="1034.3" y="165" width="7.6" height="15.0" fill="rgb(231,48,21)" rx="2" ry="2" />
<text  x="1037.34" y="175.5" ></text>
</g>
<g >
<title>ScPatternAttr::operator== (2 samples, 0.43%)</title><rect x="389.1" y="197" width="5.0" height="15.0" fill="rgb(225,164,47)" rx="2" ry="2" />
<text  x="392.11" y="207.5" ></text>
</g>
<g >
<title>void rtl::str::newReplaceStrAt&lt;_rtl_uString, char16_t&gt; (1 samples, 0.21%)</title><rect x="323.8" y="165" width="2.5" height="15.0" fill="rgb(230,218,49)" rx="2" ry="2" />
<text  x="326.83" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="921.4" y="165" width="2.5" height="15.0" fill="rgb(252,101,5)" rx="2" ry="2" />
<text  x="924.36" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="846.0" y="149" width="2.6" height="15.0" fill="rgb(209,132,21)" rx="2" ry="2" />
<text  x="849.04" y="159.5" ></text>
</g>
<g >
<title>SwTextNode::IsAutoCompleteWordDirty (1 samples, 0.21%)</title><rect x="695.4" y="197" width="2.5" height="15.0" fill="rgb(236,78,30)" rx="2" ry="2" />
<text  x="698.40" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="263.6" y="165" width="2.5" height="15.0" fill="rgb(243,167,16)" rx="2" ry="2" />
<text  x="266.57" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="369.0" y="165" width="2.5" height="15.0" fill="rgb(246,216,41)" rx="2" ry="2" />
<text  x="372.02" y="175.5" ></text>
</g>
<g >
<title>WriteImplFont (1 samples, 0.21%)</title><rect x="702.9" y="197" width="2.5" height="15.0" fill="rgb(247,179,33)" rx="2" ry="2" />
<text  x="705.94" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="25.1" y="165" width="2.5" height="15.0" fill="rgb(213,157,32)" rx="2" ry="2" />
<text  x="28.06" y="175.5" ></text>
</g>
<g >
<title>SwXMLExport::CreateFontAutoStylePool (1 samples, 0.21%)</title><rect x="697.9" y="197" width="2.5" height="15.0" fill="rgb(215,80,10)" rx="2" ry="2" />
<text  x="700.91" y="207.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="446.9" y="165" width="5.0" height="15.0" fill="rgb(210,211,26)" rx="2" ry="2" />
<text  x="449.85" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="687.9" y="181" width="2.5" height="15.0" fill="rgb(220,74,9)" rx="2" ry="2" />
<text  x="690.87" y="191.5" ></text>
</g>
<g >
<title>ScFlatBoolColSegments::getRangeData (1 samples, 0.21%)</title><rect x="361.5" y="197" width="2.5" height="15.0" fill="rgb(249,90,30)" rx="2" ry="2" />
<text  x="364.49" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="263.6" y="181" width="2.5" height="15.0" fill="rgb(207,201,35)" rx="2" ry="2" />
<text  x="266.57" y="191.5" ></text>
</g>
<g >
<title>sendmsg@plt (1 samples, 0.21%)</title><rect x="1011.7" y="197" width="2.6" height="15.0" fill="rgb(236,188,33)" rx="2" ry="2" />
<text  x="1014.74" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="961.5" y="181" width="2.5" height="15.0" fill="rgb(237,146,2)" rx="2" ry="2" />
<text  x="964.53" y="191.5" ></text>
</g>
<g >
<title>ScDocument::HasTable (1 samples, 0.21%)</title><rect x="359.0" y="197" width="2.5" height="15.0" fill="rgb(243,101,30)" rx="2" ry="2" />
<text  x="361.98" y="207.5" ></text>
</g>
<g >
<title>ScFormulaCell::GetErrorOrValue (1 samples, 0.21%)</title><rect x="366.5" y="197" width="2.5" height="15.0" fill="rgb(230,142,33)" rx="2" ry="2" />
<text  x="369.51" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="411.7" y="165" width="2.5" height="15.0" fill="rgb(248,161,12)" rx="2" ry="2" />
<text  x="414.70" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;short, short, std::_Identity&lt;short&gt;, std::less&lt;short&gt;, std::allocator&lt;short&gt; &gt;::erase (2 samples, 0.43%)</title><rect x="1056.9" y="197" width="5.1" height="15.0" fill="rgb(226,158,34)" rx="2" ry="2" />
<text  x="1059.94" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="790.8" y="149" width="2.5" height="15.0" fill="rgb(235,223,48)" rx="2" ry="2" />
<text  x="793.81" y="159.5" ></text>
</g>
<g >
<title>ScInterpreter::CreateFormulaDoubleToken (2 samples, 0.43%)</title><rect x="374.0" y="197" width="5.1" height="15.0" fill="rgb(212,140,51)" rx="2" ry="2" />
<text  x="377.04" y="207.5" ></text>
</g>
<g >
<title>SocketPoll::poll (1 samples, 0.21%)</title><rect x="10.0" y="149" width="2.5" height="15.0" fill="rgb(206,111,16)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="1102.1" y="165" width="5.0" height="15.0" fill="rgb(220,166,13)" rx="2" ry="2" />
<text  x="1105.13" y="175.5" ></text>
</g>
<g >
<title>pthread_attr_destroy@plt (1 samples, 0.21%)</title><rect x="37.6" y="197" width="2.5" height="15.0" fill="rgb(212,7,24)" rx="2" ry="2" />
<text  x="40.62" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1182.5" y="181" width="2.5" height="15.0" fill="rgb(254,59,29)" rx="2" ry="2" />
<text  x="1185.47" y="191.5" ></text>
</g>
<g >
<title>SwTextFrame::GetDoc (1 samples, 0.21%)</title><rect x="690.4" y="197" width="2.5" height="15.0" fill="rgb(223,180,24)" rx="2" ry="2" />
<text  x="693.38" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="446.9" y="181" width="5.0" height="15.0" fill="rgb(253,90,2)" rx="2" ry="2" />
<text  x="449.85" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="165.7" y="149" width="2.5" height="15.0" fill="rgb(224,105,18)" rx="2" ry="2" />
<text  x="168.66" y="159.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="75.3" y="165" width="2.5" height="15.0" fill="rgb(223,195,1)" rx="2" ry="2" />
<text  x="78.28" y="175.5" ></text>
</g>
<g >
<title>LanguageTag::getImpl (2 samples, 0.43%)</title><rect x="20.0" y="197" width="5.1" height="15.0" fill="rgb(223,139,53)" rx="2" ry="2" />
<text  x="23.04" y="207.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.43%)</title><rect x="775.7" y="197" width="5.1" height="15.0" fill="rgb(243,121,7)" rx="2" ry="2" />
<text  x="778.74" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="818.4" y="165" width="2.5" height="15.0" fill="rgb(250,51,14)" rx="2" ry="2" />
<text  x="821.43" y="175.5" ></text>
</g>
<g >
<title>i18npool::BreakIteratorImpl::isEndWord (1 samples, 0.21%)</title><rect x="841.0" y="197" width="2.5" height="15.0" fill="rgb(223,102,20)" rx="2" ry="2" />
<text  x="844.02" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="918.9" y="181" width="2.5" height="15.0" fill="rgb(253,63,17)" rx="2" ry="2" />
<text  x="921.85" y="191.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="389.1" y="165" width="5.0" height="15.0" fill="rgb(246,213,5)" rx="2" ry="2" />
<text  x="392.11" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="456.9" y="165" width="2.5" height="15.0" fill="rgb(243,228,13)" rx="2" ry="2" />
<text  x="459.89" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="193.3" y="165" width="2.5" height="15.0" fill="rgb(241,187,46)" rx="2" ry="2" />
<text  x="196.28" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1026.8" y="181" width="2.5" height="15.0" fill="rgb(215,122,28)" rx="2" ry="2" />
<text  x="1029.81" y="191.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (10 samples, 2.13%)</title><rect x="725.5" y="197" width="25.1" height="15.0" fill="rgb(254,61,43)" rx="2" ry="2" />
<text  x="728.53" y="207.5" >[..</text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="1102.1" y="181" width="5.0" height="15.0" fill="rgb(224,140,32)" rx="2" ry="2" />
<text  x="1105.13" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="293.7" y="181" width="2.5" height="15.0" fill="rgb(230,18,5)" rx="2" ry="2" />
<text  x="296.70" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="396.6" y="181" width="5.1" height="15.0" fill="rgb(229,9,19)" rx="2" ry="2" />
<text  x="399.64" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt;, std::pair&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt; const, unsigned int&gt;, std::allocator&lt;std::pair&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt; const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt; &gt;, std::hash&lt;std::pair&lt;SfxStyleFamily, rtl::OUString&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (1 samples, 0.21%)</title><rect x="1041.9" y="197" width="2.5" height="15.0" fill="rgb(213,108,23)" rx="2" ry="2" />
<text  x="1044.87" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="1019.3" y="181" width="5.0" height="15.0" fill="rgb(232,88,11)" rx="2" ry="2" />
<text  x="1022.28" y="191.5" ></text>
</g>
<g >
<title>SvtBroadcaster::Remove (2 samples, 0.43%)</title><rect x="446.9" y="197" width="5.0" height="15.0" fill="rgb(226,15,26)" rx="2" ry="2" />
<text  x="449.85" y="207.5" ></text>
</g>
<g >
<title>SfxVisibilityItem::GetPresentation (1 samples, 0.21%)</title><rect x="431.8" y="197" width="2.5" height="15.0" fill="rgb(235,48,43)" rx="2" ry="2" />
<text  x="434.79" y="207.5" ></text>
</g>
<g >
<title>mdds::flat_segment_tree&lt;int, bool&gt;::search_tree_for_leaf_node (2 samples, 0.43%)</title><rect x="888.7" y="197" width="5.0" height="15.0" fill="rgb(233,221,42)" rx="2" ry="2" />
<text  x="891.72" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="999.2" y="181" width="2.5" height="15.0" fill="rgb(241,53,36)" rx="2" ry="2" />
<text  x="1002.19" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="933.9" y="165" width="2.5" height="15.0" fill="rgb(237,199,34)" rx="2" ry="2" />
<text  x="936.91" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="841.0" y="165" width="2.5" height="15.0" fill="rgb(251,34,13)" rx="2" ry="2" />
<text  x="844.02" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (4 samples, 0.85%)</title><rect x="989.1" y="181" width="10.1" height="15.0" fill="rgb(253,199,41)" rx="2" ry="2" />
<text  x="992.15" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1024.3" y="181" width="2.5" height="15.0" fill="rgb(234,84,23)" rx="2" ry="2" />
<text  x="1027.30" y="191.5" ></text>
</g>
<g >
<title>vtable for SwIterator&lt;SwClient, SwModify,  (1 samples, 0.21%)</title><rect x="1185.0" y="213" width="2.5" height="15.0" fill="rgb(220,205,40)" rx="2" ry="2" />
<text  x="1187.98" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="416.7" y="181" width="2.5" height="15.0" fill="rgb(209,67,2)" rx="2" ry="2" />
<text  x="419.72" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="326.3" y="165" width="2.6" height="15.0" fill="rgb(244,111,41)" rx="2" ry="2" />
<text  x="329.34" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (15 samples, 3.19%)</title><rect x="123.0" y="181" width="37.6" height="15.0" fill="rgb(236,1,50)" rx="2" ry="2" />
<text  x="125.98" y="191.5" >std..</text>
</g>
<g >
<title>syscall (2 samples, 0.43%)</title><rect x="1019.3" y="165" width="5.0" height="15.0" fill="rgb(221,2,26)" rx="2" ry="2" />
<text  x="1022.28" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="903.8" y="165" width="2.5" height="15.0" fill="rgb(215,163,22)" rx="2" ry="2" />
<text  x="906.79" y="175.5" ></text>
</g>
<g >
<title>SvNumberFormatter::ImpAdjustFormatCodeDefault (2 samples, 0.43%)</title><rect x="175.7" y="197" width="5.0" height="15.0" fill="rgb(245,69,34)" rx="2" ry="2" />
<text  x="178.70" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="838.5" y="181" width="2.5" height="15.0" fill="rgb(215,78,38)" rx="2" ry="2" />
<text  x="841.51" y="191.5" ></text>
</g>
<g >
<title>[libuno_sal.so.3] (3 samples, 0.64%)</title><rect x="256.0" y="213" width="7.6" height="15.0" fill="rgb(234,201,54)" rx="2" ry="2" />
<text  x="259.04" y="223.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="366.5" y="165" width="2.5" height="15.0" fill="rgb(208,70,50)" rx="2" ry="2" />
<text  x="369.51" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="316.3" y="181" width="2.5" height="15.0" fill="rgb(230,201,31)" rx="2" ry="2" />
<text  x="319.30" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1001.7" y="181" width="2.5" height="15.0" fill="rgb(245,1,18)" rx="2" ry="2" />
<text  x="1004.70" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1044.4" y="181" width="2.5" height="15.0" fill="rgb(235,182,2)" rx="2" ry="2" />
<text  x="1047.38" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (4 samples, 0.85%)</title><rect x="45.1" y="181" width="10.1" height="15.0" fill="rgb(247,58,1)" rx="2" ry="2" />
<text  x="48.15" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="918.9" y="165" width="2.5" height="15.0" fill="rgb(245,58,6)" rx="2" ry="2" />
<text  x="921.85" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1054.4" y="165" width="2.5" height="15.0" fill="rgb(253,215,46)" rx="2" ry="2" />
<text  x="1057.43" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (3 samples, 0.64%)</title><rect x="273.6" y="165" width="7.5" height="15.0" fill="rgb(219,155,1)" rx="2" ry="2" />
<text  x="276.62" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="318.8" y="165" width="2.5" height="15.0" fill="rgb(206,146,25)" rx="2" ry="2" />
<text  x="321.81" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1107.1" y="181" width="2.6" height="15.0" fill="rgb(235,177,43)" rx="2" ry="2" />
<text  x="1110.15" y="191.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.21%)</title><rect x="1187.5" y="213" width="2.5" height="15.0" fill="rgb(212,217,8)" rx="2" ry="2" />
<text  x="1190.49" y="223.5" ></text>
</g>
<g >
<title>ScColumn::GetCellValue (2 samples, 0.43%)</title><rect x="351.4" y="197" width="5.1" height="15.0" fill="rgb(240,206,17)" rx="2" ry="2" />
<text  x="354.45" y="207.5" ></text>
</g>
<g >
<title>StringVector::tokenize (1 samples, 0.21%)</title><rect x="441.8" y="197" width="2.5" height="15.0" fill="rgb(226,103,36)" rx="2" ry="2" />
<text  x="444.83" y="207.5" ></text>
</g>
<g >
<title>SfxExtItemPropertySetInfo::getProperties (1 samples, 0.21%)</title><rect x="986.6" y="181" width="2.5" height="15.0" fill="rgb(222,153,23)" rx="2" ry="2" />
<text  x="989.64" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (4 samples, 0.85%)</title><rect x="65.2" y="181" width="10.1" height="15.0" fill="rgb(250,40,30)" rx="2" ry="2" />
<text  x="68.23" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (13 samples, 2.77%)</title><rect x="851.1" y="181" width="32.6" height="15.0" fill="rgb(219,194,41)" rx="2" ry="2" />
<text  x="854.06" y="191.5" >st..</text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1137.3" y="165" width="2.5" height="15.0" fill="rgb(246,128,36)" rx="2" ry="2" />
<text  x="1140.28" y="175.5" ></text>
</g>
<g >
<title>Bitmap::Invert (1 samples, 0.21%)</title><rect x="263.6" y="197" width="2.5" height="15.0" fill="rgb(236,131,25)" rx="2" ry="2" />
<text  x="266.57" y="207.5" ></text>
</g>
<g >
<title>FcCompareValueList (1 samples, 0.21%)</title><rect x="281.1" y="197" width="2.6" height="15.0" fill="rgb(212,166,12)" rx="2" ry="2" />
<text  x="284.15" y="207.5" ></text>
</g>
<g >
<title>ImpEditEngine::CreateLines (1 samples, 0.21%)</title><rect x="293.7" y="197" width="2.5" height="15.0" fill="rgb(236,217,2)" rx="2" ry="2" />
<text  x="296.70" y="207.5" ></text>
</g>
<g >
<title>ScTable::HasColManualBreak (1 samples, 0.21%)</title><rect x="404.2" y="197" width="2.5" height="15.0" fill="rgb(237,60,46)" rx="2" ry="2" />
<text  x="407.17" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="702.9" y="181" width="2.5" height="15.0" fill="rgb(209,137,19)" rx="2" ry="2" />
<text  x="705.94" y="191.5" ></text>
</g>
<g >
<title>non-virtual thunk to i18npool::transliteration_commonclass::transliterateString2String (1 samples, 0.21%)</title><rect x="846.0" y="181" width="2.6" height="15.0" fill="rgb(220,105,50)" rx="2" ry="2" />
<text  x="849.04" y="191.5" ></text>
</g>
<g >
<title>syscall (4 samples, 0.85%)</title><rect x="45.1" y="165" width="10.1" height="15.0" fill="rgb(249,143,45)" rx="2" ry="2" />
<text  x="48.15" y="175.5" ></text>
</g>
<g >
<title>_int_malloc (2 samples, 0.43%)</title><rect x="198.3" y="197" width="5.0" height="15.0" fill="rgb(226,224,27)" rx="2" ry="2" />
<text  x="201.30" y="207.5" ></text>
</g>
<g >
<title>ScImportExport::Doc2Sylk (1 samples, 0.21%)</title><rect x="369.0" y="197" width="2.5" height="15.0" fill="rgb(228,193,6)" rx="2" ry="2" />
<text  x="372.02" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="785.8" y="165" width="2.5" height="15.0" fill="rgb(228,159,40)" rx="2" ry="2" />
<text  x="788.79" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="32.6" y="181" width="2.5" height="15.0" fill="rgb(221,35,38)" rx="2" ry="2" />
<text  x="35.60" y="191.5" ></text>
</g>
<g >
<title>osl_createMutex (1 samples, 0.21%)</title><rect x="923.9" y="197" width="2.5" height="15.0" fill="rgb(207,179,46)" rx="2" ry="2" />
<text  x="926.87" y="207.5" ></text>
</g>
<g >
<title>OutputDevice::GetTextOutline (1 samples, 0.21%)</title><rect x="15.0" y="213" width="2.5" height="15.0" fill="rgb(238,120,19)" rx="2" ry="2" />
<text  x="18.02" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="371.5" y="181" width="2.5" height="15.0" fill="rgb(208,42,30)" rx="2" ry="2" />
<text  x="374.53" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="1011.7" y="181" width="2.6" height="15.0" fill="rgb(218,77,2)" rx="2" ry="2" />
<text  x="1014.74" y="191.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1 samples, 0.21%)</title><rect x="323.8" y="181" width="2.5" height="15.0" fill="rgb(236,173,48)" rx="2" ry="2" />
<text  x="326.83" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="836.0" y="165" width="2.5" height="15.0" fill="rgb(221,164,18)" rx="2" ry="2" />
<text  x="839.00" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="343.9" y="181" width="2.5" height="15.0" fill="rgb(214,207,18)" rx="2" ry="2" />
<text  x="346.91" y="191.5" ></text>
</g>
<g >
<title>syscall (6 samples, 1.28%)</title><rect x="1167.4" y="181" width="15.1" height="15.0" fill="rgb(213,172,46)" rx="2" ry="2" />
<text  x="1170.40" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (8 samples, 1.70%)</title><rect x="97.9" y="181" width="20.1" height="15.0" fill="rgb(240,45,44)" rx="2" ry="2" />
<text  x="100.87" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="828.5" y="149" width="2.5" height="15.0" fill="rgb(240,21,11)" rx="2" ry="2" />
<text  x="831.47" y="159.5" ></text>
</g>
<g >
<title>png_write_find_filter (5 samples, 1.06%)</title><rect x="941.4" y="197" width="12.6" height="15.0" fill="rgb(251,115,24)" rx="2" ry="2" />
<text  x="944.45" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="419.2" y="165" width="2.5" height="15.0" fill="rgb(247,30,9)" rx="2" ry="2" />
<text  x="422.23" y="175.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="1187.5" y="37" width="2.5" height="15.0" fill="rgb(212,161,12)" rx="2" ry="2" />
<text  x="1190.49" y="47.5" ></text>
</g>
<g >
<title>syscall (5 samples, 1.06%)</title><rect x="941.4" y="165" width="12.6" height="15.0" fill="rgb(214,95,10)" rx="2" ry="2" />
<text  x="944.45" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="936.4" y="181" width="2.5" height="15.0" fill="rgb(232,106,47)" rx="2" ry="2" />
<text  x="939.43" y="191.5" ></text>
</g>
<g >
<title>syscall (7 samples, 1.49%)</title><rect x="233.4" y="181" width="17.6" height="15.0" fill="rgb(237,214,44)" rx="2" ry="2" />
<text  x="236.45" y="191.5" ></text>
</g>
<g >
<title>ScInterpreter::Compare (1 samples, 0.21%)</title><rect x="371.5" y="197" width="2.5" height="15.0" fill="rgb(245,8,3)" rx="2" ry="2" />
<text  x="374.53" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="441.8" y="181" width="2.5" height="15.0" fill="rgb(237,135,10)" rx="2" ry="2" />
<text  x="444.83" y="191.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;int&gt;, bool&gt; std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_insert_unique&lt;int const&amp;&gt; (1 samples, 0.21%)</title><rect x="1107.1" y="197" width="2.6" height="15.0" fill="rgb(247,85,37)" rx="2" ry="2" />
<text  x="1110.15" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (1 samples, 0.21%)</title><rect x="456.9" y="181" width="2.5" height="15.0" fill="rgb(227,90,7)" rx="2" ry="2" />
<text  x="459.89" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="1117.2" y="181" width="5.0" height="15.0" fill="rgb(217,25,30)" rx="2" ry="2" />
<text  x="1120.19" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;net::AsyncDNS::Lookup, std::allocator&lt;net::AsyncDNS::Lookup&gt; &gt;::deque (2 samples, 0.43%)</title><rect x="956.5" y="181" width="5.0" height="15.0" fill="rgb(230,129,15)" rx="2" ry="2" />
<text  x="959.51" y="191.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.21%)</title><rect x="361.5" y="165" width="2.5" height="15.0" fill="rgb(234,48,9)" rx="2" ry="2" />
<text  x="364.49" y="175.5" ></text>
</g>
</g>
</svg>
