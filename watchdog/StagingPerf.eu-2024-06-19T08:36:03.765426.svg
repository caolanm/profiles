<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="486.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >StagingPerf.eu Watchdog Profile (2024-06-19T08:36:03.765426)</text>
<text id="details" x="10.00" y="469" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="469" > </text>
<g id="frames">
<g >
<title>ScModelObj::postKeyEvent (6 samples, 30.00%)</title><rect x="10.0" y="341" width="354.0" height="15.0" fill="rgb(210,65,52)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >ScModelObj::postKeyEvent</text>
</g>
<g >
<title>Session::handleMessage (1 samples, 5.00%)</title><rect x="600.0" y="373" width="59.0" height="15.0" fill="rgb(214,223,42)" rx="2" ry="2" />
<text  x="603.00" y="383.5" >Sessio..</text>
</g>
<g >
<title>ScTabViewShell::TabKeyInput (2 samples, 10.00%)</title><rect x="1013.0" y="293" width="118.0" height="15.0" fill="rgb(241,82,47)" rx="2" ry="2" />
<text  x="1016.00" y="303.5" >ScTabViewShell..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="600.0" y="149" width="59.0" height="15.0" fill="rgb(206,43,35)" rx="2" ry="2" />
<text  x="603.00" y="159.5" >handle..</text>
</g>
<g >
<title>std::_Rb_tree&lt;ScTypedStrData, ScTypedStrData, std::_Identity&lt;ScTypedStrData&gt;, std::less&lt;ScTypedStrData&gt;, std::allocator&lt;ScTypedStrData&gt; &gt;::_M_insert_unique&lt;ScTypedStrData&gt; (5 samples, 25.00%)</title><rect x="718.0" y="197" width="295.0" height="15.0" fill="rgb(215,95,46)" rx="2" ry="2" />
<text  x="721.00" y="207.5" >std::_Rb_tree&lt;ScTypedStrData, ScTypedSt..</text>
</g>
<g >
<title>ScInputHandler::UseColData (2 samples, 10.00%)</title><rect x="1013.0" y="261" width="118.0" height="15.0" fill="rgb(244,95,0)" rx="2" ry="2" />
<text  x="1016.00" y="271.5" >ScInputHandler..</text>
</g>
<g >
<title>i18nutil::casefolding::getNextChar (4 samples, 20.00%)</title><rect x="364.0" y="133" width="236.0" height="15.0" fill="rgb(254,174,33)" rx="2" ry="2" />
<text  x="367.00" y="143.5" >i18nutil::casefolding::getNextC..</text>
</g>
<g >
<title>Application::LOKHandleMouseEvent (4 samples, 20.00%)</title><rect x="364.0" y="341" width="236.0" height="15.0" fill="rgb(241,97,43)" rx="2" ry="2" />
<text  x="367.00" y="351.5" >Application::LOKHandleMouseEvent</text>
</g>
<g >
<title>ScInputHandler::GetColData (6 samples, 30.00%)</title><rect x="10.0" y="261" width="354.0" height="15.0" fill="rgb(238,191,31)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >ScInputHandler::GetColData</text>
</g>
<g >
<title>ScColumn::GetDataEntries (4 samples, 20.00%)</title><rect x="364.0" y="229" width="236.0" height="15.0" fill="rgb(218,220,14)" rx="2" ry="2" />
<text  x="367.00" y="239.5" >ScColumn::GetDataEntries</text>
</g>
<g >
<title>ScTypedStrData::operator&lt; (4 samples, 20.00%)</title><rect x="364.0" y="197" width="236.0" height="15.0" fill="rgb(242,63,20)" rx="2" ry="2" />
<text  x="367.00" y="207.5" >ScTypedStrData::operator&lt;</text>
</g>
<g >
<title>i18nutil::oneToOneMappingWithFlag::find (1 samples, 5.00%)</title><rect x="954.0" y="101" width="59.0" height="15.0" fill="rgb(215,60,32)" rx="2" ry="2" />
<text  x="957.00" y="111.5" >i18nut..</text>
</g>
<g >
<title>ChildSession::extTextInputEvent (1 samples, 5.00%)</title><rect x="600.0" y="341" width="59.0" height="15.0" fill="rgb(209,177,32)" rx="2" ry="2" />
<text  x="603.00" y="351.5" >ChildS..</text>
</g>
<g >
<title>i18npool::Transliteration_caseignore::compare (4 samples, 20.00%)</title><rect x="364.0" y="149" width="236.0" height="15.0" fill="rgb(241,51,48)" rx="2" ry="2" />
<text  x="367.00" y="159.5" >i18npool::Transliteration_casei..</text>
</g>
<g >
<title>ScInputHandler::GetColData (1 samples, 5.00%)</title><rect x="600.0" y="229" width="59.0" height="15.0" fill="rgb(247,162,41)" rx="2" ry="2" />
<text  x="603.00" y="239.5" >ScInpu..</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="600.0" y="133" width="59.0" height="15.0" fill="rgb(205,13,27)" rx="2" ry="2" />
<text  x="603.00" y="143.5" >syscall</text>
</g>
<g >
<title>ScInputHandler::StartTable (5 samples, 25.00%)</title><rect x="718.0" y="261" width="295.0" height="15.0" fill="rgb(214,228,22)" rx="2" ry="2" />
<text  x="721.00" y="271.5" >ScInputHandler::StartTable</text>
</g>
<g >
<title>sc::toSpanArray&lt;int, sc::RowSpan&gt; (1 samples, 5.00%)</title><rect x="659.0" y="165" width="59.0" height="15.0" fill="rgb(214,214,6)" rx="2" ry="2" />
<text  x="662.00" y="175.5" >sc::to..</text>
</g>
<g >
<title>ScTypedStrData::operator&lt; (5 samples, 25.00%)</title><rect x="718.0" y="181" width="295.0" height="15.0" fill="rgb(251,87,28)" rx="2" ry="2" />
<text  x="721.00" y="191.5" >ScTypedStrData::operator&lt;</text>
</g>
<g >
<title>i18nutil::casefolding::getNextChar (6 samples, 30.00%)</title><rect x="10.0" y="133" width="354.0" height="15.0" fill="rgb(208,29,1)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >i18nutil::casefolding::getNextChar</text>
</g>
<g >
<title>non-virtual thunk to i18npool::Transliteration_caseignore::compareString (5 samples, 25.00%)</title><rect x="718.0" y="149" width="295.0" height="15.0" fill="rgb(254,107,39)" rx="2" ry="2" />
<text  x="721.00" y="159.5" >non-virtual thunk to i18npool::Translit..</text>
</g>
<g >
<title>doc_postKeyEvent (2 samples, 10.00%)</title><rect x="1013.0" y="341" width="118.0" height="15.0" fill="rgb(253,4,36)" rx="2" ry="2" />
<text  x="1016.00" y="351.5" >doc_postKeyEvent</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="1013.0" y="165" width="59.0" height="15.0" fill="rgb(214,181,31)" rx="2" ry="2" />
<text  x="1016.00" y="175.5" >handle..</text>
</g>
<g >
<title>free (1 samples, 5.00%)</title><rect x="600.0" y="181" width="59.0" height="15.0" fill="rgb(233,153,40)" rx="2" ry="2" />
<text  x="603.00" y="191.5" >free</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 5.00%)</title><rect x="659.0" y="293" width="59.0" height="15.0" fill="rgb(234,97,43)" rx="2" ry="2" />
<text  x="662.00" y="303.5" >std::_..</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="1131.0" y="37" width="59.0" height="15.0" fill="rgb(212,216,18)" rx="2" ry="2" />
<text  x="1134.00" y="47.5" >syscall</text>
</g>
<g >
<title>Dialog::EndDialog (1 samples, 5.00%)</title><rect x="1131.0" y="373" width="59.0" height="15.0" fill="rgb(217,140,54)" rx="2" ry="2" />
<text  x="1134.00" y="383.5" >Dialog..</text>
</g>
<g >
<title>syscall (3 samples, 15.00%)</title><rect x="364.0" y="69" width="177.0" height="15.0" fill="rgb(221,152,25)" rx="2" ry="2" />
<text  x="367.00" y="79.5" >syscall</text>
</g>
<g >
<title>ChildSession::_handleInput (6 samples, 30.00%)</title><rect x="10.0" y="389" width="354.0" height="15.0" fill="rgb(221,123,44)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >ChildSession::_handleInput</text>
</g>
<g >
<title>ScViewFunc::InsertCells (1 samples, 5.00%)</title><rect x="659.0" y="277" width="59.0" height="15.0" fill="rgb(228,77,30)" rx="2" ry="2" />
<text  x="662.00" y="287.5" >ScView..</text>
</g>
<g >
<title>utl::TransliterationWrapper::compareString (5 samples, 25.00%)</title><rect x="718.0" y="165" width="295.0" height="15.0" fill="rgb(239,182,39)" rx="2" ry="2" />
<text  x="721.00" y="175.5" >utl::TransliterationWrapper::compareStr..</text>
</g>
<g >
<title>doc_postWindowExtTextInputEvent (1 samples, 5.00%)</title><rect x="600.0" y="325" width="59.0" height="15.0" fill="rgb(222,92,28)" rx="2" ry="2" />
<text  x="603.00" y="335.5" >doc_po..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="1013.0" y="181" width="59.0" height="15.0" fill="rgb(218,17,27)" rx="2" ry="2" />
<text  x="1016.00" y="191.5" >_IO_fu..</text>
</g>
<g >
<title>OutputDevice::ImplDevicePixelToLogicWidth (1 samples, 5.00%)</title><rect x="1131.0" y="85" width="59.0" height="15.0" fill="rgb(207,106,43)" rx="2" ry="2" />
<text  x="1134.00" y="95.5" >Output..</text>
</g>
<g >
<title>non-virtual thunk to i18npool::Transliteration_caseignore::compareString (6 samples, 30.00%)</title><rect x="10.0" y="165" width="354.0" height="15.0" fill="rgb(221,193,32)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >non-virtual thunk to i18npool::Transliteration_c..</text>
</g>
<g >
<title>utl::TransliterationWrapper::compareString (6 samples, 30.00%)</title><rect x="10.0" y="181" width="354.0" height="15.0" fill="rgb(227,64,54)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >utl::TransliterationWrapper::compareString</text>
</g>
<g >
<title>ScInputHandler::StartTable (6 samples, 30.00%)</title><rect x="10.0" y="277" width="354.0" height="15.0" fill="rgb(220,188,24)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >ScInputHandler::StartTable</text>
</g>
<g >
<title>ImpEditEngine::FormatDoc (1 samples, 5.00%)</title><rect x="1131.0" y="181" width="59.0" height="15.0" fill="rgb(254,202,27)" rx="2" ry="2" />
<text  x="1134.00" y="191.5" >ImpEdi..</text>
</g>
<g >
<title>doc_postKeyEvent (6 samples, 30.00%)</title><rect x="10.0" y="357" width="354.0" height="15.0" fill="rgb(215,163,43)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >doc_postKeyEvent</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="1013.0" y="149" width="59.0" height="15.0" fill="rgb(243,173,14)" rx="2" ry="2" />
<text  x="1016.00" y="159.5" >syscall</text>
</g>
<g >
<title>ScDocument::GetDataEntries (4 samples, 20.00%)</title><rect x="364.0" y="245" width="236.0" height="15.0" fill="rgb(245,71,52)" rx="2" ry="2" />
<text  x="367.00" y="255.5" >ScDocument::GetDataEntries</text>
</g>
<g >
<title>ScDocFunc::InsertCells (1 samples, 5.00%)</title><rect x="1131.0" y="325" width="59.0" height="15.0" fill="rgb(240,195,37)" rx="2" ry="2" />
<text  x="1134.00" y="335.5" >ScDocF..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="659.0" y="133" width="59.0" height="15.0" fill="rgb(243,194,35)" rx="2" ry="2" />
<text  x="662.00" y="143.5" >handle..</text>
</g>
<g >
<title>std::_Rb_tree&lt;ScTypedStrData, ScTypedStrData, std::_Identity&lt;ScTypedStrData&gt;, std::less&lt;ScTypedStrData&gt;, std::allocator&lt;ScTypedStrData&gt; &gt;::_M_insert_unique&lt;ScTypedStrData&gt; (6 samples, 30.00%)</title><rect x="10.0" y="213" width="354.0" height="15.0" fill="rgb(243,216,8)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >std::_Rb_tree&lt;ScTypedStrData, ScTypedStrData, st..</text>
</g>
<g >
<title>i18npool::Transliteration_caseignore::compare (5 samples, 25.00%)</title><rect x="718.0" y="133" width="295.0" height="15.0" fill="rgb(246,203,21)" rx="2" ry="2" />
<text  x="721.00" y="143.5" >i18npool::Transliteration_caseignore::c..</text>
</g>
<g >
<title>ScInputHandler::StartTable (1 samples, 5.00%)</title><rect x="600.0" y="245" width="59.0" height="15.0" fill="rgb(228,92,16)" rx="2" ry="2" />
<text  x="603.00" y="255.5" >ScInpu..</text>
</g>
<g >
<title>i18nutil::casefolding::getNextChar (5 samples, 25.00%)</title><rect x="718.0" y="117" width="295.0" height="15.0" fill="rgb(253,140,40)" rx="2" ry="2" />
<text  x="721.00" y="127.5" >i18nutil::casefolding::getNextChar</text>
</g>
<g >
<title>ScDocument::SetOptimalHeight (1 samples, 5.00%)</title><rect x="659.0" y="229" width="59.0" height="15.0" fill="rgb(243,140,39)" rx="2" ry="2" />
<text  x="662.00" y="239.5" >ScDocu..</text>
</g>
<g >
<title>ScColumn::GetOptimalHeight (1 samples, 5.00%)</title><rect x="659.0" y="197" width="59.0" height="15.0" fill="rgb(228,34,17)" rx="2" ry="2" />
<text  x="662.00" y="207.5" >ScColu..</text>
</g>
<g >
<title>ScInputHandler::GetColData (5 samples, 25.00%)</title><rect x="718.0" y="245" width="295.0" height="15.0" fill="rgb(243,174,20)" rx="2" ry="2" />
<text  x="721.00" y="255.5" >ScInputHandler::GetColData</text>
</g>
<g >
<title>Dialog::EndDialog (1 samples, 5.00%)</title><rect x="659.0" y="309" width="59.0" height="15.0" fill="rgb(247,127,7)" rx="2" ry="2" />
<text  x="662.00" y="319.5" >Dialog..</text>
</g>
<g >
<title>i18npool::Transliteration_caseignore::compare (2 samples, 10.00%)</title><rect x="1013.0" y="197" width="118.0" height="15.0" fill="rgb(238,173,30)" rx="2" ry="2" />
<text  x="1016.00" y="207.5" >i18npool::Tran..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="600.0" y="165" width="59.0" height="15.0" fill="rgb(244,169,16)" rx="2" ry="2" />
<text  x="603.00" y="175.5" >_IO_fu..</text>
</g>
<g >
<title>ScDocument::SetOptimalHeight (1 samples, 5.00%)</title><rect x="1131.0" y="293" width="59.0" height="15.0" fill="rgb(211,128,5)" rx="2" ry="2" />
<text  x="1134.00" y="303.5" >ScDocu..</text>
</g>
<g >
<title>ImplWindowFrameProc (5 samples, 25.00%)</title><rect x="718.0" y="309" width="295.0" height="15.0" fill="rgb(228,144,50)" rx="2" ry="2" />
<text  x="721.00" y="319.5" >ImplWindowFrameProc</text>
</g>
<g >
<title>ChildSession::keyEvent (2 samples, 10.00%)</title><rect x="1013.0" y="357" width="118.0" height="15.0" fill="rgb(218,161,34)" rx="2" ry="2" />
<text  x="1016.00" y="367.5" >ChildSession::..</text>
</g>
<g >
<title>ImplWindowFrameProc (1 samples, 5.00%)</title><rect x="600.0" y="293" width="59.0" height="15.0" fill="rgb(226,82,13)" rx="2" ry="2" />
<text  x="603.00" y="303.5" >ImplWi..</text>
</g>
<g >
<title>i18nutil::casefolding::getValue (3 samples, 15.00%)</title><rect x="364.0" y="117" width="177.0" height="15.0" fill="rgb(225,85,49)" rx="2" ry="2" />
<text  x="367.00" y="127.5" >i18nutil::casefolding::..</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="954.0" y="53" width="59.0" height="15.0" fill="rgb(248,165,33)" rx="2" ry="2" />
<text  x="957.00" y="63.5" >syscall</text>
</g>
<g >
<title>handleUserProfileSignal (6 samples, 30.00%)</title><rect x="10.0" y="85" width="354.0" height="15.0" fill="rgb(235,128,14)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >handleUserProfileSignal</text>
</g>
<g >
<title>ScInputHandler::KeyInput (6 samples, 30.00%)</title><rect x="10.0" y="293" width="354.0" height="15.0" fill="rgb(248,202,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >ScInputHandler::KeyInput</text>
</g>
<g >
<title>ScDocument::GetDataEntries (1 samples, 5.00%)</title><rect x="600.0" y="213" width="59.0" height="15.0" fill="rgb(212,122,44)" rx="2" ry="2" />
<text  x="603.00" y="223.5" >ScDocu..</text>
</g>
<g >
<title>syscall (6 samples, 30.00%)</title><rect x="10.0" y="69" width="354.0" height="15.0" fill="rgb(224,186,41)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >syscall</text>
</g>
<g >
<title>vcl::Window::PostExtTextInputEvent (5 samples, 25.00%)</title><rect x="718.0" y="325" width="295.0" height="15.0" fill="rgb(205,89,41)" rx="2" ry="2" />
<text  x="721.00" y="335.5" >vcl::Window::PostExtTextInputEvent</text>
</g>
<g >
<title>ImpEditEngine::FormatAndLayout (1 samples, 5.00%)</title><rect x="1131.0" y="197" width="59.0" height="15.0" fill="rgb(222,181,36)" rx="2" ry="2" />
<text  x="1134.00" y="207.5" >ImpEdi..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="1072.0" y="133" width="59.0" height="15.0" fill="rgb(232,42,23)" rx="2" ry="2" />
<text  x="1075.00" y="143.5" >_IO_fu..</text>
</g>
<g >
<title>i18nutil::oneToOneMappingWithFlag::find (1 samples, 5.00%)</title><rect x="541.0" y="117" width="59.0" height="15.0" fill="rgb(235,166,12)" rx="2" ry="2" />
<text  x="544.00" y="127.5" >i18nut..</text>
</g>
<g >
<title>ScColumn::GetDataEntries (5 samples, 25.00%)</title><rect x="718.0" y="213" width="295.0" height="15.0" fill="rgb(205,57,25)" rx="2" ry="2" />
<text  x="721.00" y="223.5" >ScColumn::GetDataEntries</text>
</g>
<g >
<title>ChildSession::mouseEvent (4 samples, 20.00%)</title><rect x="364.0" y="389" width="236.0" height="15.0" fill="rgb(241,136,42)" rx="2" ry="2" />
<text  x="367.00" y="399.5" >ChildSession::mouseEvent</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="954.0" y="85" width="59.0" height="15.0" fill="rgb(221,174,2)" rx="2" ry="2" />
<text  x="957.00" y="95.5" >_IO_fu..</text>
</g>
<g >
<title>ScInputHandler::InputCommand (5 samples, 25.00%)</title><rect x="718.0" y="277" width="295.0" height="15.0" fill="rgb(247,96,46)" rx="2" ry="2" />
<text  x="721.00" y="287.5" >ScInputHandler::InputCommand</text>
</g>
<g >
<title>ScInputHandler::KeyInput (2 samples, 10.00%)</title><rect x="1013.0" y="277" width="118.0" height="15.0" fill="rgb(213,73,31)" rx="2" ry="2" />
<text  x="1016.00" y="287.5" >ScInputHandler..</text>
</g>
<g >
<title>i18nutil::casefolding::getValue (1 samples, 5.00%)</title><rect x="1072.0" y="165" width="59.0" height="15.0" fill="rgb(207,95,41)" rx="2" ry="2" />
<text  x="1075.00" y="175.5" >i18nut..</text>
</g>
<g >
<title>i18nutil::casefolding::getValue (4 samples, 20.00%)</title><rect x="718.0" y="101" width="236.0" height="15.0" fill="rgb(230,205,17)" rx="2" ry="2" />
<text  x="721.00" y="111.5" >i18nutil::casefolding::getValue</text>
</g>
<g >
<title>ScColumn::GetOptimalHeight (1 samples, 5.00%)</title><rect x="1131.0" y="261" width="59.0" height="15.0" fill="rgb(244,216,10)" rx="2" ry="2" />
<text  x="1134.00" y="271.5" >ScColu..</text>
</g>
<g >
<title>ScColumn::GetNeededSize (1 samples, 5.00%)</title><rect x="1131.0" y="245" width="59.0" height="15.0" fill="rgb(241,94,9)" rx="2" ry="2" />
<text  x="1134.00" y="255.5" >ScColu..</text>
</g>
<g >
<title>ScGridWindow::MouseButtonUp (4 samples, 20.00%)</title><rect x="364.0" y="309" width="236.0" height="15.0" fill="rgb(228,63,45)" rx="2" ry="2" />
<text  x="367.00" y="319.5" >ScGridWindow::MouseButtonUp</text>
</g>
<g >
<title>ImplLOKHandleMouseEvent (4 samples, 20.00%)</title><rect x="364.0" y="325" width="236.0" height="15.0" fill="rgb(234,12,8)" rx="2" ry="2" />
<text  x="367.00" y="335.5" >ImplLOKHandleMouseEvent</text>
</g>
<g >
<title>ImpEditEngine::SetUpdateLayout (1 samples, 5.00%)</title><rect x="1131.0" y="213" width="59.0" height="15.0" fill="rgb(238,89,11)" rx="2" ry="2" />
<text  x="1134.00" y="223.5" >ImpEdi..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="1131.0" y="69" width="59.0" height="15.0" fill="rgb(242,52,4)" rx="2" ry="2" />
<text  x="1134.00" y="79.5" >_IO_fu..</text>
</g>
<g >
<title>utl::TransliterationWrapper::isMatch (2 samples, 10.00%)</title><rect x="1013.0" y="245" width="118.0" height="15.0" fill="rgb(216,191,10)" rx="2" ry="2" />
<text  x="1016.00" y="255.5" >utl::Translite..</text>
</g>
<g >
<title>ChildSession::_handleInput (1 samples, 5.00%)</title><rect x="600.0" y="357" width="59.0" height="15.0" fill="rgb(235,66,10)" rx="2" ry="2" />
<text  x="603.00" y="367.5" >ChildS..</text>
</g>
<g >
<title>handleUserProfileSignal (3 samples, 15.00%)</title><rect x="364.0" y="85" width="177.0" height="15.0" fill="rgb(210,101,6)" rx="2" ry="2" />
<text  x="367.00" y="95.5" >handleUserProfileSignal</text>
</g>
<g >
<title>_IO_funlockfile (6 samples, 30.00%)</title><rect x="10.0" y="101" width="354.0" height="15.0" fill="rgb(211,189,0)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >_IO_funlockfile</text>
</g>
<g >
<title>syscall (4 samples, 20.00%)</title><rect x="718.0" y="53" width="236.0" height="15.0" fill="rgb(239,102,52)" rx="2" ry="2" />
<text  x="721.00" y="63.5" >syscall</text>
</g>
<g >
<title>GetTextArray (1 samples, 5.00%)</title><rect x="1131.0" y="117" width="59.0" height="15.0" fill="rgb(238,111,8)" rx="2" ry="2" />
<text  x="1134.00" y="127.5" >GetTex..</text>
</g>
<g >
<title>ChildSession::_handleInput (8 samples, 40.00%)</title><rect x="659.0" y="373" width="472.0" height="15.0" fill="rgb(208,120,1)" rx="2" ry="2" />
<text  x="662.00" y="383.5" >ChildSession::_handleInput</text>
</g>
<g >
<title>ImplCallCommand (5 samples, 25.00%)</title><rect x="718.0" y="293" width="295.0" height="15.0" fill="rgb(210,89,54)" rx="2" ry="2" />
<text  x="721.00" y="303.5" >ImplCallCommand</text>
</g>
<g >
<title>all (20 samples, 100%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(235,54,33)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>utl::TransliterationWrapper::equals (2 samples, 10.00%)</title><rect x="1013.0" y="229" width="118.0" height="15.0" fill="rgb(234,180,41)" rx="2" ry="2" />
<text  x="1016.00" y="239.5" >utl::Translite..</text>
</g>
<g >
<title>[unknown] (20 samples, 100.00%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(217,163,14)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >[unknown]</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="1072.0" y="101" width="59.0" height="15.0" fill="rgb(240,15,18)" rx="2" ry="2" />
<text  x="1075.00" y="111.5" >syscall</text>
</g>
<g >
<title>i18nutil::casefolding::getNextChar (1 samples, 5.00%)</title><rect x="1072.0" y="181" width="59.0" height="15.0" fill="rgb(224,103,49)" rx="2" ry="2" />
<text  x="1075.00" y="191.5" >i18nut..</text>
</g>
<g >
<title>lcl_sendDialogEvent (1 samples, 5.00%)</title><rect x="659.0" y="341" width="59.0" height="15.0" fill="rgb(229,65,47)" rx="2" ry="2" />
<text  x="662.00" y="351.5" >lcl_se..</text>
</g>
<g >
<title>ScDocument::GetDataEntries (5 samples, 25.00%)</title><rect x="718.0" y="229" width="295.0" height="15.0" fill="rgb(216,198,23)" rx="2" ry="2" />
<text  x="721.00" y="239.5" >ScDocument::GetDataEntries</text>
</g>
<g >
<title>ScViewFunc::InsertCells (1 samples, 5.00%)</title><rect x="1131.0" y="341" width="59.0" height="15.0" fill="rgb(224,131,6)" rx="2" ry="2" />
<text  x="1134.00" y="351.5" >ScView..</text>
</g>
<g >
<title>ScColumn::GetDataEntries (6 samples, 30.00%)</title><rect x="10.0" y="229" width="354.0" height="15.0" fill="rgb(220,210,49)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >ScColumn::GetDataEntries</text>
</g>
<g >
<title>ScDocFunc::AdjustRowHeight (1 samples, 5.00%)</title><rect x="659.0" y="245" width="59.0" height="15.0" fill="rgb(210,225,43)" rx="2" ry="2" />
<text  x="662.00" y="255.5" >ScDocF..</text>
</g>
<g >
<title>ImpEditEngine::CreateLines (1 samples, 5.00%)</title><rect x="1131.0" y="149" width="59.0" height="15.0" fill="rgb(224,30,27)" rx="2" ry="2" />
<text  x="1134.00" y="159.5" >ImpEdi..</text>
</g>
<g >
<title>SvxFont::QuickGetTextSize (1 samples, 5.00%)</title><rect x="1131.0" y="133" width="59.0" height="15.0" fill="rgb(249,1,16)" rx="2" ry="2" />
<text  x="1134.00" y="143.5" >SvxFon..</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="1131.0" y="53" width="59.0" height="15.0" fill="rgb(234,8,0)" rx="2" ry="2" />
<text  x="1134.00" y="63.5" >handle..</text>
</g>
<g >
<title>ChildSession::extTextInputEvent (5 samples, 25.00%)</title><rect x="718.0" y="357" width="295.0" height="15.0" fill="rgb(218,76,41)" rx="2" ry="2" />
<text  x="721.00" y="367.5" >ChildSession::extTextInputEvent</text>
</g>
<g >
<title>jsdialog::ExecuteAction (1 samples, 5.00%)</title><rect x="659.0" y="325" width="59.0" height="15.0" fill="rgb(228,138,36)" rx="2" ry="2" />
<text  x="662.00" y="335.5" >jsdial..</text>
</g>
<g >
<title>sc::SingleColumnSpanSet::getSpans (1 samples, 5.00%)</title><rect x="659.0" y="181" width="59.0" height="15.0" fill="rgb(252,100,18)" rx="2" ry="2" />
<text  x="662.00" y="191.5" >sc::Si..</text>
</g>
<g >
<title>std::_Rb_tree&lt;ScTypedStrData, ScTypedStrData, std::_Identity&lt;ScTypedStrData&gt;, std::less&lt;ScTypedStrData&gt;, std::allocator&lt;ScTypedStrData&gt; &gt;::_M_insert_unique&lt;ScTypedStrData&gt; (4 samples, 20.00%)</title><rect x="364.0" y="213" width="236.0" height="15.0" fill="rgb(238,172,0)" rx="2" ry="2" />
<text  x="367.00" y="223.5" >std::_Rb_tree&lt;ScTypedStrData, S..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="541.0" y="101" width="59.0" height="15.0" fill="rgb(227,95,13)" rx="2" ry="2" />
<text  x="544.00" y="111.5" >_IO_fu..</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="541.0" y="69" width="59.0" height="15.0" fill="rgb(252,207,19)" rx="2" ry="2" />
<text  x="544.00" y="79.5" >syscall</text>
</g>
<g >
<title>u_foldCase_73@plt (1 samples, 5.00%)</title><rect x="1072.0" y="149" width="59.0" height="15.0" fill="rgb(226,61,20)" rx="2" ry="2" />
<text  x="1075.00" y="159.5" >u_fold..</text>
</g>
<g >
<title>_IO_funlockfile (3 samples, 15.00%)</title><rect x="364.0" y="101" width="177.0" height="15.0" fill="rgb(210,203,53)" rx="2" ry="2" />
<text  x="367.00" y="111.5" >_IO_funlockfile</text>
</g>
<g >
<title>ScGridWindow::KeyInput (2 samples, 10.00%)</title><rect x="1013.0" y="309" width="118.0" height="15.0" fill="rgb(211,10,46)" rx="2" ry="2" />
<text  x="1016.00" y="319.5" >ScGridWindow::..</text>
</g>
<g >
<title>i18nutil::oneToOneMappingWithFlag::find (6 samples, 30.00%)</title><rect x="10.0" y="117" width="354.0" height="15.0" fill="rgb(236,171,38)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >i18nutil::oneToOneMappingWithFlag::find</text>
</g>
<g >
<title>i18npool::Transliteration_caseignore::compare (6 samples, 30.00%)</title><rect x="10.0" y="149" width="354.0" height="15.0" fill="rgb(243,58,20)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >i18npool::Transliteration_caseignore::compare</text>
</g>
<g >
<title>ScModelObj::postKeyEvent (2 samples, 10.00%)</title><rect x="1013.0" y="325" width="118.0" height="15.0" fill="rgb(253,184,39)" rx="2" ry="2" />
<text  x="1016.00" y="335.5" >ScModelObj::po..</text>
</g>
<g >
<title>EditEngine::SetUpdateLayout (1 samples, 5.00%)</title><rect x="1131.0" y="229" width="59.0" height="15.0" fill="rgb(208,145,19)" rx="2" ry="2" />
<text  x="1134.00" y="239.5" >EditEn..</text>
</g>
<g >
<title>_IO_funlockfile (4 samples, 20.00%)</title><rect x="718.0" y="85" width="236.0" height="15.0" fill="rgb(252,37,18)" rx="2" ry="2" />
<text  x="721.00" y="95.5" >_IO_funlockfile</text>
</g>
<g >
<title>ImplCallCommand (1 samples, 5.00%)</title><rect x="600.0" y="277" width="59.0" height="15.0" fill="rgb(205,43,22)" rx="2" ry="2" />
<text  x="603.00" y="287.5" >ImplCa..</text>
</g>
<g >
<title>doc_postMouseEvent (4 samples, 20.00%)</title><rect x="364.0" y="373" width="236.0" height="15.0" fill="rgb(228,178,44)" rx="2" ry="2" />
<text  x="367.00" y="383.5" >doc_postMouseEvent</text>
</g>
<g >
<title>syscall (1 samples, 5.00%)</title><rect x="659.0" y="117" width="59.0" height="15.0" fill="rgb(232,162,1)" rx="2" ry="2" />
<text  x="662.00" y="127.5" >syscall</text>
</g>
<g >
<title>ScDocFunc::InsertCells (1 samples, 5.00%)</title><rect x="659.0" y="261" width="59.0" height="15.0" fill="rgb(223,117,14)" rx="2" ry="2" />
<text  x="662.00" y="271.5" >ScDocF..</text>
</g>
<g >
<title>ScTable::SetOptimalHeight (1 samples, 5.00%)</title><rect x="659.0" y="213" width="59.0" height="15.0" fill="rgb(239,114,11)" rx="2" ry="2" />
<text  x="662.00" y="223.5" >ScTabl..</text>
</g>
<g >
<title>ScInputHandler::InputCommand (1 samples, 5.00%)</title><rect x="600.0" y="261" width="59.0" height="15.0" fill="rgb(242,223,36)" rx="2" ry="2" />
<text  x="603.00" y="271.5" >ScInpu..</text>
</g>
<g >
<title>ScDocument::GetDataEntries (6 samples, 30.00%)</title><rect x="10.0" y="245" width="354.0" height="15.0" fill="rgb(229,186,2)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >ScDocument::GetDataEntries</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="1072.0" y="117" width="59.0" height="15.0" fill="rgb(206,168,45)" rx="2" ry="2" />
<text  x="1075.00" y="127.5" >handle..</text>
</g>
<g >
<title>std::_Rb_tree&lt;ScTypedStrData, ScTypedStrData, std::_Identity&lt;ScTypedStrData&gt;, std::less&lt;ScTypedStrData&gt;, std::allocator&lt;ScTypedStrData&gt; &gt;::_M_erase (1 samples, 5.00%)</title><rect x="600.0" y="197" width="59.0" height="15.0" fill="rgb(227,154,1)" rx="2" ry="2" />
<text  x="603.00" y="207.5" >std::_..</text>
</g>
<g >
<title>ImpEditEngine::FormatParagraphs (1 samples, 5.00%)</title><rect x="1131.0" y="165" width="59.0" height="15.0" fill="rgb(248,77,8)" rx="2" ry="2" />
<text  x="1134.00" y="175.5" >ImpEdi..</text>
</g>
<g >
<title>kitbroker (20 samples, 100.00%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(227,205,5)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >kitbroker</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 5.00%)</title><rect x="1131.0" y="357" width="59.0" height="15.0" fill="rgb(249,56,50)" rx="2" ry="2" />
<text  x="1134.00" y="367.5" >std::_..</text>
</g>
<g >
<title>ScTable::SetOptimalHeight (1 samples, 5.00%)</title><rect x="1131.0" y="277" width="59.0" height="15.0" fill="rgb(222,175,9)" rx="2" ry="2" />
<text  x="1134.00" y="287.5" >ScTabl..</text>
</g>
<g >
<title>doc_postWindowExtTextInputEvent (5 samples, 25.00%)</title><rect x="718.0" y="341" width="295.0" height="15.0" fill="rgb(206,126,51)" rx="2" ry="2" />
<text  x="721.00" y="351.5" >doc_postWindowExtTextInputEvent</text>
</g>
<g >
<title>Document::forwardToChild (1 samples, 5.00%)</title><rect x="600.0" y="389" width="59.0" height="15.0" fill="rgb(212,12,54)" rx="2" ry="2" />
<text  x="603.00" y="399.5" >Docume..</text>
</g>
<g >
<title>ScInputHandler::GetColData (4 samples, 20.00%)</title><rect x="364.0" y="261" width="236.0" height="15.0" fill="rgb(207,27,37)" rx="2" ry="2" />
<text  x="367.00" y="271.5" >ScInputHandler::GetColData</text>
</g>
<g >
<title>handleUserProfileSignal (4 samples, 20.00%)</title><rect x="718.0" y="69" width="236.0" height="15.0" fill="rgb(218,78,22)" rx="2" ry="2" />
<text  x="721.00" y="79.5" >handleUserProfileSignal</text>
</g>
<g >
<title>jsdialog::ExecuteAction (1 samples, 5.00%)</title><rect x="1131.0" y="389" width="59.0" height="15.0" fill="rgb(209,104,4)" rx="2" ry="2" />
<text  x="1134.00" y="399.5" >jsdial..</text>
</g>
<g >
<title>_IO_funlockfile (1 samples, 5.00%)</title><rect x="659.0" y="149" width="59.0" height="15.0" fill="rgb(240,18,18)" rx="2" ry="2" />
<text  x="662.00" y="159.5" >_IO_fu..</text>
</g>
<g >
<title>ChildSession::keyEvent (6 samples, 30.00%)</title><rect x="10.0" y="373" width="354.0" height="15.0" fill="rgb(251,93,6)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >ChildSession::keyEvent</text>
</g>
<g >
<title>OutputDevice::GetTextArray (1 samples, 5.00%)</title><rect x="1131.0" y="101" width="59.0" height="15.0" fill="rgb(234,126,35)" rx="2" ry="2" />
<text  x="1134.00" y="111.5" >Output..</text>
</g>
<g >
<title>vcl::Window::PostExtTextInputEvent (1 samples, 5.00%)</title><rect x="600.0" y="309" width="59.0" height="15.0" fill="rgb(227,39,16)" rx="2" ry="2" />
<text  x="603.00" y="319.5" >vcl::W..</text>
</g>
<g >
<title>ScGridWindow::KeyInput (6 samples, 30.00%)</title><rect x="10.0" y="325" width="354.0" height="15.0" fill="rgb(224,8,26)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >ScGridWindow::KeyInput</text>
</g>
<g >
<title>non-virtual thunk to i18npool::Transliteration_caseignore::equals (2 samples, 10.00%)</title><rect x="1013.0" y="213" width="118.0" height="15.0" fill="rgb(242,0,41)" rx="2" ry="2" />
<text  x="1016.00" y="223.5" >non-virtual th..</text>
</g>
<g >
<title>ScTabViewShell::TabKeyInput (6 samples, 30.00%)</title><rect x="10.0" y="309" width="354.0" height="15.0" fill="rgb(219,44,44)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >ScTabViewShell::TabKeyInput</text>
</g>
<g >
<title>Session::handleMessage (8 samples, 40.00%)</title><rect x="659.0" y="389" width="472.0" height="15.0" fill="rgb(224,14,11)" rx="2" ry="2" />
<text  x="662.00" y="399.5" >Session::handleMessage</text>
</g>
<g >
<title>ScModelObj::postMouseEvent (4 samples, 20.00%)</title><rect x="364.0" y="357" width="236.0" height="15.0" fill="rgb(214,40,50)" rx="2" ry="2" />
<text  x="367.00" y="367.5" >ScModelObj::postMouseEvent</text>
</g>
<g >
<title>ScInputHandler::StartTable (4 samples, 20.00%)</title><rect x="364.0" y="277" width="236.0" height="15.0" fill="rgb(207,183,18)" rx="2" ry="2" />
<text  x="367.00" y="287.5" >ScInputHandler::StartTable</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="954.0" y="69" width="59.0" height="15.0" fill="rgb(230,30,49)" rx="2" ry="2" />
<text  x="957.00" y="79.5" >handle..</text>
</g>
<g >
<title>ScInputHandler::SetMode (4 samples, 20.00%)</title><rect x="364.0" y="293" width="236.0" height="15.0" fill="rgb(205,136,15)" rx="2" ry="2" />
<text  x="367.00" y="303.5" >ScInputHandler::SetMode</text>
</g>
<g >
<title>handleUserProfileSignal (1 samples, 5.00%)</title><rect x="541.0" y="85" width="59.0" height="15.0" fill="rgb(229,139,51)" rx="2" ry="2" />
<text  x="544.00" y="95.5" >handle..</text>
</g>
<g >
<title>non-virtual thunk to i18npool::Transliteration_caseignore::compareString (4 samples, 20.00%)</title><rect x="364.0" y="165" width="236.0" height="15.0" fill="rgb(231,85,43)" rx="2" ry="2" />
<text  x="367.00" y="175.5" >non-virtual thunk to i18npool::..</text>
</g>
<g >
<title>ScDocFunc::AdjustRowHeight (1 samples, 5.00%)</title><rect x="1131.0" y="309" width="59.0" height="15.0" fill="rgb(249,120,28)" rx="2" ry="2" />
<text  x="1134.00" y="319.5" >ScDocF..</text>
</g>
<g >
<title>ChildSession::dialogEvent (1 samples, 5.00%)</title><rect x="659.0" y="357" width="59.0" height="15.0" fill="rgb(217,145,35)" rx="2" ry="2" />
<text  x="662.00" y="367.5" >ChildS..</text>
</g>
<g >
<title>utl::TransliterationWrapper::compareString (4 samples, 20.00%)</title><rect x="364.0" y="181" width="236.0" height="15.0" fill="rgb(243,111,24)" rx="2" ry="2" />
<text  x="367.00" y="191.5" >utl::TransliterationWrapper::co..</text>
</g>
<g >
<title>ScTypedStrData::operator&lt; (6 samples, 30.00%)</title><rect x="10.0" y="197" width="354.0" height="15.0" fill="rgb(215,10,52)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >ScTypedStrData::operator&lt;</text>
</g>
</g>
</svg>
